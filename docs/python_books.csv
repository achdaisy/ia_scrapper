Identifier,Title,Author,Description,collection
learn-java-in-21-days,Learn Java In 21 Days,G,Learn about Java in 21 days,opensource
programming-resources_202402,Programming Resources,Unknown Author,These are the online resources that most of it are related in programming.,opensource
programming-resources_20240211,Programming Resources,Unknown Author,These are the online resources that most of it are related in programming.,opensource
java-web-socket-programming-develop-deploy-and-secure-dynamic-web-applications-coward-2013-09-18,"Java Web Socket Programming Develop, Deploy, And Secure Dynamic Web Applications [ Coward 2013 09 18]",f,Programacion websocket java<br />,opensource
list-of-solution-manual-and-test-bank,List Of Solution Manual And Test Bank,s,"Here is the list of available and ready resources (about 3000 Solution Manual and Test Bank). This PDF file has 107 pages.<br />You can search on it easily.<br /><br />Contact me in order to access the whole complete document.<br />Email: solution9159@gmail.com<br />WhatsApp: https://wa.me/message/2H3BV2L5TTSUF1<br />Telegram: https://t.me/solutionmanual<br /><br />Test Bank for Technician's Guide to Programmable Controllers, 7th Edition by Terry Borden, Richard A. Cox <br />Test Bank for California Politics and Government: A Practical Approach, 15th Edition by Larry N. Gerston, Terry Christensen, Mary Currin-Percival, Garrick Percival <br />Instructor's Solutions Manual for Building Python Programs, 1st Edition Stuart Reges, Marty Stepp, Allison Obourn<br />Test Bank for Starting Out with Programming Logic and Design, 6th Edition by Tony Gaddis <br />Instructor's Solutions Manual for The U.S. Congress: A Simulation for Students, 2nd Edition by Lauren Cohen Bell <br />Test Bank for Introduction to Learning and Behavior, 6th Edition by Russell A. Powell, P. Lynne Honey, Diane G. Symbaluk <br />Instructor's Solutions Manual for Gardner's Art Through the Ages: A Global History, Volume I, 16th Edition by Fred S. Kleiner <br />Test Bank for Western Civilization: A Brief History, 10th Edition by Jackson J. Spielvogel <br />Instructor's Solutions Manual for Inference and Learning from Data: Volume 2 (Inference) by Ali H. Sayed <br />Instructor's Solutions Manual for Fundamentals of Power System Economics, 2nd Edition by Daniel S. Kirschen, Goran Strbac <br />Test Bank for Practical Guide to Digital Forensics Investigations, 2nd Edition by Darren Hayes <br />Test Bank for Single Variable Calculus: Early Transcendentals 4th Edition by Dennis G. Zill, Warren S. Wright <br />Instructor's Solutions Manual for Algebra and Trigonometry, 3rd Edition by Dennis G. Zill, Jacqueline M. Dewar <br />Test Bank for Multivariable Calculus: Early Transcendentals, 4th Edition by Dennis G. Zill, Warren S. Wright <br />Instructor's Solutions Manual for Introduction to Metric and Topological Spaces, 2nd Edition by Wilson A Sutherland <br />Test Bank for International Management: Culture, Strategy, and Behavior, 12th Edition by Fred Luthans, Jonathan Doh, Ajai S. Gaur <br />Test Bank for Stress Management for Life: A Research-Based Experiential Approach, 5th Edition by Michael Olpin, Margie Hesson <br />Instructor's Solutions Manual for Understanding Social Problems, 11th Edition - Instructor Resources by Linda A. Mooney, Molly Clever, Marieke Van Willigen <br />Instructor's Solutions Manual for Object-Oriented Data Structures Using Java, 4th Edition by Nell Dale - Daniel T. Joyce - Chip Weems <br />Instructor's Solutions Manual for Elementary Statistics: A Step By Step Approach, 10th Edition by Allan Bluman <br />Instructor's Solutions Manual for Reinforced Concrete: Mechanics and Design, 8th Edition by James K. Wight <br />Instructor's Solutions Manual for Surveying Fundamentals and Practices, 7th edition by Jerry Nathanson, Michael Lanzafama, Philip Kissam <br /><br />Check more inside PDF file",opensource
grokking-algorithms-an-illustrated-guide-for-programmers-and-other-curious-people,Grokking Algorithms An Illustrated Guide For Programmers And Other Curious People,Unknown Author,"Grokking Algorithms book for programmers which is going to help you understand programming and how to create nice Algorithms<div style=""font-size:16px;""><br style=""font-size:16px;"" /></div>",opensource
the-java-language-specification-java-se-21-edition,"The Java Language Specification, Java SE 21 Edition",O,"The Java Language Specification, Java SE 21 Edition",opensource
httpsjai.in.uaindex.phpd0b0d180d185d196d0b2paper_num1585,INTEGRATION OF THE METHODS OF ALGEBRA OF ALGORITHMS AND COMPUTATIONAL INTELLIGENCE FOR AUTOMATION OF PROGRAM SYSTEMS DESIGN,A,"An approach to the creation of intelligent systems is considered, which combines the ideas of Glushkov’s algebra of algorithms with the well-known neuroevolutionary algorithms of computational intelligence, which can be used to automate the design and synthesis of programs. The method of neuroevolution of augmenting topologies is intended to reduce the dimensionality of the space for searching for neural network parameters in the form of gradual development of its structure in the process of evolution. A software toolkit has been developed to support the approach, which is based on the construction of high-level specifications of algorithms represented in systems of algorithmic algebras, and generation of corresponding programs based on implementation templates in a target programming language. Parameterized algorithms called hyperschemes are used to solve a certain class of problems. Setting specific values of parameters and subsequent interpretation of hyperschemes allows obtaining algorithms adapted to specific application conditions. The developed program design and synthesis toolkit provides step-by-step development of programs, starting from a high-level algebraic-algorithmic specification. At the output of the toolkit, a program is automatically generated in one of the target programming languages (С, С++, Java, Python), that also include a subject-oriented language for designing neural networks. The mentioned language includes operators and conditions for working with populations, configurations, genomes, and fitness function. The work of the toolkit is illustrated by the example of designing a parameterized evaluation algorithm for a binary multiplexer and generation of a program for the single-pole balancing problem.","['aipi.ua-collection', 'additional_collections']"
ChinaXiv-202308.00375V1,基于信息熵的新媒体环境下网络节点影响力研究——以微信公众号为例,邢云菲,"<div class=""hd"">
 <h1>
  
  基于信息熵的新媒体环境下网络节点影响力研究——以微信公众号为例
 </h1>
 <p>
  Research on the Influence of Network Nodes in New Media Environment Based on Information Entropy: A Case Study of WeChat
 </p>
 <div class=""flex"" style=""border:0px;padding-bottom:0px;"">
 </div>
 <div class=""bd"" style=""border-bottom:1px solid #ced6e0;"">
  <ul style=""margin-top:0px;"">
   <li>
    <b>
     作者：
    </b>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E9%82%A2%E4%BA%91%E8%8F%B2"" style=""color:#3060cc;"" rel=""nofollow"">
     邢云菲
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E7%8E%8B%E6%99%B0%E5%B7%8D"" style=""color:#3060cc;"" rel=""nofollow"">
     王晰巍
    </a>
    <sup style=""margin-left:0px;"">
     1,2
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E9%9F%A9%E9%9B%AA%E9%9B%AF"" style=""color:#3060cc;"" rel=""nofollow"">
     韩雪雯
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E5%BC%A0%E9%95%BF%E4%BA%AE"" style=""color:#3060cc;"" rel=""nofollow"">
     张长亮
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
   </li>
   <li>
    <b>
     作者单位：
    </b>
    <div style=""margin-left:70px;margin-top:-26px;"">
     <div>
      1.
      <a href=""https://chinaxiv.org/user/search.htm?field=affication&amp;value=%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A6%E7%AE%A1%E7%90%86%E5%AD%A6%E9%99%A2%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%20%E9%95%BF%E6%98%A5%20130022"" style=""color:#3060cc;"" rel=""nofollow"">
       吉林大学管理学院信息管理系 长春 130022
      </a>
     </div>
     <div>
      2.
      <a href=""https://chinaxiv.org/user/search.htm?field=affication&amp;value=%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A6%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E7%A0%94%E7%A9%B6%E4%B8%AD%E5%BF%83%20%E9%95%BF%E6%98%A5%20130022"" style=""color:#3060cc;"" rel=""nofollow"">
       吉林大学大数据管理研究中心 长春 130022
      </a>
     </div>
    </div>
   </li>
   <li>
    <b>
     提交时间：
    </b>
    2023-08-26
   </li>
  </ul>
 </div>
 <div class=""bd"" style=""margin-top:15px;"">
  <p style=""color:#333;"">
   <b>
    摘要:
   </b>
   [目的/意义]对新媒体环境下网络节点影响力进行研究，能够深入剖析信息传播规律，从而有助于采取针对性措施对信息传播进行合理控制。[方法/过程]基于信息熵理论构建新媒体环境下网络节点影响力模型，以微信公众号为例进行节点影响力测算，对节点直接影响力、间接影响力和综合影响力进行深入分析，最后运用Matlab软件对所构建模型进行仿真分析。[结果/结论]新媒体环境下网络节点综合影响力随着连接节点数量和节点间互动频率增加而增大，直接影响力和间接影响力也以不同幅度增长，但当间接影响力信息熵值超过100时，直接影响力成为影响节点综合影响力的主要因素。
  </p>
  <p style=""color:#333;"">
   <b>
    Abstract:
   </b>
   [Purpose/significance] The research on the influence of network nodes in new media environment can deeply analyze the law of information dissemination, and thus help to take appropriate measures to control the information dissemination reasonably. [Method/process] This paper constructs the model of users' node influence in the new media environment based on information entropy theory, taking WeChat as an example to analyze the influence of network nodes. By using java programming method, the paper aims to calculate the numerical value of network nodes, including direct influence, indirect influence and total influence. And finally it use Matlab software to simulate the model. [Result/conclusion] Network nodes' total influence increases with the growth in the number of connections and the frequency of interactions between nodes. Direct influence and indirect influence are growing at a different rate, but the direct influence becomes the main factor affecting the comprehensive effect of nodes when the value of indirect influence is over 100.
  </p>
  <div class=""brdge"">
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%E4%BF%A1%E6%81%AF%E7%86%B5"" rel=""nofollow"">
     信息熵
    </a>
   </span>
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%E6%96%B0%E5%AA%92%E4%BD%93"" rel=""nofollow"">
     新媒体
    </a>
   </span>
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%E8%8A%82%E7%82%B9%E5%BD%B1%E5%93%8D%E5%8A%9B"" rel=""nofollow"">
     节点影响力
    </a>
   </span>
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%E5%BE%AE%E4%BF%A1"" rel=""nofollow"">
     微信
    </a>
   </span>
  </div>
  
  <ul>
   <li>
    <b>
     期刊：
    </b>
    <a rel=""nofollow"">
     图书情报工作
    </a>
   </li>
   <li>
    <b>
     分类：
    </b>
    <a href=""https://chinaxiv.org/user/search.htm?field=domain&amp;value=20"" rel=""nofollow"">
     图书馆学、情报学
    </a>
    &gt;&gt;
    <a href=""https://chinaxiv.org/user/search.htm?field=subject&amp;value=327"" rel=""nofollow"">
     图书馆学
    </a>
   </li>
   <li>
    <b>
     引用：
    </b>
    <a href=""https://chinaxiv.org/abs/202308.00375"" rel=""nofollow"">
     <font color=""#0000FF"">
      ChinaXiv:202308.00375
     </font>
    </a>
    (或此版本
    <a href=""https://chinaxiv.org/abs/202308.00375v1"" rel=""nofollow"">
     <font color=""#0000FF"">
      ChinaXiv:202308.00375V1
     </font>
    </a>
    )
    <br />
    <a style=""margin-left:45px;"" rel=""nofollow"">
     doi:10.12074/202308.00375
    </a>
    <br />
    <a href=""https://www.cstr.cn/CSTR:32003.36.ChinaXiv.202308.00375.V1"" style=""margin-left:45px;"" rel=""nofollow"">
     <font color=""#0000FF"">
      CSTR:32003.36.ChinaXiv.202308.00375.V1
     </font>
    </a>
   </li>
   <li>
    <b>
     推荐引用方式：
    </b>
    <span>
     邢云菲,王晰巍,韩雪雯,张长亮.(2023).基于信息熵的新媒体环境下网络节点影响力研究——以微信公众号为例.图书情报工作.[ChinaXiv:202308.00375]
    </span>
   </li>
  </ul>
 </div>
 <div class=""ft"">
  <h4>
   <span>
    版本历史
   </span>
  </h4>
  <table style=""font-size:14px;"">
   <tr>
    <td>
     <b>
      [V1]
     </b>
    </td>
    <td>
     2023-08-26 23:57:13
    </td>
    <td>
     ChinaXiv:202308.00375V1
    </td>
    <td>
     <a class=""btn"" href=""https://chinaxiv.org/user/download.htm?id=55963"" rel=""nofollow"">
      下载全文
     </a>
    </td>
   </tr>
  </table>
 </div>
</div>
","['chinaxivmirror', 'journals']"
what-is-coding-for-kids-gemslearninginstitute.com,What Is Coding For Kids Gemslearninginstitute.com,h,<div>APP DEVELOPMENT</div><div>VIDEO GAME DEVELOPMENT</div><div>CODING CAMPS</div><div>SENSORS AND CIRCUIT DESIGN</div><div>WEB DEVELOPMENT(HTML/CSS/JAVA SCRIP)</div><div>PYTHON AND OBJECT ORENTIED PROGRAMMING (FOUNDATION TO ADVANCED)</div>,opensource
20230521-ada-poetical-science-thinking-machine,"20230521 ADA, Poetical Science & Thinking Machine",L,"<p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">Ada, Poetical Science and Thinking Machine</span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;""> </span></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">In Introduction, Isaacson wrote ""The computer and the internet are among the most important inventions of our era, but few people know who created them"". He also explores the social and cultural forces that provide the atmospher for innovation. The internet was originally built to facilitate collaboration. By contrast, personal computers especially those meant to be used at home, were devised as tools for individual creativity. Isaacson begins this computer and internet history with Ada Lovelace, Lord Byron's daughter, who pioneered computer programming in the 1840s. ""When it comes to computers, there is one other historical figure, not as well known, who embodied the combination of the arts and sciences. Like her famous father, she understood the romance of poetry. Unlike him, she also saw the romance of math and machinery. And that is where our story begins."" (Isaacson, 2015: 20). </span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;""> </span></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">I am extremely interested in the story about Ada, poetical science and thinking machine. Regardless, I feel like this history repeating itself and has the potential for AI today to follow and make the thinking machine real and more perfect. The great beauty of the invention. Below I present an excerpt of the two core paragraphs. </span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;""> </span></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">""The only legitimate child of the poet Lord Byron, Ada had inherited her father’s romantic spirit, atrait that her mother tried to temper by having her tutored in mathematic.  The combination produced in Ada a love for what she took to calling “poetical science,” which linked her rebellious imagination to her enchantment with numbers."" (Isaacson, 2015: 21).</span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;""> </span></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">""Ada’s mother, Lady Byron, marveled that it was a “thinking machine”. As for Ada, who would later famously note that machines could never truly think, a friend who went with them to the demonstration reported, “Miss Byron, young as she was, understood its working, and saw the great beauty of the invention.” (Isaacson, 2015: 26).</span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;""> </span></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">Source: Isaacson, Walter. (2015). The Innovators: How a Group of Hackers, Geniuses, and Geeks Created the Digital Revolution. Farmington Hills, Mich: Large Print Press, a part of Gale, Cengage Learning.</span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;""> </span></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">Bandung, West Java</span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">May 21, 2023</span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">Levri Ardiansyah</span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;"">Indonesian Poet</span><span style=""font-family:Arial;""></span></p><p></p><p class=""MsoNormal"" align=""justify"" style=""text-align:justify;""><span style=""font-family:Arial;""> </span></p>","['opensource', 'community']"
switchnet4bp,switchnet4bp,S,"Neural Network - Switch Net 4 with backpropagation.<div>Written in Processing, a Java like programming language.</div>","['opensource', 'community']"
20230910_20230910_1914,Collecting and analyzing news from newspaper posts in facebook using machine learning,M,"<b style=""color:rgb(102,102,102);font-family:roboto, sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Abstract</b><span style=""color:rgb(102,102,102);font-family:roboto, sans-serif;font-size:16px;background-color:rgb(255,255,255);"">: Many people use social networks to spend their free time. News, especially at the time of great world changes, began to gain considerable popularity. Washington Post, New York Times, Time, Reuters, Forbes are among the most famous global newspaper publications. An average analyst can spend up to 40 hours a week collecting information about competitors and researching the most popular posts. According to the conducted research, an average of 40 new posts with news per day. The data processing process can be automated using modern information tools to facilitate the routine work of analysts. To analyze the target audience and reach, it is worth considering the text of the message, the number of likes, comments and links. This information was obtained using the Selenium automated web page testing tool using the Java programming language. The time spent on collecting data in the described way from four newspaper editions amounts to approximately 12 hours. The Tensorflow library using the JavaScript programming language is applied to the collected information. Based on information about the number of shares, comments, likes, frequency of news posts, an analysis was carried out using machine learning algorithms. Based on the clustering data, we can observe such a tendency that posts with a large number of likes receive a large number of comments and vice versa. An analysis of the most active hours of users in the network based on news posts is performed. As a result, the highest activity is observed at least three times a day, namely: in the morning hours from 9:00 to 11:00, in the lunch time of the day from 12:00 to 15:00 and in the evening time period from 18:00 to 20:00. This trend is due to the work schedule of most employees during the working week. The resulting statistical information in the work can be used for other content or user behavior in social networks.</span>","['aipi.ua-collection', 'additional_collections']"
java-entwicklung-von-skalierbaren-anwendungen,Java - Entwicklung Von Skalierbaren Anwendungen,M,"<p class=""MsoNormal"">Eines der wichtigsten Merkmale von Java ist, dass es
""plattformunabhängig"" ist. Das bedeutet, dass Java-Code auf jeder
Plattform ausgeführt werden kann, solange eine Java Virtual Machine (JVM)
vorhanden ist. Dies ermöglicht es Entwicklern, ihren Code einmal zu schreiben
und ihn dann auf viele verschiedene Arten von Geräten und Betriebssystemen
auszuführen.<br /><br />Dieses Buch steht in deutscher und in englischer Sprache zum Download bereit.</p><p></p>","['opensource', 'community']"
java-script-beschleunigen-sie-ihren-code,Java Script Beschleunigen Sie Ihren Code,M,"<p class=""MsoNormal"">JavaScript kann sowohl auf dem Client als auch auf dem
Server ausgeführt werden. Auf dem Client wird es hauptsächlich verwendet, um
Benutzerinteraktionen auf einer Webseite zu verarbeiten und die Darstellung der
Seite zu verändern, ohne dass die gesamte Seite neu geladen werden muss. Auf
dem Server wird es hauptsächlich mit Node.js verwendet, um Serveranwendungen zu
entwickeln.<br /><br />Dieses Buch steht in deutscher und in englischer Sprache zum Download bereit.</p><p></p>","['opensource', 'community']"
step-by-step-gui-with-jdbc-and-my-sql,Step By Step GUI With JDBC And My SQL,Unknown Author,This is my project that I'm doing and am sharing the problems have faced in connection my database with the java program,"['opensource', 'community']"
module-1-complete-notes,Module 1 Complete Notes,K,Object Oriented Programming using Java,opensource
the-impact-of-language-syntax-on-the-complexity-of-programs-a-case-study-of-java-and-python,The Impact Of Language Syntax On The Complexity Of Programs A Case Study Of Java And Python,5,"<p style=""line-height:1.785rem;margin:1.43rem 0px 0px;"">Programming is the cornerstone of computer science, yet it is difficult to learn and program. The syntax of a programming language is particularly challenging to comprehend, which makes learning arduous and affects the program's testability. There is currently no literature that definitively gives quantitative evidence about the effect of programming language complex syntax. The main purpose of this article was to examine the effects of programming syntax on the complexity of their source programs. During the study, 298 algorithms were selected and their implementations in Java and Python were analyzed with the cyclomatic complexity matrix. The results of the study show that Python's syntax is less complex than Java's, and thus coding in Python is more comprehensive and less difficult than Java coding. The Mann-Whitney U test was performed on the results of a statistical analysis that showed a significant difference between Java and Python, indicating that the syntax of a programming language has a major impact on program complexity. The novelty of this article lies in the formulation of new knowledge and study patterns that can be used primarily to compare and analyze other programming languages.</p>","['journals_contributions', 'journals']"
20230911_20230911_0603,Api test automation of search functionality with artificial intelligence,M,"<b style=""color:rgb(102,102,102);font-family:roboto, sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Abstract</b><span style=""color:rgb(102,102,102);font-family:roboto, sans-serif;font-size:16px;background-color:rgb(255,255,255);"">: One of the steps in software development is to test the software product. With the development of technology, the testing process has improved to automated testing, which reduces the impact of the human factor on error and speeds up testing. The main software products for testing are considered to be web applications, web services, mobile applications and performance testing. According to the testing pyramid, when testing web services, you need to develop more test cases than when testing a web application. Because automation involves writing software code for testing, the use of ready-made tools will speed up the software development process. One of the most important test indicators is the coverage of search functionality. The search functionality of a web application or web service requires a large number of cases, as you need to provide many conditions for its operation through the free entry of any information on the web page. There is an approach to data-based testing, which involves working with a test data set through files such as CSV, XLS, JSON, XML and others. However, finding input for testing takes a lot of time when creating test cases and automated test scenarios. It is proposed to use artificial data set generators based on real values and popular queries on the website to form a test data set. In addition, it is possible to take into account the probable techniques of developing test cases. It is proposed to conditionally divide the software for testing into several layers: client, test, work with data, checks and reports. The Java programming language has a number of libraries for working at each of these levels. It is proposed to use Rest Assured as a Restful client, TestNG as a library for writing tests with checks, and Allure report for generating reports. It is noted that the proposed approach uses artificial intelligence for automated selection of test cases when creating a test to diversify test approaches and simulate human input and behavior to maximize the use of cases.</span>","['aipi.ua-collection', 'additional_collections']"
289-updated,Analysis of Code Vulnerabilities in Repositories of GitHub and Rosettacode: A comparative Study,5,"<p style=""line-height:1.785rem;margin:1.43rem 0px 0px;"">Open-source code hosted online at programming portals is present in 99% of commercial software and is common practice among developers for rapid prototyping and cost-effective development. However, research reports the presence of vulnerabilities, which result in catastrophic security compromise, and the individual, organization, and even national secrecy are all victims of this circumstance. One of the frustrating aspects of vulnerabilities is that vulnerabilities manifest themselves in hidden ways that software developers are unaware of. One of the most critical tasks in ensuring software security is vulnerability detection, which jeopardizes core security concepts like integrity, authenticity, and availability. This study aims to explore security-related vulnerabilities in programming languages such as C, C++, and Java and present the disparities between them hosted at popular code repositories. To attain this purpose, 708 programs were examined by severity-based guidelines. A total of 1371 vulnerable codes were identified, of which 327 in C, 51 in C++, and 993 in Java. Statistical analysis also indicated a substantial difference between them, as there is ample evidence that the Kruskal-Wallis H-test p-value (.000) is below the 0.05 significance level. The Mann-Whitney Test mean rank for GitHub (Mean-rank=676.05) and Rosettacode (Mean-rank=608.64) are also different. The novelty of this article is to identify security vulnerabilities and grasp the nature severity of vulnerability in popular code repositories. This study eventually manifests a guideline for choosing a secure programming language as a successful testing technique that targets vulnerabilities more liable to breaching security.</p>","['journals_contributions', 'journals']"
10.11591eei.v11i3.3187,Distributed big data analysis using Spark parallel data processing,B,"<span class=""markedContent""><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">Nowadays,  the  big  data  marketplace  is  rising  rapidly.  The  big  challenge  is </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">finding  a  system  that  can  store  and  handle  a  huge  size  of  data  and  then </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">processing  that  huge  data  for  mining  the  hidden  knowledge.  This  paper </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">proposed a compr</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">ehensive system that is used for improving </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">big data </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">analysis </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">performance. It contains a fast </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">big data </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">processing engine using Apache Spark </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">and a </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">big data </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">storage environment using Apache Hadoop. The system tests </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">about 11 Gigabytes of text data which are co</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">llected from multiple sources for </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">sentiment  analysis.  Three  different  machine  learning </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">(ML) </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">algorithms  are </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">used in this system which is already supported by the Spark </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">ML</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">package. The </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">system programs were written in Java and Scala programming languages and </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">the constructed model consists of the classification algorithms as well as the </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">pre</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">-</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">processing  steps  in  a  figure  of </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">ML</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">pipeline</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">.  The  proposed  system  was </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">implemented in both central and distributed data processing. Moreover, some </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">datasets manipulation manner</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">s have been applied in the system tests to check </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">which manner provides the best accuracy and time performance. The results </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">showed  that  the  system  works  efficiently  for  treating  big  data,  it  gains </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">excellent accuracy with fast execution time especially in th</span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">e distributed data </span><span style=""font-size:13.7271px;font-family:sans-serif;"" dir=""ltr"">nodes.</span></span>","['journals_contributions', 'journals']"
compsci-conf-ieeesaner-2022-165-flexible-semi-automatic-support-for-type-migration,Flexible Semi Automatic Support For Type Migration Of Primitives For C⁄ C++ Programs,S,"<div>Type systems are crucial tools in the hands of developers to ensure an increased level of soundness to their programs, make them safer, and guard against bugs.</div><div>However, in practice, the type system is not always used to its full capability, and trade-offs are made.</div><div>The effects range from hindered code comprehension and wasted development effort to financial damages and even the risk of loss of life.</div><div>Various widely used programming languages, such as C++, Java, Python, and Rust, are yet to implement constrained types as a language feature.<br /></div><div>While the usage of user-defined types is common in modern languages that support such elements, developers often resort to having their variables use the most common, fundamental, built-in or library types, such as int or string, and not encode invariants into the type system.</div><div><br /></div><div>In this paper, we describe a flexible, incremental, semi-automated type migration approach that allows transitioning from the use of fundamental coarse types to strong types.</div><div>Previously, well-scaling type migration methods were restricted and required the existence of an already well- defined destination type.</div><div>In our case, the new strong type to be created is not yet defined, but the required interface is discovered via static analysis.</div><div>As refactoring tools would cease to function if the code is changed textually to a version that refers undefined symbols, a more granular approach was needed.</div><div>In addition, our proposed method allows us to discover the mixing of conceptually distinct types during development while the original program continues to function.<br /></div>","['opensource', 'community']"
10.11591ijres.v11.i1.pp34-48,Design and implementation of an automated office environment  system using embedded sensors,Unknown Author,"Office automation is the process using machines with the help of embedded 
computing perform the office activities and its tools and applications. The 
office automated using computer-aided processing stored, visual and audio 
data to simplify, improve, and automate the power saving and time 
management of the organization. A very important component of office 
automation concerns the automation of employee centred activities such as 
authentication, automatic alerting of appointments and automatic powering 
on/off personal computer. The employee image is captured using Java media 
framework, attendance records for all employees is gathered and processed 
automatically, and they can be accessed from the database on a monthly or 
weekly basis. The various software and hardware components of the system 
were developed and integrated to form the Exypnos Office System and 
validated on real life scenarios. Java proved to be a versatile platform for 
implementing a project of this nature with diverse requirements. Web 
camera interfacing and image capturing are implemented in the Java 
environment with the help of Java media framework (JMF). Java short 
message service (SMS) application programming interface (API) and 
Bluetooth technology is used for sending schedules through SMS. Radio 
frequency identification (RFID) systems use many different frequencies, but 
the most common and widely used and supported by our reader is 125 kHz. 
Office automation systems have more benefits to an organization. The 
project is implemented on MS Windows platform and in future can be 
implemented in Linux platform.
","['journals_contributions', 'journals']"
the-java-language-specification-java-se-18-edition,"The Java Language Specification, Java SE 18 Edition",O,"The Java Language Specification, Java SE 18 Edition <br />",opensource
iuliana-cosmina-java-17-for-absolute-beginners-learn-the-fundamentals-of-java-pr,Java 17 For Absolute Beginners Learn The Fundamentals Of Java Programming Apress ( 2022),I,Java Programming for absolute beginners,"['opensource', 'community']"
the-java-language-specification-java-se-17-edition,"The Java Language Specification, Java SE 17 Edition",O,"The Java Language Specification, Java SE 17 Edition",opensource
the-java-language-specification-java-se-16-edition,"The Java Language Specification, Java SE 16 Edition",O,"The Java Language Specification, Java SE 16 Edition <br />",opensource
ERIC_ED615543,ERIC ED615543: Knowing &quot;When&quot; and &quot;Where&quot;: Temporal-ASTNN for Student Learning Progression in Novice Programming Tasks,E,"As students learn how to program, both their programming code and their understanding of it evolves over time. In this work, we present a general data-driven approach, named ""Temporal-ASTNN"" for modeling student learning progression in open-ended programming domains. Temporal-ASTNN combines a novel neural network model based on abstract syntactic trees (AST), named ASTNN, and Long-Short Term Memory (LSTM) model. ASTNN handles the ""linguistic"" nature of student programming code, while LSTM handles the ""temporal"" nature of student learning progression. The effectiveness of ASTNN is first compared against other models including a state-of-the-art algorithm, Code2Vec across two programming domains: iSnap and Java on the task of program classification (""correct"" or ""incorrect""). Then the proposed temporal-ASTNN is compared against the original ASTNN and other temporal models on a challenging task of student success early prediction. Our results show that Temporal-ASTNN can achieve the best performance with only the first 4-minute temporal data and it continues to outperform all other models with longer trajectories. [For the full proceedings, see ED615472.]","['ericarchive', 'additional_collections']"
doi-10.11591eei.v9i5.2268,An improved ant colony optimization algorithm for wire optimization,B,"Wire optimization has become one of the greatest challenges in today’s
circuit design. This paper presents a method for wire optimization in circuit
routing using an improved ant colony optimization with Steiner nodes
(ACOSN) algorithm. Circuit delay and power dissipation are primarily
affected by the length of the routed wire. Thus, the main goal of this
proposed algorithm is to find the shortest route from one point to another
using an algorithm that relies on the artificial behavior of ants. The algorithm
is implemented in the JAVA programming language. The proposed ACOSN
algorithm is compared with the conventional ant colony optimization (ACO)
algorithm in terms of efficiency and routing performance when applied to
three types of circuits: emitter-coupled logic, 741 output and a cascode
amplifier. The performance of the proposed method is analyzed based on
circuit information such as total wire routing, total number of nets, total wire
reduction, terminals per net and total terminals. From the simulation analysis,
it is shown that the proposed ACOSN algorithm gives the most benefit to
complex circuits, where it successfully reduces the wire length by 21.52% for
a cascode amplifier circuit, 14.49% for a 741 output circuit, and 10.43% for
emitter-coupled logic circuit. ","['folkscanomy_academic', 'folkscanomy', 'additional_collections']"
the-java-language-specification-java-se-15-edition,"The Java Language Specification, Java SE 15 Edition",O,"The Java Language Specification, Java SE 15 Edition",opensource
ERIC_ED608053,ERIC ED608053: Student Teamwork on Programming Projects What Can GitHub Logs Show Us?,E,"Teamwork, often mediated by version control systems such as Git and Apache Subversion (SVN), is central to professional programming. As a consequence, many colleges are incorporating both collaboration and online development environments into their curricula even in introductory courses. In this research, we collected GitHub logs from two programming projects in two offerings of a CS2 Java programming course for computer science majors. Students worked in pairs for both projects (one optional, the other mandatory) in each year. We used the students' GitHub history to classify the student teams into three groups, ""collaborative,"" ""cooperative,"" or ""solo-submit,"" based on the division of labor. We then calculated different metrics for students' teamwork including the total number and the average number of commits in different parts of the projects and used these metrics to predict the students' teamwork style. Our findings show that we can identify the students' teamwork style automatically from their submission logs. This work helps us to better understand novices' habits while using version control systems. These habits can identify the harmful working styles among them and might lead to the development of automatic scaffolds for teamwork and peer support in the future. [For the full proceedings, see ED607784.]","['ericarchive', 'additional_collections']"
most-essential-concepts-of-java-script,Most Essential Concepts Of Java Script,S,An E Book containing the most essential concepts of the JavaScript Programming language explained in the form of articles. The book is authored by Satyapriya Mishra & Bhanu Maniktahla.<div>This is part of notes prepared while training for code2stepup.com.</div><div> </div>,"['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
js-the-first-20-years,JavaScript: The First 20 Years,B,"<div><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">How a sidekick scripting language for Java, created at Netscape in a ten-day hack, ships first as a de facto</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> Web standard and eventually becomes the world’s most widely used programming language. This paper tells</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> the story of the creation, design, evolution, and standardization of the JavaScript language over the period of</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> 1995-2015. But the story is not only about the technical details of the language. It is also the story of how</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> people and organizations competed and collaborated to shape the JavaScript language which dominates the</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> Web of 2020.</span></div><div><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""><br /></span></div><div><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">DOI: https://dl.acm.org/doi/10.1145/3386327<br /></span></div>","['opensource', 'community']"
2020-05-023-njstr,2020 05 023 NJSTR,O,"This paper presents a design and implementation of a fingerprintbased class attendance management system for convenient, efficient
and effective record keeping of lectures. The class attendance
management system was designed using Java, MySQL, for the
backend and HTML, CSS, for the frontend through various platforms
such as android studio. The system was carried out to meet both
functional and non-functional requirements of the educational
system as well as achieving a stable, maintainable, secure and
reliable system. Testing was carried out to ensure the system
requirements were met. ","['opensource', 'community']"
scope-of-android-mobile-application-development-in-india,Scope of Android Mobile Application Development in India,M,"<span style=""color:rgb(51,51,51);font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;background-color:rgb(255,255,255);"">Android accounts for approximately 85% of all devices sold today. Android Application Development simply means developing new applications that can run on the devices powered by android operating system. Google states that ""Android applications can be written using Kotlin (an alternate programming language for developing android applications. Many renowned technology firms have started using Kotlin for developing their android applications such as Pinterest, Uber, Atlassian, Pivotal etc.), Java, and C++ languages"" using the Android software development kit, while using other languages is also possible. When thinking about the scope of Android Application Development in India (one of the fastest growing nations in the world as far as IT market is concerned) -- one of the major benefits of choosing android application development is astonishing job opportunities associated with it. Many IT firms and startups require android application developers who can create cost effective apps that are capable of delivering best user experience.</span>","['opensource', 'community']"
linux-commands-c-c-java-python-exercise-for-beginners-obooko_202104,"Linux Commands, C, C++, Java and Python Exercises For Beginners",M,"<span style=""color:rgb(95,99,104);font-family:Roboto, Arial, sans-serif;font-size:14px;letter-spacing:0.2px;background-color:rgb(255,255,255);"">An approachable manual for new and experienced programmers that introduces the programming languages C, C++, Java, and Python. This book is for all programmers, whether you are a novice or an experienced pro. It is designed for an introductory course that provides beginning engineering and computer science students with a solid foundation in the fundamental concepts of computer programming. It also offers valuable perspectives on important computing concepts through the development of programming and problem-solving skills using the languages C, C++, Java, and Python. The beginner will find its carefully paced exercises especially helpful. Of course, those who are already familiar with programming are likely to derive more benefits from this book. After reading this book you will find yourself at a moderate level of expertise in C, C++, Java and Python, from which you can take yourself to the next levels. The command-line interface is one of the nearly all well built trademarks of Linux. There exists an ocean of Linux commands, permitting you to do nearly everything you can be under the impression of doing on your Linux operating system. However, this, at the end of time, creates a problem: because of all of so copious commands accessible to manage, you don't comprehend where and at which point to fly and learn them, especially when you are a learner. If you are facing this problem, and are peering for a painless method to begin your command line journey in Linux, you've come to the right place-as in this book, we will launch you to a hold of well liked and helpful Linux commands. This book gives a thorough introduction to the C, C++, Java, and Python programming languages, covering everything from fundamentals to advanced concepts. It also includes various exercises that let you put what you learn to use in the real world.</span>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
beginners-guide-c-java-manjunath-obooko_202104,"C, C++, Java, Python, PHP, JavaScript and Linux For Beginners",M,"<div style=""border:0px;margin:0px;padding:0px;color:rgb(95,99,104);line-height:inherit;font-family:Roboto, Arial, sans-serif;font-size:14px;vertical-align:baseline;letter-spacing:0.2px;background-color:rgb(255,255,255);""><span class=""LKWyGd"" style=""border:0px;color:inherit;font-style:inherit;font-variant:inherit;font-weight:inherit;line-height:inherit;font-family:inherit;margin:0px;padding:0px;vertical-align:baseline;"">An ideal addition to your personal elibrary. With the aid of this indispensable reference book, you may quickly gain a grasp of Python, Java, JavaScript, C, C++, CSS, Data Science, HTML, LINUX and PHP. It can be challenging to understand the programming language's distinctive advantages and charms. Many programmers who are familiar with a variety of languages frequently approach them from a constrained perspective rather than enjoying their full expressivity. Some programmers incorrectly use Programmatic features, which can later result in serious issues. The programmatic method of writing programs—the ideal approach to use programming languages—is explained in this book. This book is for all programmers, whether you are a novice or an experienced pro. Its numerous examples and well paced discussions will be especially beneficial for beginners. Those who are already familiar with programming will probably gain more from this book, of course. I want you to be prepared to use programming to make a big difference.</span></div><div><span class=""LKWyGd"" style=""border:0px;color:inherit;font-style:inherit;font-variant:inherit;font-weight:inherit;line-height:inherit;font-family:inherit;margin:0px;padding:0px;vertical-align:baseline;""><br /></span></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
the-java-language-specification-java-se-14-edition,"The Java Language Specification, Java SE 14 Edition",O,"The Java Language Specification, Java SE 14 Edition<br />",opensource
31-20656,JAVA and DART programming languages: Conceptual comparison,A,"This paper elaborates on the concepts of a new programming language 
“Dart”, which has been developed by Google and considered for future use. 
Here, we compare it to the most famous, real time, and updated language 
“Java”. This is to define similarities and differences between the two 
important languages, explain programs’ behavior, with a focus on 
investigating alternative implementation strategies and problem definitions. 
We used programming languages’ concepts and terminologies to compare between the main characteristics of the two languages, Dart &amp; Java.","['journals_contributions', 'journals']"
java-language,FOUNDATIONS OF JAVA PROGRAMMING FOR THE OOP OPTION OF THE IB COMPUTER SCIENCE EXAM,C,Java programming language tutorial,"['opensource', 'community']"
jre-8u271-windows-x64,Java SE Runtime Environment  Java SE Runtime Environment  - jre-8u271-windows-x64 - jre-8u271-windows-x64,O, Java SE Runtime Environment  - jre-8u271-windows-x64<br />,"['opensource_media', 'community']"
398-406_202108,Methods of simulation mathematical modeling of the Russian derivatives market in modern times,Unknown Author,"<p style=""margin:5px 0px;color:rgb(102,102,102);font-family:'PT Sans', sans-serif;font-size:17px;background-color:rgb(255,255,255);""><strong>Introduction.</strong> The paper is devoted to simulation modeling. Basic methods of the simulation mathematical modeling in the derivatives market are described. A group of realistic nonGaussian Levy processes that generalize the classical BlackScholes model is considered. The work objective is to study the most efficient methods of market forecasting, as well as the software implementation of the simulation mathematical modeling technique of the Russian derivatives market based on the Levy model. This research is relevant due to the demand for applications that simulate the dynamics of financial assets and evaluate options in realistic models of the derivatives market, allowing for jumps.</p><p style=""margin:5px 0px;color:rgb(102,102,102);font-family:'PT Sans', sans-serif;font-size:17px;background-color:rgb(255,255,255);""><strong>Materials and Methods.</strong> Basic methods for forecasting the derivatives market, methods for determining the volatility rate at a known option price, are considered. The most effective types of Levy processes for the simulation mathematical modeling of the Russian derivatives market at the present stage are highlighted. The possibilities of the Java language for the implementation of mathematical methods are considered.</p><p style=""margin:5px 0px;color:rgb(102,102,102);font-family:'PT Sans', sans-serif;font-size:17px;background-color:rgb(255,255,255);""><strong>Research Results.</strong> A program is developed in the Java programming language that implements the Levy mathematical model, which includes Gaussian and generalized Poisson processes. The program for calculating the mathematical method is created in the free integrated application development environment NetBeans IDE to work with any operating system.</p><p style=""margin:5px 0px;color:rgb(102,102,102);font-family:'PT Sans', sans-serif;font-size:17px;background-color:rgb(255,255,255);""><strong>Discussion and Conclusions.</strong> The result of the simulation mathematical modeling analysis has shown that the most efficient methods in the derivatives market are those based on realistic non-Gaussian Levy processes. The software implementation of such mathematical methods can be used for educational purposes. The developed application has demonstrated high quality and speed of calculations using software resources.</p>","['folkscanomy_academic', 'folkscanomy', 'additional_collections']"
61-60-20386-paper-id-238-edit-lia,Performance comparison of Java based parallel programming models,M,"Parallel programming has been implemented in many areas to solve various 
computational problem with the aim, to improve the performance and 
scalability of the software application. There are a few parallel programming 
models commonly used, namely, threads, and message passing (distributed) 
models. Furthermore, various APIs have been proposed to implement these 
models based on two popular languages, notably, C/C++ and Java. A few 
studies have been done to compare the performance of parallel programming 
models, specifically, pure versus hybrid model. However, most of existing 
comparisons targeted on MPI/OpenMP based on C/C++ language. In this 
paper, our aim is to explore the performance comparison between threads, 
message passing and hybrid model in Java, specifically using Java 
multithreading and MPJ Express. For this reason, we have chosen a problem 
called word count occurrence which is significant in Natural Language 
Processing and use it to design and implement the parallel programs. We 
then present their performance and discuss the results. ","['journals_contributions', 'journals']"
the-java-language-specification-java-se-13-edition,"The Java Language Specification, Java SE 13 Edition",O,"The Java Language Specification, Java SE 13 Edition",opensource
doi-10.11591eei.v8i1.1447,Haze alarm visual map (HazeViz): an intelligent haze forecaster,B,"The haze problem has intensified in recent years. The particulate matter of
less than 10 microns in size, PM10 is the dominant air pollutant during haze.
In this paper, we present the development of HazeViz, a Haze Alarm Visual
Map forecaster, which is based on PM10. The intelligent web application
allows users to visualize the pattern of PM10 in a region, forecasts PM10
value and alarms bad haze condition. HazeViz was developed using HTML,
Java Script, PHP, MySQL, R Programming and Fusionex Giant. The
SARIMA statistical forecasting models that underlie the application were
developed using R. The PM10 trend analysis, and the consequential map and
chart visualizations were implemented on the Fusionex GIANT Big Data
Analytics platform. HazeViz was developed in the context of the Klang
Valley, our case study. The dataset was obtained from Department of
Environment Malaysia, which contains a total of 157,680 hourly PM10 data
for six stations in Klang Valley, for the years 2013 to 2015. The SARIMA
models were developed using maximum daily PM10 data for 2013 and 2014,
and the 2015 data was used to validate the model. The fitting models were
determined based on the Mean Absolute Error (MAE), Root Mean Square
Error (RMSE) and Mean Absolute Percentage Error (MAPE). While the
selected models were implemented in HazeViz and successfully deployed on
the web, the results show that the selected models have MAPE ranging
between 35 percent and 45 percent, which implies that the models are still far
from robust. Future work can consider augmented SARIMA models that can
yield improved results. ","['folkscanomy_academic', 'folkscanomy', 'additional_collections']"
the-java-language-specification-java-se-12-edition,"The Java Language Specification, Java SE 12 Edition",O,"The Java Language Specification, Java SE 12 Edition <br />",opensource
pemrograman-berorientasi-objek-menggunakan-java-net-beans,Pemrograman Berorientasi Objek Menggunakan Java & Net Beans,D,"<span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Pemrograman Berorientasi Objek Menggunakan Java & NetBeans Penulis :</span><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Daniel Swanjaya, M.Kom. </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Intan Nur Farida, M.Kom. </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);""><br /></span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 1 : Pendahuluan </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 2 : Dasar Java </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 3 : Struktur Kontrol </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 4 : Method </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 5 : Pemrograman Berorientasi Objek </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 6 : Exception Handling, Java Util, Operasi File, Penanganan Waktu & Java Math </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab7 : Graphical User Interface </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 8 : Multi Document Interface </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 9 : Java Database Connectivity </span></div><div><span style=""color:rgb(28,38,61);font-family:'Source Sans Pro', sans-serif;font-size:16px;background-color:rgb(255,255,255);"">Bab 10 : Java Report</span></div>","['booksbylanguage_indonesian', 'booksbylanguage']"
ProgremingIsLikePlayingAGameConverted,Progreming Is Like Playing A Game Converted,M,Its a Java Programming book<div><br /></div>,"['opensource', 'community']"
mccl_10.1016_j.envsoft.2018.11.012,"The MESSAGEix Integrated Assessment Model and the ix modeling platform (ixmp): An open framework for integrated and cross-cutting analysis of energy, climate, the environment, and sustainable development",Daniel Huppmann,"The MESSAGE Integrated Assessment Model (IAM) developed by IIASA has been a central tool of energy-environment-economy systems analysis in the global scientific and policy arena. It played a major role in the Assessment Reports of the Intergovernmental Panel on Climate Change (IPCC); it provided marker scenarios of the Representative Concentration Pathways (RCPs) and the Shared Socio-Economic Pathways (SSPs); and it underpinned the analysis of the Global Energy Assessment (GEA). Alas, to provide relevant analysis for current and future challenges, numerical models of human and earth systems need to support higher spatial and temporal resolution, facilitate integration of data sources and methodologies across disciplines, and become open and transparent regarding the underlying data, methods, and the scientific workflow. In this manuscript, we present the building blocks of a new framework for an integrated assessment modeling platform; the “ecosystem” comprises: i) an open-source GAMS implementation of the MESSAGE energy++ system model integrated with the MACRO economic model; ii) a Java/database back-end for version-controlled data management, iii) interfaces for the scientific programming languages Python & R for efficient input data and results processing workflows; and iv) a web-browser-based user interface for model/scenario management and intuitive “drag-and-drop” visualization of results. The framework aims to facilitate the highest level of openness for scientific analysis, bridging the need for transparency with efficient data processing and powerful numerical solvers. The platform is geared towards easy integration of data sources and models across disciplines, spatial scales and temporal disaggregation levels. All tools apply best-practice in collaborative software development, and comprehensive documentation of all building blocks and scripts is generated directly from the GAMS equations and the Java/Python/R source code.","['mendeley_climate_change_library', 'folkscanomy_academic', 'folkscanomy', 'additional_collections']"
analysisofdatadr1094561353,ANALYSIS OF DATA-DRIVEN WEB APPLICATION VERSUS PROCESS-DRIVEN APPLICATION,A,"Enterprise applications are a type of software used in organizations to provide the functions for one or more business domains. The standard approach to developing enterprise application is using common programming platforms like Java EE or Microsoft .NET. However, in recent years new enterprise applications development platforms called Business Process Management Systems (BPMSs) have emerged. BPMS providers claim that their technologies allow organizations to develop enterprise applications faster than by using traditional applications development platforms. No comprehensive comparison of using the two approaches has yet been conducted. The purpose of this study is to compare two enterprise application features, persistence and messaging, available in both technologies—here, Java EE and Bonita BPM. The findings of this study revealed that developing applications using Bonita BPM takes less effort than using Java EE. However, facilitating applications development with Bonita BPM comes with a cost, which is that it limits the developer's ability to use specific preconfigured persistence and messaging technology.","['navalpostgraduateschoollibrary', 'fedlink']"
ChinaXiv-201809.00131V1,API文档缺陷自动检测和修复方法,王长志,"<div class=""hd"">
 <h1>
  
  API文档缺陷自动检测和修复方法
 </h1>
 <div class=""flex"" style=""border:0px;padding-bottom:0px;"">
 </div>
 <div class=""bd"" style=""border-bottom:1px solid #ced6e0;"">
  <ul style=""margin-top:0px;"">
   <li>
    <b>
     作者：
    </b>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E7%8E%8B%E9%95%BF%E5%BF%97"" style=""color:#3060cc;"" rel=""nofollow"">
     王长志
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E5%91%A8%E5%AE%87"" style=""color:#3060cc;"" rel=""nofollow"">
     周宇
    </a>
    <sup style=""margin-left:0px;"">
     1,2
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E9%97%AB%E9%91%AB"" style=""color:#3060cc;"" rel=""nofollow"">
     闫鑫
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
   </li>
   <li>
    <b>
     作者单位：
    </b>
    <div style=""margin-left:70px;margin-top:-26px;"">
     <div>
      1.
      <a href=""https://chinaxiv.org/user/search.htm?field=affication&amp;value=%E5%8D%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%AD%A6%E9%99%A2"" style=""color:#3060cc;"" rel=""nofollow"">
       南京航空航天大学 计算机科学与技术学院
      </a>
     </div>
     <div>
      2.
      <a href=""https://chinaxiv.org/user/search.htm?field=affication&amp;value=%E5%8D%97%E4%BA%AC%E5%A4%A7%E5%AD%A6%20%E8%BD%AF%E4%BB%B6%E6%96%B0%E6%8A%80%E6%9C%AF%E5%9B%BD%E5%AE%B6%E9%87%8D%E7%82%B9%E5%AE%9E%E9%AA%8C%E5%AE%A4"" style=""color:#3060cc;"" rel=""nofollow"">
       南京大学 软件新技术国家重点实验室
      </a>
     </div>
    </div>
   </li>
   <li>
    <b>
     提交时间：
    </b>
    2018-09-13
   </li>
  </ul>
 </div>
 <div class=""bd"" style=""margin-top:15px;"">
  <p style=""color:#333;"">
   <b>
    摘要:
   </b>
   应用程序编程接口(application programming interface，API)在软件开发中起着非常关键的作用，而API文档的质量会严重影响开发人员对API的使用。为了完善API文档，提出了基于程序静态分析和自然语言处理的自动检测和修复API文档缺陷的方法，该方法能自动检测和修复API文档缺陷。实验中，缺陷检测结果的准确率和召回率分别达到74.6%和81.4%，能够较为准确地检测到java API的文档缺陷。在进一步的实验中，还对API文档的修复功能进行了评估，结果表明生成的文档正确且简洁，可以有效地修复API文档缺陷。
  </p>
  <p style=""color:#333;"">
   <b>
    Abstract:
   </b>
   Application Programming Interface (API) play an important role with respect to software development. Particularly, the quality of API documentation tends to have a severe impact on the use of APIs for developers. In this paper, for improving API documentation, a novel approach is proposed to automatically detect and repair defective API documentation by adopting techniques of program static analysis and natural language processing. Across empirical studies, the proposed approach gives a precision of 74.6% and a recall of 81.4%, which demonstrates that the approach can accurately detect the defective documentation in java APIs. For further experiments, the function of repair recommendation for API documentation is evaluated. The results indicate that the generated recommendations are correct and succinct, and can repair API documentation effectively.
  </p>
  <div class=""brdge"">
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=Java%20API%20%E6%96%87%E6%A1%A3"" rel=""nofollow"">
     Java API 文档
    </a>
   </span>
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%E7%A8%8B%E5%BA%8F%E5%BC%82%E5%B8%B8"" rel=""nofollow"">
     程序异常
    </a>
   </span>
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE"" rel=""nofollow"">
     修复建议
    </a>
   </span>
  </div>
  
  <ul>
   <li>
    <b>
     期刊：
    </b>
    <a rel=""nofollow"">
     计算机应用研究
    </a>
   </li>
   <li>
    <b>
     分类：
    </b>
    <a href=""https://chinaxiv.org/user/search.htm?field=domain&amp;value=243"" rel=""nofollow"">
     计算机科学
    </a>
    &gt;&gt;
    <a href=""https://chinaxiv.org/user/search.htm?field=subject&amp;value=244"" rel=""nofollow"">
     计算机科学的集成理论
    </a>
   </li>
   <li>
    <b>
     引用：
    </b>
    <a href=""https://chinaxiv.org/abs/201809.00131"" rel=""nofollow"">
     <font color=""#0000FF"">
      ChinaXiv:201809.00131
     </font>
    </a>
    (或此版本
    <a href=""https://chinaxiv.org/abs/201809.00131v1"" rel=""nofollow"">
     <font color=""#0000FF"">
      ChinaXiv:201809.00131V1
     </font>
    </a>
    )
    <br />
    <a style=""margin-left:45px;"" rel=""nofollow"">
     doi:10.12074/201809.00131
    </a>
    <br />
    <a href=""https://www.cstr.cn/CSTR:32003.36.ChinaXiv.201809.00131.V1"" style=""margin-left:45px;"" rel=""nofollow"">
     <font color=""#0000FF"">
      CSTR:32003.36.ChinaXiv.201809.00131.V1
     </font>
    </a>
   </li>
   <li>
    <b>
     推荐引用方式：
    </b>
    <span>
     王长志,周宇,闫鑫.(2018).API文档缺陷自动检测和修复方法.计算机应用研究.[ChinaXiv:201809.00131]
    </span>
   </li>
  </ul>
 </div>
 <div class=""ft"">
  <h4>
   <span>
    版本历史
   </span>
  </h4>
  <table style=""font-size:14px;"">
   <tr>
    <td>
     <b>
      [V1]
     </b>
    </td>
    <td>
     2018-09-13 17:14:46
    </td>
    <td>
     ChinaXiv:201809.00131V1
    </td>
    <td>
     <a class=""btn"" href=""https://chinaxiv.org/user/download.htm?id=26599"" rel=""nofollow"">
      下载全文
     </a>
    </td>
   </tr>
  </table>
 </div>
</div>
","['chinaxivmirror', 'journals']"
IDOL-OC-AJ-MAY-2018-QP,Advanced Java (Elective – I) (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['opensource', 'community']"
IDOL-OC-BPR-MAY-2018-QP,BPR (Elective – II) (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['opensource', 'community']"
IDOL-OC-ERP-MAY-2018-QP,ERP Systems (Elective – II) (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
IDOL-OC-ESP-MAY-2018-QP,Embedded Systems And Programming (Elective – I) (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
IDOL-OC-GIS-MAY-2018-QP,GIS (Elective – II) (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
IDOL-OC-IS-MAY-2018-QP,Internet Security (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
IDOL-OC-M-MAY-2018-QP,Multimedia (Elective – I) (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
IDOL-OC-MIS-MAY-2018-QP,Management Information Systems (Elective – II) (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
IDOL-OC-SQL-2-MAY-2018-QP,SQL – 2 (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
IDOL-OC-VB-6-MAY-2018-QP,Visual Basic – 6 (May – 2018) [IDOL - Old Course | Question Paper],K,"May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
IDOL-OC-WD-MAY-2018-QP,Web Design and Internet Based Applications (Elective – I) (May – 2018) [IDOL - Old Course | Question Paper],K,"<b><u>Web Design and Internet Based Applications (Elective – I) (May – 2018) [IDOL - Old Course | Question Paper]</u></b><div><br /></div><div><i>May - 2018, question papers, old question paper, mumbai university, bscit, tybscit, tybscit semester v, semester v question paper, old course, semester v old course, old course question paper, mumbai university old course, Internet Security, SQL - 2, Visual Basic - 6, Elective - I, Advanced Java, Embedded Systems And Programming, Multimedia, Web Design and Internet Based Applications, Elective - II, BPR, ERP Systems, GIS, Management Information Systems</i><br /></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
SEM-V-IDOL-OC-MAY-2018-QP,B.Sc.IT: SEMESTER - V (May - 2018) [IDOL: Old Course | Question Paper],K,"<div><b><u>B.Sc.IT: SEMESTER - V (May - 2018) [IDOL: Old Course | Question Paper]</u></b><br /></div><div><b><u><br /></u></b></div><div><b>advanced java, bscit, elective - i, embedded systems and </b><i>programming, internet security, may - 2018, multimedia, mumbai university, mumbai university old course, old course, old course question paper, old question paper, question papers, semester v old course, semester v question paper, sql - 2, tybscit, tybscit semester v, visual basic - 6, web design and internet based applications</i><br /></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
BSCITSEMVSYLLABUS,B.Sc.IT: Semester - V – Syllabus (2018 - 2019) [Mumbai University] ,K,"<b><u>B.Sc.IT: Semester - V – Syllabus (2018 - 2019) [Mumbai University] </u></b><div><b><u><br /></u></b></div><div><i></i><div>Software Project Management, Internet of Things, Artificial Intelligence, Advanced Web Programming, Linux System Administration, Enterprise Java, Next Generation Technologies, Elective - I, Elective - II, </div><div>semester v, bscit, mumbai university, syllabus, 2018-2019, </div></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
kamalthakurbscit_gmail_AWP,Advanced Web Programming – Syllabus (2018 - 2019) [Mumbai University] ,K,"<div><b><u>Advanced Web Programming – Syllabus (2018 - 2019) [Mumbai University] </u></b><br /></div><div><br /></div><div><i></i><div>Software Project Management, Internet of Things, Artificial Intelligence, Advanced Web Programming, Linux System Administration, Enterprise Java, Next Generation Technologies, Elective - I, Elective - II, </div><div>semester v, bscit, mumbai university, syllabus, 2018-2019, </div></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
kamalthakurbscit_gmail_EJ,Enterprise Java – Syllabus (2018 - 2019) [Mumbai University] ,K,"<div><b><u>Enterprise Java – Syllabus (2018 - 2019) [Mumbai University] </u></b><br /></div><div><br /></div><div><i></i><div>Software Project Management, Internet of Things, Artificial Intelligence, Advanced Web Programming, Linux System Administration, Enterprise Java, Next Generation Technologies, Elective - I, Elective - II, </div><div>semester v, bscit, mumbai university, syllabus, 2018-2019, </div></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
kamalthakurbscit_gmail_IOT,Internet of Things – Syllabus (2018 - 2019) [Mumbai University] ,K,"<div><b><u>Internet of Things – Syllabus (2018 - 2019) [Mumbai University] </u></b><br /></div><div><br /></div><div><i></i><div>Software Project Management, Internet of Things, Artificial Intelligence, Advanced Web Programming, Linux System Administration, Enterprise Java, Next Generation Technologies, Elective - I, Elective - II, </div><div>semester v, bscit, mumbai university, syllabus, 2018-2019, </div></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
kamalthakurbscit_gmail_LSA,Linux System Administration – Syllabus (2018 - 2019) [Mumbai University] ,K,"<div><b><u>Linux System Administration – Syllabus (2018 - 2019) [Mumbai University] </u></b><br /></div><div><br /></div><div><i></i><div>Software Project Management, Internet of Things, Artificial Intelligence, Advanced Web Programming, Linux System Administration, Enterprise Java, Next Generation Technologies, Elective - I, Elective - II, </div><div>semester v, bscit, mumbai university, syllabus, 2018-2019, </div></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
kamalthakurbscit_gmail_SPM,Software Project Management – Syllabus (2018 - 2019) [Mumbai University] ,K,"<div><b><u>Software Project Management – Syllabus (2018 - 2019) [Mumbai University] </u></b><br /></div><div><br /></div><div><i></i><div>Software Project Management, Internet of Things, Artificial Intelligence, Advanced Web Programming, Linux System Administration, Enterprise Java, Next Generation Technologies, Elective - I, Elective - II, </div><div>semester v, bscit, mumbai university, syllabus, 2018-2019, </div></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
the-java-language-specification-java-se-11-edition,"The Java Language Specification, Java SE 11 Edition",O,"The Java Language Specification, Java SE 11 Edition <br />",opensource
kamalthakurbscit_gmail_AI,Artificial Intelligence – Syllabus (2018 - 2019) [Mumbai University] ,K,"<div><b><u>Artificial Intelligence – Syllabus (2018 - 2019) [Mumbai University] </u></b><br /></div><div><br /></div><div><i></i><div>Software Project Management, Internet of Things, Artificial Intelligence, Advanced Web Programming, Linux System Administration, Enterprise Java, Next Generation Technologies, Elective - I, Elective - II, </div><div>semester v, bscit, mumbai university, syllabus, 2018-2019, </div></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
kamalthakurbscit_gmail_NGT,Next Generation Technologies – Syllabus (2018 - 2019) [Mumbai University] ,K,"<div><b><u>Next Generation Technologies – Syllabus (2018 - 2019) [Mumbai University] </u></b><br /></div><div><br /></div><div><i></i><div>Software Project Management, Internet of Things, Artificial Intelligence, Advanced Web Programming, Linux System Administration, Enterprise Java, Next Generation Technologies, Elective - I, Elective - II, </div><div>semester v, bscit, mumbai university, syllabus, 2018-2019, </div></div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
StandfordWeek1A,Standford Week 1 A,R,intro to java programming ,"['opensource', 'community']"
OOPSR2017,OOPSR 2017,K,"

<p class=""MsoNormal"" style=""margin-bottom:12pt;text-align:justify;line-height:150%;"">This book “Object Oriented Programming” is about basic idea towards
object oriented programming with Java. It provides clear view towards object
oriented mechanism adapted in programming languages. It provides a preliminary
study on understanding Java with several illustration program. It affords procedural
footsteps from command-line to graphical user interface.</p>

","['opensource', 'community']"
ERIC_ED592860,ERIC ED592860: Using Chess Programming in Computer Education,E,"Chess programming is an old and venerable branch of game development. In the modern computing environment, it encompasses the development of chess engines, chess user interfaces (UIs), chess tournament broadcast tools, chess databases, endgame tablebases (EGTBs) and opening books. In this paper, the author shares his multi-year experience of utilizing most of these components of chess programming in teaching undergraduate courses in computer science (CS) and computer and information technology (CIT). The courses at different levels were taught at Edinboro University of Pennsylvania and, most recently, at Purdue Polytechnic Columbus, formerly called Purdue College of Technology Columbus. They involved teaching programming in C, C++ and Java, as well as system administration. We will discuss the courses' structure and learning outcomes, the choices of tools and equipment, how the courses progressed, individual assignments and team projects, the lessons learned, the specifics of getting the students engaged, and the author's plans for the future work aimed at improvement of programming and computer networking skills of Purdue Polytechnic students via their involvement in different aspects of chess programming. [For the full proceedings, see ED592847.]","['ericarchive', 'additional_collections']"
DTIC_ADA409209,DTIC ADA409209: Anatomical Models for Virtual Reality and Web-Based Applications,D,"We present a methodology for the creation, manipulation and transmission of 3D anatomical models starting from stacks of medical images. The anatomical information for the models is first segmented from the images and then used by a surface reconstruction algorithm to create 3D meshes that accurately represent the surface of the organs being modeled. The meshes are then exported in an open format for manipulation in a graphics platform. Using high-end graphics algorithms we render and texture-map our meshes. We can also deform the meshes and assign physical and material properties to them. Our models can be used for virtual reality applications and can also be transmitted over the Internet for remote interactive visualization and retrieval.","['dticarchive', 'additional_collections']"
rfc8353,Generic Security Service API Version 2: Java Bindings Update,M. Upadhyay,"The Generic Security Services Application Programming Interface (GSS-API) offers application programmers uniform access to security services atop a variety of underlying cryptographic mechanisms. This document updates the Java bindings for the GSS-API that are specified in ""Generic Security Service API Version 2: Java Bindings Update"" (RFC 5653). This document obsoletes RFC 5653 by adding a new output token field to the GSSException class so that when the initSecContext or acceptSecContext methods of the GSSContext class fail, it has a chance to emit an error token that can be sent to the peer for debugging or informational purpose. The stream-based GSSContext methods are also removed in this version.",rfcseries
2018JavaNotesForProfessionals,Java Notes for Professionals,S,"<p>The <i>Java® Notes for Professionals</i> book is compiled from <a href=""https://archive.org/details/documentation-dump.7z"" rel=""nofollow"">Stack Overflow Documentation</a>, the content is written by the beautiful people at Stack Overflow. Text content is released under Creative Commons BY-SA. See credits at the end of this book whom contributed to the various chapters. Images may be copyright of their respective owners unless otherwise specified.</p>
<p>Book created for educational purposes and is not affiliated with Java group(s), company(s) nor Stack Overflow. All trademarks belong to their respective company owners.</p>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
ERIC_ED590377,ERIC ED590377: Dynamic Program Visualization on Android Smartphones for Novice Java Programmers,E,"Dynamic program visualization tools helps to reduce the cognitive load of students in learning programming. However, to authors' understanding there is no dynamic program visualization tool that can be used in a widely available smartphones. In this study, we design a Dynamic visualization engine for java programs that is integrated to java code interpreter that runs on android smartphones. This tool will be valuable to students who do not have access to computers. It can also increase productivity in smartphone usage among lower secondary schools students. [For the complete proceedings, see ED590271.]","['ericarchive', 'additional_collections']"
httpsierj.injournalindex.phpierjarticleview1534,EXPLORING KOTLIN’S ENHANCEMENTS FOR MULTIPLATFORM PROJECTS,P,"<span style=""color:rgba(0,0,0,0.87);font-family:'Noto Sans', '-apple-system', BlinkMacSystemFont, 'Segoe UI', Roboto, 'Oxygen-Sans', Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;font-size:14px;background-color:rgb(255,255,255);"">There has been a huge growing interest for using the newly launched Kotlin programming language in scientific and engineering applications. While Java which is one of the most widely used programming languages and also the official language of Android development, there are various reasons why Java might not always be the best option for various projects. This is just because Kotlin truly offers several features, which other traditional languages (C, C++, Java and FORTRAN) lack. Also, the historic poor performance of Java stops it from being widely used in scientific applications. Kotlin 1.2 was a major new release and a big step on the road towards enabling the use of Kotlin across all components of a modern application and multiplatform project. This study explores the major improvements and feature scopes over the year of the newly released enhanced version of Kotlin.</span>","['journals_contributions', 'journals']"
the-java-language-specification-java-se-10-edition,"The Java Language Specification, Java SE 10 Edition",O,"The Java Language Specification, Java SE 10 Edition <br />",opensource
ijtret-vol2-issue1-6,STT-TTS Conversion Engine for Facilitating impaired people to Communicate on normal voice call,S,"<div>The disabled (hearing and speech impaired people) find it difficult to communicate through a normal voice call. They require the ability to talk/listen remotely and this is unavoidable in emergency situations. To rectify this problem we propose a speech recognizing and conversion android application that has two major modules- a speech to text engine and a text to speech engine. The former receives an incoming call as the input and converts it to text which will be displayed on an interface, the latter receives the text on the interface and uses android speech synthesis to generate a voice and transmits it to the other end. It is to be noted that it’s not mandatory for both users in the communication to have the app, only the disabled people will have the app.</div><div><br /></div>","['opensource', 'community']"
2018eloquentjavascript,Eloquent JavaScript: A Modern Introduction to Programming,M,"<br />JavaScript lies at the heart of almost every modern web application, from social apps like Twitter to browser-based game frameworks like Phaser and Babylon. Though simple for beginners to pick up and play with, JavaScript is a flexible, complex language that you can use to build full-scale applications.<br /><br />This much anticipated and thoroughly revised third edition of Eloquent JavaScript dives deep into the JavaScript language to show you how to write beautiful, effective code. It has been updated to reflect the current state of Java¬Script and web browsers and includes brand-new material on features like class notation, arrow functions, iterators, async functions, template strings, and block scope. A host of new exercises have also been added to test your skills and keep you on track.<br /><br />As with previous editions, Haverbeke continues to teach through extensive examples and immerses you in code from the start, while exercises and full-chapter projects give you hands-on experience with writing your own programs. You start by learning the basic structure of the JavaScript language as well as control structures, functions, and data structures to help you write basic programs. Then you'll learn about error handling and bug fixing, modularity, and asynchronous programming before moving on to web browsers and how JavaScript is used to program them. As you build projects such as an artificial life simulation, a simple programming language, and a paint program, you'll learn how to:<br /><br /><ul><li>Understand the essential elements of programming, including syntax, control, and data</li><li>Organize and clarify your code with object-oriented and functional programming techniques</li><li>Script the browser and make basic web applications</li><li>Use the DOM effectively to interact with browsers</li><li>Harness Node.js to build servers and utilities</li></ul><br /><div>Isn't it time you became fluent in the language of the Web?</div>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
apostilas-java-etec,Apostilas de Programação Java,E,"Apostilas de Programação Java, Etec Prof. Horácio Augusto da Silveira, 2018.","['booksbylanguage_portuguese', 'booksbylanguage']"
intrinsically-typed-definitional-interpreters,Intrinsically-Typed Definitional Interpreters for Imperative Languages,C,"<div><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">Casper Bach Poulsen; Arjen Rouvoet; Andrew Tolmach; Robbert Krebbers; Eelco Visser</span></div><div><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""><br /></span></div><div><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">A definitional interpreter defines the semantics of an object language in terms of the (well-known) semantics</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> of a host language, enabling understanding and validation of the semantics through execution. Combining</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> a definitional interpreter with a separate type system requires a separate type safety proof. An alternative</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> approach, at least for pure object languages, is to use a dependently-typed language to encode the object </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">language type system in the definition of the abstract syntax. Using such intrinsically-typed abstract syntax </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">definitions allows the host language type checker to verify automatically that the interpreter satisfies type</span> <span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">safety. Does this approach scale to larger and more realistic object languages, and in particular to languages </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">with mutable state and objects?</span><br /><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""><br /></span></div><div><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">In this paper, we describe and demonstrate techniques and libraries in Agda that successfully scale up</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> intrinsically-typed definitional interpreters to handle rich object languages with non-trivial binding structures</span> <span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">and mutable state. While the resulting interpreters are certainly more complex than the simply-typed</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">λ</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">-</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">calculus interpreter we start with, we claim that they still meet the goals of being concise, comprehensible,</span> <span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">and executable, while guaranteeing type safety for more elaborate object languages. We make the following</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> contributions: (1) A</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">dependent-passing style</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">technique for hiding the weakening of indexed values as they </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">propagate through monadic code. (2) An Agda library for programming with</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">scope graphs</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">and</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">frames</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">, which</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> provides a uniform approach to dealing with name binding in intrinsically-typed interpreters. (3) Case studies</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> of intrinsically-typed definitional interpreters for the simply-typed</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> </span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">λ</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr"">-calculus with references (STLC+Ref)</span><span style=""font-size:14.944px;font-family:sans-serif;"" dir=""ltr""> and for a large subset of Middleweight Java (MJ).</span></div>","['opensource', 'community']"
java-the-complete-reference-eleventh-edition,java-the-complete-reference-eleventh-edition,S,"<span style=""color:rgb(51,51,51);font-family:'Amazon Ember', Arial, sans-serif;font-size:14px;background-color:rgb(255,255,255);"">The definitive guide to Java programming—thoroughly revised for long-term support release Java SE 11. Fully updated for the current version of Java, Java SE 11, This practical guide from Oracle press shows, step by step, how to design, write, troubleshoot, run, and maintain high-performance Java programs. Inside, bestselling author Herbert schildt covers the entire Java language, including its syntax, Keywords, and libraries. The book lays out cutting-edge programming techniques and best practices. Java: the complete reference, eleventh edition features clear explanations, detailed code samples, and real-world examples that demonstrate how Java can be put to work in the real world. Javabeans, servlets, applets, swing, Lambda expressions, multithreading, and the default interface method are thoroughly discussed. Readers will get full details on all of the new features and functions available in Java SE 11. Highlights: 1. Designed for novice, intermediate, and professional programmers alike 2. Source code for all examples and projects are available for download 3. Written in the clear, uncompromising style herb schildt is famous for.</span>","['opensource', 'community']"
perf-zine,Profiling & tracing with perf,J,"<blockquote><p>Want to get better at profiling & tracing your programs on Linux? perf is a super useful tool, but it’s fairly complicated and I found it hard to get started with. Over the last 4 years, I’ve learned a lot about how perf works, and I’ve compressed what I know into this zine for you!</p>
<p>You’ll learn how you can use perf to profile programs in many different programming languages (C, node.js, Java, Rust, and more!), how to count any kernel event you’re interested in (syscalls! network packets sent!), how to analyze the data that perf gives you, and more!</p>
</blockquote>

<p><a href=""https://wizardzines.com/zines/perf/"" rel=""nofollow"">https://wizardzines.com/zines/perf/</a></p>","['zines_inbox', 'zines']"
NASA_NTRS_Archive_20170012220,NASA Technical Reports Server (NTRS) 20170012220: QSPIN: A High Level Java API for Quantum Computing Experimentation,N,"QSPIN is a high level Java language API for experimentation in QC models used in the calculation of Ising spin glass ground states and related quadratic unconstrained binary optimization (QUBO) problems. The Java API is intended to facilitate research in advanced QC algorithms such as hybrid quantum-classical solvers, automatic selection of constraint and optimization parameters, and techniques for the correction and mitigation of model and solution errors. QSPIN includes high level solver objects tailored to the D-Wave quantum annealing architecture that implement hybrid quantum-classical algorithms [Booth et al.] for solving large problems on small quantum devices, elimination of variables via roof duality, and classical computing optimization methods such as GPU accelerated simulated annealing and tabu search for comparison. A test suite of documented NP-complete applications ranging from graph coloring, covering, and partitioning to integer programming and scheduling are provided to demonstrate current capabilities.","['NASA_NTRS_Archive', 'additional_collections']"
DTIC_AD1043395,DTIC AD1043395: Verified compilation of Concurrent Managed Languages,D,"The goal of the Havoc project was to explore new proof techniques and methodologies that would enable scalable and modular verification of modern concurrent programming languages like Java or C# . The efforts undertaken during the lifetime of this effort focused on (a) new proof techniques, specifically the use of refinement methods and tactics to simplify reasoning about interferences in proving invariants about concurrent code; (b) incorporating precise notions of memory models, both at the processor and language level, to enable compilation to exploit and be faithful to language definitions and processor features; (c) new designs for compiler intermediate representations that facilitate mechanized proofs and verification; and (d) a realistic case study that combines these ideas to prove the correctness of a state-of-the-art concurrent garbage collector.","['dticarchive', 'additional_collections']"
ERIC_EJ1161807,ERIC EJ1161807: The Effect of Animation in Multimedia Computer-Based Learning and Learning Style to the Learning Results,E,"The effectiveness of a learning depends on four main elements, they are content, desired learning outcome, instructional method and the delivery media. The integration of those four elements can be manifested into a learning module which is called multimedia learning or learning by using multimedia. In learning context by using computer-based multimedia, there are two main things that need to be noticed so that the learning process can run effectively: how the content is presented, and what the learner's chosen way in accepting and processing the information into a meaningful knowledge. First it is related with the way to visualize the content and how people learn. The second one is related with the learning style of the learner. This research aims to investigate the effect of the type of visualization--static vs animated--on a multimedia computer-based learning, and learning styles--visual vs verbal, towards the students' capability in applying the concepts, procedures, principles of Java programming. Visualization type act as independent variables, and learning styles of the students act as a moderator variable. Moreover, the instructional strategies followed the Component Display Theory of Merril, and the format of presentation of multimedia followed the Seven Principles of Multimedia Learning of Mayer and Moreno. Learning with the multimedia computer-based learning has been done in the classroom. The subject of this research was the student of STMIK-STIKOM Bali in odd semester 2016-2017 which followed the course of Java programming. The Design experiments used multivariate analysis of variance, MANOVA 2 x 2, with a large sample of 138 students in 4 classes. Based on the results of the analysis, it can be concluded that the animation in multimedia interactive learning gave a positive effect in improving students' learning outcomes, particularly in the applying the concepts, procedures, and principles of Java programming. The difference of students' learning styles--visual or verbal, it can also gave the different effect in students' learning results acquisition. There was no interaction effect between the factors of visualization type and learning styles.","['ericarchive', 'additional_collections']"
the-java-language-specification-java-se-9-edition,"The Java Language Specification, Java SE 9 Edition",O,"The Java Language Specification, Java SE 9 Edition<br />",opensource
android-8.7-cc,The Busy Coder's Guide to Android Development (Version 8.7),M,"<p>Do you want comprehensive information about how to develop Android apps? This book contains over 200 chapters, covering everything from the first steps in getting an app going to advanced development techniques. Use the search field in the nav bar to see what is inside this book and the rest of the CommonsWare library!</p>

<p>This book is published in PDF, EPUB, and MOBI/Kindle formats, for use in your favorite digital book reader. Or, read directly in your Web browser on <a href=""https://wares.commonsware.com"" rel=""nofollow"">the Warescription site</a>, complete with full-text searching.</p>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
ERIC_EJ1140879,ERIC EJ1140879: Java vs. Python Coverage of Introductory Programming Concepts: A Textbook Analysis,E,"In this research, we compare two languages, Java and Python, by performing a content analysis of words in textbooks that describe important programming concepts. Our goal is to determine which language has better textbook support for teaching introductory programming courses. We used the TextSTAT program to count how often our list of concept words appear in a sample of Java and Python textbooks. We summarize and compare the results, leading to several conclusions that relate to the choice of language for a CS0 or CS1 course.","['ericarchive', 'additional_collections']"
ERIC_EJ1142289,ERIC EJ1142289: Understanding Learners' Motivation and Learning Strategies in MOOCs,E,"MOOCs (Massive Open Online Courses) have changed the way in which OER (Open Educational Resources) are bundled by teachers and consumed by learners. MOOCs represent an evolution towards the production and offering of structured quality OER. Many institutions that were initially reluctant to providing OER have, however, joined the MOOC wave. Nevertheless, MOOCs detractors strongly criticize their high dropout rates. The dropout rate is a commonly accepted metric of success for traditional education, but it may not be as suitable when dealing with OER, in general, and with MOOCs, in particular, since learners' motivations to take a course are very diverse, and certain self-regulated learning strategies are required to tackle the lack of personalized tutoring and keep pace in the course. This paper presents an empirical study on the motivation and learning strategies of MOOC learners. Six thousand three hundred and thirty-five learners from 160 countries answered a self-report 7-point Likert-type questionnaire based on the Motivated Strategies for Learning Questionnaire (MSLQ) as part of a MOOC titled ""Introduction to Programming with Java"". Results indicate that learners were highly motivated and confident to do well in the course. Learning strategies, however, can be improved, especially regarding time management.","['ericarchive', 'additional_collections']"
NASA_NTRS_Archive_20170004398,NASA Technical Reports Server (NTRS) 20170004398: Electronics and Software Engineer for Robotics Project Intern,N,"I was assigned to mentor high school students for the 2017 First Robotics Competition. Using a team based approach, I worked with the students to program the robot and applied my electrical background to build the robot from start to finish. I worked with students who had an interest in electrical engineering to teach them about voltage, current, pulse width modulation, solenoids, electromagnets, relays, DC motors, DC motor controllers, crimping and soldering electrical components, Java programming, and robotic simulation. For the simulation, we worked together to generate graphics files, write simulator description format code, operate Linux, and operate SOLIDWORKS. Upon completion of the FRC season, I transitioned over to providing full time support for the LCS hardware team. During this phase of my internship I helped my co-intern write test steps for two networking hardware DVTs , as well as run cables and update cable running lists.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1703.10674,User Interface Design Smell: Automatic Detection and Refactoring of Blob Listeners,Arnaud Blouin,"User Interfaces (UIs) intensively rely on event-driven programming: widgets send UI events, which capture users' interactions, to dedicated objects called controllers. Controllers use several UI listeners that handle these events to produce UI commands. First, we reveal the presence of design smells in the code that describes and controls UIs. Second, we demonstrate that specific code analyses are necessary to analyze and refactor UI code, because of its coupling with the rest of the code. We conducted an empirical study on four large Java Swing and SWT open-source software systems. We study to what extent the number of UI commands that a UI listener can produce has an impact on the change- and fault-proneness of the UI listener code. We develop a static code analysis for detecting UI commands in the code. We identify a new type of design smell, called Blob Listener that characterizes UI listeners that can produce more than two UI commands. We propose a systematic static code analysis procedure that searches for Blob Listeners that we implement in InspectorGuidget. We conducted experiments on the four software systems for which we manually identified 53 instances of Blob Listener. InspectorGuidget successfully detected 52 Blob Listeners out of 53. The results exhibit a precision of 81.25% and a recall of 98.11%. We then developed a semi-automatically and behavior-preserving refactoring process to remove Blob Listeners. 49.06% of the 53 Blob Listeners were automatically refactored. Patches for JabRef, and FreeCol have been accepted and merged. Discussions with developers of the four software systems assess the relevance of the Blob Listener. This work shows that UI code also suffers from design smells that have to be identified and characterized. We argue that studies have to be conducted to find other UI design smells and tools that analyze UI code must be developed.","['arxiv', 'journals']"
arxiv-1703.08803,Automatic Detection of GUI Design Smells: The Case of Blob Listener,Valéria Lelli,"Graphical User Interfaces (GUIs) intensively rely on event-driven programming: widgets send GUI events, which capture users' interactions, to dedicated objects called controllers. Controllers implement several GUI listeners that handle these events to produce GUI commands. In this work, we conducted an empirical study on 13 large Java Swing open-source software systems. We study to what extent the number of GUI commands that a GUI listener can produce has an impact on the change-and fault-proneness of the GUI listener code. We identify a new type of design smell, called Blob listener that characterizes GUI listeners that can produce more than two GUI commands. We show that 21 % of the analyzed GUI controllers are Blob listeners. We propose a systematic static code analysis procedure that searches for Blob listener that we implement in InspectorGuidget. We conducted experiments on six software systems for which we manually identified 37 instances of Blob listener. InspectorGuidget successfully detected 36 Blob listeners out of 37. The results exhibit a precision of 97.37 % and a recall of 97.59 %. Finally, we propose coding practices to avoid the use of Blob listeners.","['arxiv', 'journals']"
arxiv-1703.06576,A Model-Derivation Framework for Software Analysis,Bugra M. Yildiz,"Model-based verification allows to express behavioral correctness conditions like the validity of execution states, boundaries of variables or timing at a high level of abstraction and affirm that they are satisfied by a software system. However, this requires expressive models which are difficult and cumbersome to create and maintain by hand. This paper presents a framework that automatically derives behavioral models from real-sized Java programs. Our framework builds on the EMF/ECore technology and provides a tool that creates an initial model from Java bytecode, as well as a series of transformations that simplify the model and eventually output a timed-automata model that can be processed by a model checker such as UPPAAL. The framework has the following properties: (1) consistency of models with software, (2) extensibility of the model derivation process, (3) scalability and (4) expressiveness of models. We report several case studies to validate how our framework satisfies these properties.","['arxiv', 'journals']"
NASA_NTRS_Archive_20170002277,NASA Technical Reports Server (NTRS) 20170002277: Ground System Architectures Workshop GMSEC SERVICES SUITE (GSS): an Agile Development Story,N,"The GMSEC (Goddard Mission Services Evolution Center) Services Suite (GSS) is a collection of tools and software services along with a robust customizable web-based portal that enables the user to capture, monitor, report, and analyze system-wide GMSEC data. Given our plug-and-play architecture and the needs for rapid system development, we opted to follow the Scrum Agile Methodology for software development. Being one of the first few projects to implement the Agile methodology at NASA GSFC, in this presentation we will present our approaches, tools, successes, and challenges in implementing this methodology. The GMSEC architecture provides a scalable, extensible ground and flight system for existing and future missions. GMSEC comes with a robust Application Programming Interface (GMSEC API) and a core set of Java-based GMSEC components that facilitate the development of a GMSEC-based ground system. Over the past few years, we have seen an upbeat in the number of customers who are moving from a native desktop application environment to a web based environment particularly for data monitoring and analysis. We also see a need to provide separation of the business logic from the GUI display for our Java-based components and also to consolidate all the GUI displays into one interface. This combination of separation and consolidation brings immediate value to a GMSEC-based ground system through increased ease of data access via a uniform interface, built-in security measures, centralized configuration management, and ease of feature extensibility.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1702.07103,Discriminating Traces with Time,Saeid Tizpaz-Niari,"What properties about the internals of a program explain the possible differences in its overall running time for different inputs? In this paper, we propose a formal framework for considering this question we dub trace-set discrimination. We show that even though the algorithmic problem of computing maximum likelihood discriminants is NP-hard, approaches based on integer linear programming (ILP) and decision tree learning can be useful in zeroing-in on the program internals. On a set of Java benchmarks, we find that compactly-represented decision trees scalably discriminate with high accuracy---more scalably than maximum likelihood discriminants and with comparable accuracy. We demonstrate on three larger case studies how decision-tree discriminants produced by our tool are useful for debugging timing side-channel vulnerabilities (i.e., where a malicious observer infers secrets simply from passively watching execution times) and availability vulnerabilities.","['arxiv', 'journals']"
arxiv-1702.05510,Java Code Analysis and Transformation into AWS Lambda Functions,Josef Spillner,"Software developers are faced with the issue of either adapting their programming model to the execution model (e.g. cloud platforms) or finding appropriate tools to adapt the model and code automatically. A recent execution model which would benefit from automated enablement is Function-as-a-Service. Automating this process requires a pipeline which includes steps for code analysis, transformation and deployment. In this paper, we outline the design and runtime characteristics of Podilizer, a tool which implements the pipeline specifically for Java source code as input and AWS Lambda as output. We contribute technical and economic metrics about this concrete 'FaaSification' process by observing the behaviour of Podilizer with two representative Java software projects.","['arxiv', 'journals']"
DTIC_AD1027177,"DTIC AD1027177: Statis Program Analysis for Reliable, Trusted Apps",D,"This report presents three main contributions of the SPARTA project, which was part of DARPAs Automated Program Analysis for Cybersecurity (APAC) program. The first contribution, is a model for collaborative verification of information flow for a high-integrity app store. The second contribution is analyses for implicit control flow that improve precision of downstream analyses. The third contribution is improvements to the Checker Framework. The Checker Framework is an open-source tool that enhances Javas type system to make it more powerful and useful.","['dticarchive', 'additional_collections']"
arxiv-1701.04045,Static Detection of DoS Vulnerabilities in Programs that use Regular Expressions (Extended Version),Valentin Wüstholz,"In an algorithmic complexity attack, a malicious party takes advantage of the worst-case behavior of an algorithm to cause denial-of-service. A prominent algorithmic complexity attack is regular expression denial-of-service (ReDoS), in which the attacker exploits a vulnerable regular expression by providing a carefully-crafted input string that triggers worst-case behavior of the matching algorithm. This paper proposes a technique for automatically finding ReDoS vulnerabilities in programs. Specifically, our approach automatically identifies vulnerable regular expressions in the program and determines whether an ""evil"" input string can be matched against a vulnerable regular expression. We have implemented our proposed approach in a tool called REXPLOITER and found 41 exploitable security vulnerabilities in Java web applications.","['arxiv', 'journals']"
arxiv-1701.02284,DeepDSL: A Compilation-based Domain-Specific Language for Deep Learning,Tian Zhao,"In recent years, Deep Learning (DL) has found great success in domains such as multimedia understanding. However, the complex nature of multimedia data makes it difficult to develop DL-based software. The state-of-the art tools, such as Caffe, TensorFlow, Torch7, and CNTK, while are successful in their applicable domains, are programming libraries with fixed user interface, internal representation, and execution environment. This makes it difficult to implement portable and customized DL applications. In this paper, we present DeepDSL, a domain specific language (DSL) embedded in Scala, that compiles deep networks written in DeepDSL to Java source code. Deep DSL provides (1) intuitive constructs to support compact encoding of deep networks; (2) symbolic gradient derivation of the networks; (3) static analysis for memory consumption and error detection; and (4) DSL-level optimization to improve memory and runtime efficiency. DeepDSL programs are compiled into compact, efficient, customizable, and portable Java source code, which operates the CUDA and CUDNN interfaces running on Nvidia GPU via a Java Native Interface (JNI) library. We evaluated DeepDSL with a number of popular DL networks. Our experiments show that the compiled programs have very competitive runtime performance and memory efficiency compared to the existing libraries.","['arxiv', 'journals']"
DTIC_AD1028781,DTIC AD1028781: Enhancement of the Logistics Battle Command Model: Architecture Upgrades and Attrition Module Development,D,This project enhances the capabilities of the Logistics Battle Command (LBC) model in two key areas: updating the underlying software architecture from 32-bit Java (1.6) to 64-bit Java (1.8) and the development and implementation of a dynamic attrition module.,"['dticarchive', 'additional_collections']"
arxiv-1701.00634,A Practical Study of Control in Objected-Oriented--Functional--Logic Programming with Paisley,Baltasar Trancón y Widemann,"Paisley is an extensible lightweight embedded domain-specific language for nondeterministic pattern matching in Java. Using simple APIs and programming idioms, it brings the power of functional-logic processing of arbitrary data objects to the Java platform, without constraining the underlying object-oriented semantics. Here we present an extension to the Paisley framework that adds pattern-based control flow. It exploits recent additions to the Java language, namely functional interfaces and lambda expressions, for an explicit and transparent continuation-passing style approach to control. We evaluate the practical impact of the novel features on a real-world case study that reengineers a third-party open-source project to use Paisley in place of conventional object-oriented data query idioms. We find the approach viable for incremental refactoring of legacy code, with significant qualitative improvements regarding separation of concerns, clarity and intentionality, thus making for easier code understanding, testing and debugging.","['arxiv', 'journals']"
ERIC_EJ1163238,ERIC EJ1163238: Some Aspects of Grading Java Code Submissions in MOOCs,E,"Recently, massive open online courses (MOOCs) have been offering a new online approach in the field of distance learning and online education. A typical MOOC course consists of video lectures, reading material and easily accessible tests for students. For a computer programming course, it is important to provide interactive, dynamic, online coding exercises and more complex programming assignments for learners. It is expedient for the students to receive prompt feedback on their coding submissions. Although MOOC automated programme evaluation subsystem is capable of assessing source programme files that are in learning management systems, in MOOC systems there is a grader that is responsible for evaluating students' assignments with the result that course staff would be required to assess thousands of programmes submitted by the participants of the course without the benefit of an automatic grader. This paper presents a new concept for grading programming submissions of students and improved techniques based on the Java unit testing framework that enables automatic grading of code chunks. Some examples are also given such as the creation of unique exercises by dynamically generating the parameters of the assignment in a MOOC programming course combined with the kind of coding style recognition to teach coding standards.","['ericarchive', 'additional_collections']"
ProgrammingBasicsJavaCourseSoftUni,Programming Basics Java Course @ SoftUni,S,Programming Basics with Java course @ SoftUni - Oct 2017,"['opensource_media', 'community']"
androidappsforab0000jack_i1p6,Android apps for absolute beginners : covering Android 7 ,J,"['1 online resource', ""Get your first Android apps up and running with the help of plain English and practical examples. If you have a great idea for an Android app, but have never programmed before, then this book is for you. Android Apps for Absolute Beginners cuts through the fog of jargon and mystery that surrounds Android app development, and gives you simple, step-by-step instructions to get you started. This book teaches Android application development in language anyone can understand, giving you the best possible start in Android development. It provides clean, straightforward examples that make learning easy, allowing you to pick up the concepts without fuss. It offers clear code descriptions and layout so that you can get your apps running as soon as possible Although this book covers what's new in Android 7, it is also backwards compatible to cover some of the previous Android releases. You will: Download, install, and configure the latest software needed for Android app development Work efficiently using an integrated development environment (IDE) Build useful, attractive applications and get them working immediately Create apps with ease using XML markup and drag-and-drop graphical layout editors Use new media and graphics to skin your app so that it has maximum appeal Create advanced apps combining XML, Java and new media content"", 'Online resource; title from PDF title page (EBSCO, viewed March 21, 2017)', 'An introduction to Android 7.0 Nougat -- Setting up an Android studio development system -- An introduction to the Android studio integrated development environment -- Introduction to XML: defining an Android app, its design, and constants -- Introduction to Java: objects, methods, classes, and interfaces -- Android user interface design: using activity, view and viewgroup classes -- Making apps interactive: events and intents -- Android design patterns : UI design paradigms -- Android graphic design: making your UI designs visual -- Android animation: image and procedural animation -- Digital video: streaming video, MediaPlayer, and MediaController classes -- Digital audio: sequencing audio using SoundPool -- Android services and threads: background processing -- Android content providers: datastore concepts', 'Includes bibliographical references']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
androidstudio30d0000smyt,Android Studio 3.0 development essentials : Android 8 edition,S,"['xix, 701 pages : 24 cm', 'Fully updated for Android Studio 3.0 and Android 8, the goal of this book is to teach the skills necessary to develop Android based applications using the Android Studio Integrated Development Environment (IDE), the Android 8 Software Development Kit (SDK) and the Java programming language. Beginning with the basics, this book provides an outline of the steps necessary to set up an Android development and testing environment. An overview of Android Studio is included covering areas such as tool windows, the code editor and the Layout Editor tool. An introduction to the architecture of Android is followed by an in-depth look at the design of Android applications and user interfaces using the Android Studio environment. More advanced topics such as database management, content providers and intents are also covered, as are touch screen handling, gesture recognition, camera access and the playback and recording of both video and audio. This edition of the book also covers printing, transitions and cloud-based file storage -- page 4 of cover']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningjava9fu0000shar,"Beginning Java 9 fundamentals : arrays, objects, modules, JShell, and regular expressions ",S,"['1 online resource (xxxvi, 1037 pages) :', ""Learn the basics of Java 9, including basic programming concepts and the object-oriented fundamentals necessary at all levels of Java development. Author Kishori Sharan walks you through writing your first Java program step-by-step. Armed with that practical experience, you'll be ready to learn the core of the Java language. Beginning Java 9 Fundamentals provides over 90 diagrams and 240 complete programs to help you learn the topics faster. The book continues with a series of foundation topics, including using data types, working with operators, and writing statements in Java. These basics lead onto the heart of the Java language: object-oriented programming. By learning topics such as classes, objects, interfaces, and inheritance you'll have a good understanding of Java's object-oriented model. The final collection of topics takes what you've learned and turns you into a real Java programmer. You'll see how to take the power of object-oriented programming and write programs that can handle errors and exceptions, process strings and dates, format data, and work with arrays to manipulate data. This book is a companion to two other books also by Sharan focusing on APIs and advanced Java topics. You will: Write your first Java programs with an emphasis on learning object-oriented programming in Java Work with data types, operators, statements, classes and objects Handle exceptions, assertions, strings and dates, and object formatting Use regular expressions Work with arrays, interfaces, enums, and inheritance Deploy Java applications on memory-constrained devices using compact profiles Take advantage of the new JShell REPL tool"", 'Online resource; title from PDF title page (EBSCO, viewed November 22, 2017)', 'P.p1 { margin: 0.0px 0.0px 0.0px 0.0px; line-height: 16.0px; font: 14.0px Helvetica; color: rgb(0,0,0); } span.s1 { } span.s2 { color: rgb(0,0,0); } 1. Programming Concepts -- 2. Setting Up the Environment -- 3. Writing Java Programs -- 4. Data Types -- 5. Operators -- 6. Statements -- 7. Classes and Objects -- 8. Methods -- 9. Constructors -- 10. Modules -- 11. Object and Objects Classes -- 12. Wrapper Classes -- 13. Execution Handling -- 14. Assertions -- 15. Strings -- 16. Dates and Times -- 17. Formatting Data -- 18. Regular Expressions -- 19. Arrays -- 20. Inheritance -- 21. Interfaces -- 22. Enum Types -- 23. Java Shell -- Appendix A: Character Encodings -- Appendix B: Documentation Comments']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningprogram0000burd_d3w7,Beginning programming with Java,B,"['xiv, 524 pages : 24 cm', 'Learn how to begin programming and creating applications with Java', 'Includes index']","['printdisabled', 'internetarchivebooks']"
cloudnativejavad0000long,"Cloud native Java : designing resilient systems with Spring Boot, Spring Cloud, and Cloud Foundry",L,"['1 online resource (xxiv, 614 pages) :', ""Learn the essentials of the Spring Boot microframework for developing modern, cloud-ready JVM applications and microservices across a variety of environments. With this practical book, you'll learn everything you need to know to get started working with Spring Boot"", 'Includes index', 'Online resource; title from PDF title page (EBSCO, viewed August 30, 2017)', ""Copyright; Table of Contents; Foreword (James Watters); Foreword (Rod Johnson); Preface; Who Should Read This Book; Why We Wrote This Book; Navigating This Book; Online Resources; Conventions Used in This Book; Using Code Examples; O'Reilly Safari; How to Contact Us; Acknowledgments; Josh Long; Kenny Bastani; Part I. Basics; Chapter 1. The Cloud Native Application; Amazon's Story; The Promise of a Platform; The Patterns; Scalability; Reliability; Agility; Netflix's Story; Microservices; Splitting the Monolith; Netflix OSS; Cloud Native Java; The Twelve Factors; Codebase; Dependencies; Config"", 'Backing ServicesBuild, Release, Run; Processes; Port Bindings; Concurrency; Disposability; Dev/Prod Parity; Logs; Admin Processes; Summary; Chapter 2. Bootcamp: Introducing Spring Boot and Cloud Foundry; What Is Spring Boot?; Getting Started with the Spring Initializr; Getting Started with the Spring Tool Suite; Installing Spring Tool Suite (STS); Creating a New Project with the Spring Initializr; The Spring Guides; Following the Guides in STS; Configuration; Cloud Foundry; Summary; Chapter 3. Twelve-Factor Application Style Configuration; The Confusing Conflation of ""Configuration.""', 'Support in Spring FrameworkThe PropertyPlaceholderConfigurer; The Environment Abstraction and @Value; Profiles; Bootiful Configuration; Centralized, Journaled Configuration with the Spring Cloud Configuration Server; The Spring Cloud Config Server; Spring Cloud Config Clients; Security; Refreshable Configuration; Summary; Chapter 4. Testing; The Makeup of a Test; Testing in Spring Boot; Integration Testing; Test Slices; Mocking in Tests; Working with the Servlet Container in @SpringBootTest; Slices; End-to-End Testing; Testing Distributed Systems; Consumer-Driven Contract Testing', ""Spring Cloud ContractSummary; Chapter 5. The Forklifted Application; The Contract; Migrating Application Environments; The Out-of-the-Box Buildpacks; Custom(ized) Buildpacks; Containerized Applications; Soft-Touch Refactoring to Get Your Application into the Cloud; Talking to Backing Services; Achieving Service Parity with Spring; Summary; Part II. Web Services; Chapter 6. REST APIs; Leonard Richardson's Maturity Model; Simple REST APIs with Spring MVC; Content Negotiation; Reading and Writing Binary Data; Google Protocol Buffers; Error Handling; Hypermedia; Media Type and Schema"", 'API VersioningDocumenting REST APIs; The Client Side; REST Clients for Ad Hoc Exploration and Interaction; The RestTemplate; Summary; Chapter 7. Routing; The DiscoveryClient Abstraction; Cloud Foundry Route Services; Summary; Chapter 8. Edge Services; The Greetings Service; A Simple Edge Service; Netflix Feign; Filtering and Proxying with Netflix Zuul; A Custom Zuul Filter; Security on the Edge; OAuth; Service-Side Applications; HTML5 and JavaScript Single-Page Applications; Applications Without Users; Trusted Clients; Spring Security; Spring Cloud Security']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
coding_202403,Coding (DK findout!),K,"<div>Coding (DK findout!) <br /></div><div>by : James Floyd  Kelly (Author) <br /></div><div>Publisher  :   New York : DK Publishing <br /></div><div>by D.K. Publishing (Author) <br /></div><div>Dorling Kindersley --- DK publishing --- DK pub.<br /></div><div>Publisher ‏ : ‎ DK (July 6, 2017) </div><div>Language ‏ : ‎ English </div><div>ISBN-10 ‏ : ‎ 0241285062 </div><div>ISBN-13 ‏ : ‎ 978-0241285060</div><div>by DK (Author) <br /></div><div><ul class=""a-unordered-list a-nostyle a-vertical a-spacing-none detail-bullet-list""><li><span class=""a-list-item""> <span class=""a-text-bold"">Publisher
                                    ‏
                                        :
                                    ‎
                                </span> <span>DK Children; Illustrated edition (July 4, 2017)</span> </span></li><li><span class=""a-list-item""> <span class=""a-text-bold"">Language
                                    ‏
                                        :
                                    ‎
                                </span> <span>English</span> </span></li><li><span class=""a-list-item""> <span class=""a-text-bold"">Paperback
                                    ‏
                                        :
                                    ‎
                                </span> <span>64 pages</span> </span></li><li><span class=""a-list-item""> <span class=""a-text-bold"">ISBN-10
                                    ‏
                                        :
                                    ‎
                                </span> <span>1465462333</span> </span></li><li><span class=""a-list-item""> <span class=""a-text-bold"">ISBN-13
                                    ‏
                                        :
                                    ‎
                                </span> <span>978-1465462336</span> </span></li><li><span class=""a-list-item""> <span class=""a-text-bold"">Reading age
                                    ‏
                                        :
                                    ‎
                                </span> <span>6 - 9 years</span> </span></li><li><span class=""a-list-item""> <span class=""a-text-bold"">Lexile measure
                                    ‏
                                        :
                                    ‎
                                </span> <span>IG920L</span> </span></li><li><span class=""a-list-item""> <span class=""a-text-bold"">Grade level
                                    ‏
                                        :
                                    ‎
                                </span> <span>1 - 4</span> </span></li><li><span class=""a-list-item"">Children's Programming Books ,Children's Inventors Books (Books) , Children's Science Biographies (Books)<br /></span></li></ul></div><div><span class=""a-text-bold"">Supporting STEM-based learning, this fun, 
fact-filled book for kids ages 6–9 explores the programming that makes 
our world work, in everyday objects from traffic lights to vending 
machines. Educating young readers through a combination of close-up 
images, quirky trivia facts, quiz questions, and fascinating tidbits, 
it’s the perfect book for any reader who can’t get enough of coding.</span><span><br />How
 much did the first laptop weigh? What exactly is a computer bug? How 
many calculations can the world’s fastest computer perform in a single 
second? Find out the answers to these questions and more in </span><span class=""a-text-italic"">DKfindout! Coding</span><span>,
 which features photographs and illustrations of gadgets, games, and 
coding geniuses like Ada Lovelace and Alan Turing. Beginning in the 
mid-1800s, readers can trace the path of coding pioneers from the birth 
of the first computer all the way to today’s tech boom. Along the way, 
they’ll learn about the fundamentals of coding languages like Java and 
Python—including their application in everything from cars to 
calculators—and how coding continues to revolutionize tech, gaming, 
medicine, space travel, and more.</span></div><div>""Discover the amazing power of computer programming and how it is 
all around us with this exciting book full of amazing images, fun 
quizzes, and incredible information""--Provided by publisher<br />Includes index<br />What
 is a coder? -- Codes around us -- Coding before computers -- Coding 
pioneer -- Top secret -- The Engima code -- Alan Turing -- The first 
computer -- Multitasking machines -- Think like a computer -- Early 
games -- Inside a computer -- Then and now -- Talk like a computer -- 
Computer languages -- Programs -- Worms and bugs -- The Internet -- What
 is an app? -- Everyday coding -- Scratch -- Raspberry Pi -- Key coders 
-- Meet the experts -- Gaming -- Teamwork -- Learning to code -- Coding 
facts and figures
</div><div><br /></div>",opensource
headfirstandroid0000grif,Head first Android development : a brain-friendly guide ,G,"['xl, 887 pages : 24 cm', 'Presents an introduction to Android development, with information on building interactive apps, creating the user interface, setting up databases, using action bars, and making apps fit in with Material Design', '""If you have an idea for a killer Android app, this fully revised and updated edition will help you build your first working application in a jiffy. You\'ll learn hands-on how to structure your app, design flexible and interactive interfaces, run services in the background, make your app work on various smartphones and tablets, and much more. It\'s like having an experienced Android developer sitting right next to you! All you need to get started is some Java know-how.""--Page 4 of cover', '""A brain friendly guide""--Cover', 'Includes index', 'First edition published in 2015']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
introductiontopr0000sedg_k4w5,Introduction to programming in Java : an interdisciplinary approach,S,"['xvii, 758 pages : 24 cm', ""Programming skills are indispensable in today's world, not just for computer science students, but also for anyone in any scientific or technical discipline. Introduction to Programming in Java, Second Edition, by Robert Sedgewick and Kevin Wayne is an accessible, interdisciplinary treatment that emphasizes important and engaging applications, not toy problems. The authors supply the tools needed for students and professionals to learn that programming is a natural, satisfying, and creative experience, and to become conversant with one of the world's most widely used languages. -- Provided by publisher"", 'Includes index', 'Elements of programming -- Functions and modules -- Object-oriented programming -- Algorithms and data structures']","['printdisabled', 'internetarchivebooks']"
java9datastructu0000chaw,Java 9 data structures and algorithms : a step-by-step guide to data structures and algorithms ,C,"['1 online resource (1 volume) :', ""Gain a deep understanding of the complexity of data structures and algorithms and discover the right way to write more efficient code About This Book This book provides complete coverage of reactive and functional data structures Based on the latest version of Java 9, this book illustrates the impact of new features on data structures Gain exposure to important concepts such as Big-O Notation and Dynamic Programming Who This Book Is For This book is for Java developers who want to learn about data structures and algorithms. Basic knowledge of Java is assumed. What You Will Learn Understand the fundamentals of algorithms, data structures, and measurement of complexity Find out what general purpose data structures are, including arrays, linked lists, double ended linked lists, and circular lists Get a grasp on the basics of abstract data types?stack, queue, and double ended queue See how to use recursive functions and immutability while understanding and in terms of recursion Handle reactive programming and its related data structures Use binary search, sorting, and efficient sorting?quicksort and merge sort Work with the important concept of trees and list all nodes of the tree, traversal of tree, search trees, and balanced search trees Apply advanced general purpose data structures, priority queue-based sorting, and random access immutable linked lists Gain a better understanding of the concept of graphs, directed and undirected graphs, undirected trees, and much more In Detail Java 9 Data Structures and Algorithms covers classical, functional, and reactive data structures, giving you the ability to understand computational complexity, solve problems, and write efficient code. This book is based on the Zero Bug Bounce milestone of Java 9. We start off with the basics of algorithms and data structures, helping you understand the fundamentals and measure complexity. From here, we introduce you to concepts such as arrays, linked lists, as well as abstract data types such as stacks and queues. Next, we'll take you through the basics of functional programming while making sure you get used to thinking recursively. We provide plenty of examples along the way to help you understand each concept. You will get the also get a clear picture of reactive programming, binary searches, sorting, search trees, undirected graphs, and a whole lot more! Style and approach This book will teach you about all the major algorithms in a step-by-step manner. Special notes on the Big-O Notation and its impact on algorithms will give you fresh insights"", 'Description based on online resource; title from cover (viewed May 16, 2017)', '""This book is based on the Zero Bug Bounce milestone.""', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
java9revealedfor0000shar,Java 9 revealed : for early adoption and migration ,S,"['1 online resource (xxvi, 520 pages) :', ""Preview the new Java 9 modules, SDK, JDK, JVM and more in this short early adopter book. This book covers what's new in Java 9 and how to use some of these new features. Java 9 Revealed is for experienced Java programmers looking to make the migration from Java 7 or Java 8 to Java 9. You will: Develop Java applications using new the module system introduced in Java 9 Use the JShell tool in Java 9 for quick prototyping Learn how to use the Reactive Streams API in Java 9 Discover what is new in the Process API Inspect a thread's stack with the Stack-Walking API Learn about the new layout of the modular JDK/JRE runtime image Use the jlink tool to create a custom runtime image Learn about the breaking changes in Java 9 Create collections with the new convenience factory methods Work with HTML5 Javadoc"", 'Online resource; title from PDF title page (SpringerLink, viewed April 27, 2017)', 'At a Glance; Contents; About the Author; About the Technical Reviewer; Acknowledgments; Introduction; Chapter 1: Introduction; Introduction to JDK 9; How to Read This Book; System Requirements; Installing the NetBeans IDE; Downloading the Source Code; Chapter 2: The Module System; Life Before Java 9; The New Module System; What Is a Module?; Module Dependencies; Module Graph; Aggregator Modules; Declaring Modules; Module Names; Controlling Access to Modules; Declaring Dependency; Configuring Services; Module Descriptors; Compiling Module Declarations; Module Version', 'Module Source Files StructurePackaging Modules; A Module in a Directory; A Module in a Modular JAR; A Module in a JMOD File; Module Path; Observable Modules; Summary; Chapter 3: Creating Your First Module; Using the Command Prompt; Setting Up the Directories; Writing the Source Code; Compiling the Source Code; Packaging the Module Code; Running the Program; Using the NetBeans IDE; Configuring the IDE; Creating the Java Project; Setting the Project Properties; Adding the Module Declaration; Viewing Module Graph; Writing the Source Code; Compiling the Source Code; Packaging the Module Code', 'Running the ProgramSummary; Chapter 4: Module Dependency; Declaring Module Dependency; Troubleshooting the Example; Empty Package Error; Module Not Found Error; Package Does Not Exist Error; Module Resolution Exception; Implicit Readability; Qualified Exports; Optional Dependency; Accessing Modules Using Reflection; Open Modules; Opening Packages; Using Deep Reflection; Type Accessibility; Splitting Packages Across Modules; Restrictions in Module Declarations; Types of Modules; Normal Modules; Open Modules; Automatic Modules; Unnamed Modules; Normal Modules to Unnamed Modules', 'Unnamed Modules to Normal ModulesMigration Path to JDK 9; Dissembling Module Definitions; Summary; Chapter 5: Implementing Services; What Is a Service?; Discovering Services; Providing Service Implementations; Defining the Service Interface; Defining Service Providers; Defining a Generic Prime Service Provider; Defining a Faster Prime Service Provider; Defining a Fastest Prime Service Provider; Testing the Prime Service; Selecting and Filtering Providers; Testing Prime Service in Legacy Mode; Summary; Chapter 6: Packaging Modules; The JAR Format; What Is a Multi-Release JAR?', 'Creating Multi-Release JARsRules for Multi-Release JARs; Modular Multi-Release JARs; Modular Multi-Release JARs and Encapsulation; Multi-Release JARs and Boot Loader; Same Versioned Files; Multi-Release JARs and JAR URL; Multi-Release Manifest Attribute; The JMOD Format; Using the jmod Tool; Creating JMOD Files; Extracting JMOD File Contents; Listing JMOD File Contents; Describing a JMOD File; Recording Modules Hashes; Summary; Chapter 7: Creating Custom Runtime Images; What Is a Custom Runtime Image?; Creating Custom Runtime Images; Binding Services; Using Plugins with the jlink Tool', 'Includes bibliographical references']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaallinone0000lowe,Java all-in-one,L,"['xx, 930 pages : 24 cm', 'Doug Lowe present all you need to know for getting started with Java. The text includes details on Web programming, creating GUI programs with JavaFX, file and database programming, working with arrays and collections and object oriented programming', 'Includes index', '""8 books in one!""--Cover', 'Java basics -- Programming basics -- Object-oriented programming -- Strings, arrays, and collections -- Programming techniques -- JavaFX -- Web programming -- Files and databases -- Index']","['printdisabled', 'internetarchivebooks']"
javadatasciencec0000sham,Java Data Science Cookbook,S,"['1 online resource ()', 'Cover; Credits; About the Author; About the Reviewer; www.PacktPub.com; Customer Feedback; Table of Contents; Preface; Chapter 1: Obtaining and Cleaning Data; Introduction; Retrieving all filenames from hierarchical directories using Java; Getting ready; How to do it…; Retrieving all filenames from hierarchical directories using Apache Commons IO; Getting ready; How to do it…; Reading contents from text files all at once using Java 8; How to do it…; Reading contents from text files all at once using Apache Commons IO; Getting ready; How to do it…; Extracting PDF text using Apache Tika', 'Getting readyHow to do it…; Cleaning ASCII text files using Regular Expressions; How to do it…; Parsing Comma Separated Value (CSV) Files using Univocity; Getting ready; How to do it…; Parsing Tab Separated Value (TSV) file using Univocity; Getting ready; How to do it…; Parsing XML files using JDOM; Getting ready; How to do it…; Writing JSON files using JSON.simple; Getting ready; How to do it…; Reading JSON files using JSON.simple; Getting ready; How to do it …; Extracting web data from a URL using JSoup; Getting ready; How to do it…', 'Extracting web data from a website using Selenium WebdriverGetting ready; How to do it…; Reading table data from a MySQL database; Getting ready; How to do it…; Chapter 2: Indexing and Searching Data; Introduction; Indexing data with Apache Lucene; Getting ready; How to do it…; How it works…; Searching indexed data with Apache Lucene; Getting ready; How to do it…; Chapter 3: Analyzing Data Statistically; Introduction; Generating descriptive statistics; How to do it…; Generating summary statistics; How to do it…; Generating summary statistics from multiple distributions; How to do it…', ""There's more…Computing frequency distribution; How to do it…; Counting word frequency in a string; How to do it…; How it works…; Counting word frequency in a string using Java 8; How to do it…; Computing simple regression; How to do it…; Computing ordinary least squares regression; How to do it…; Computing generalized least squares regression; How to do it…; Calculating covariance of two sets of data points; How to do it…; Calculating Pearson's correlation of two sets of data points; How to do it…; Conducting a paired t-test; How to do it…; Conducting a Chi-square test; How to do it…"", 'Conducting the one-way ANOVA testHow to do it…; Conducting a Kolmogorov-Smirnov test; How to do it…; Chapter 4: Learning from Data -- Part 1; Introduction; Creating and saving an Attribute-Relation File Format (ARFF) file; How to do it…; Cross-validating a machine learning model; How to do it…; Classifying unseen test data; Getting ready; How to do it…; Classifying unseen test data with a filtered classifier; How to do it…; Generating linear regression models; How to do it…; Generating logistic regression models; How to do it…; Clustering data points using the KMeans algorithm; How to do it…', 'Description based on print version record']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaprogrammingf0000lass,Java programming for beginners : learn the fundamentals of programming with Java ,L,"['1 online resource (1 volume) :', ""Java Programming for Beginners is an introduction to Java programming, taking you through the Java syntax and the fundamentals of object-oriented programming. About This Book Learn the basics of Java programming in a step-by-step manner Simple, yet thorough steps that beginners can follow Teaches you transferable skills, such as flow control and object-oriented programming Who This Book Is For This book is for anyone wanting to start learning the Java language, whether you're a student, casual learner, or existing programmer looking to add a new language to your skillset. No previous experience of Java or programming in general is required. What You Will Learn Learn the core Java language for both Java 8 and Java 9 Set up your Java programming environment in the most efficient way Get to know the basic syntax of Java Understand object-oriented programming and the benefits that it can bring Familiarize yourself with the workings of some of Java's core classes Design and develop a basic GUI Use industry-standard XML for passing data between applications In Detail Java is an object-oriented programming language, and is one of the most widely accepted languages because of its design and programming features, particularly in its promise that you can write a program once and run it anywhere. Java Programming for Beginners is an excellent introduction to the world of Java programming, taking you through the basics of Java syntax and the complexities of object-oriented programming. You'll gain a full understanding of Java SE programming and will be able to write Java programs with graphical user interfaces that run on PC, Mac, or Linux machines. This book is full of informative and entertaining content, challenging exercises, and dozens of code examples you can run and learn from. By reading this book, you'll move from understanding the data types in Java, through loops and conditionals, and on to functions, classes, and file handling. The book finishes with a look at GUI development and training on how to work with XML. The book takes an efficient route through the Java landscape, covering all of the core topics that a Java developer needs. Whether you're an absolute beginner to programming, or a seasoned programmer approaching an object-oriented language for the first time, Java Programming for Beginners delivers the focused training you need to become a Java developer. Style and approach This book takes a very hands-on approach, carefully building .."", 'Online resource; title from title page (Safari, viewed December 5, 2017)']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
murachsjavaprogr0000mura_r5e6,Murach's java programming ,M,"['xx, 777 pages : 26 cm', 'Includes index', 'An introduction to Java -- How to write your first Java applications -- How to work with the primitive data types -- How to code control statements -- How to code methods, handle exceptions, and validate data -- How to test, debug, and deploy an application -- How to define and use classes -- How to work with inheritance -- How to define and use interfaces -- More object-oriented programming skills -- How to work with arrays -- How to work with collections and generics -- How to work with strings -- How to work with dates and times -- How to work with file I/O -- How to work with exceptions -- How to get started with JavaFX -- How to get started with Swing -- More Swing controls -- An introduction to databases with SQLite -- How to use JDBC to work with a database -- How to work with lambda expressions and streams -- How to work with threads']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
programmingessen0000mcal,Programming Essentials Using Java : A Game Application Approach,M,"['1 online resource (565 pages) :', 'Using an objects-early approach to learning Java, this complete guide integrates game applications as a central pedagogical tool to improve student engagement, learning outcomes, and retention. --', 'Includes bibliographical references', 'Online resource; title from title screen (Books24x7.com)']","['printdisabled', 'internetarchivebooks']"
prohtml5withcssj0000coll,"Pro HTML5 with CSS, JavaScript, and multimedia : complete website development and best practices ",C,"['1 online resource (xxxii, 560 pages) :', ""Learn broad and thorough coverage of HTML5, including markup, styling, and scripting. Accessible for both the beginner and expert, with lots of practical examples and best practice insights. You'll quickly understand the new HTML markup elements and when to use them, and then apply the new and improved CSS features to create amazing web pages. Learn how to use JavaScript to create web applications that are dynamic and interactive. With Pro HTML5 with CSS, JavaScript, and Multimedia, you'll learn both the fundamentals of client-side scripting as well as explore the immense functionality available to you as browser vendors converge on the HTML5 standards. This book is full of practical examples and advanced content, including audio, video, SVG, and drag and drop capabilities. Using practical hands-on demonstrations you will learn all of the really cool features that you can start using now. HTML5 promises to revolutionize the way websites are developed with an impressive set of built-in client-side features. It as a preferred development language in Windows 10, and along with growing support from the major browser vendors, HTML5 is likely to become the de facto standard for all future web development. What You Will Learn: How, and when, to use all the HTML5 markup tags Use CSS3 features to create dramatic websites Master the JavaScript fundamentals and advanced features Use canvas and SVG to build some amazing web pages Leverage the native browser support for Geolocation, IndexedDB, and drag and drop capabilitiesvolutionize the way websites are developed with an impressive set of built-in client-side features. It as a preferred development language in Windows 10, and along with growing support from the major browser vendors, HTML5 is likely to become the de facto standard for all future web development. What You Will Learn: How, and when, to use all the HTML5 markup tags Use the new CSS3 features to create dramatic websites Master the JavaScript fundamentals and advanced features Use canvas and SVG to build some amazing web pages Leverage the native browser support for Geolocation, IndexedDB, and drag and drop capabilities"", 'Includes index', 'Online resource; title from PDF title page (SpringerLink, viewed March 29, 2017)', 'At a Glance; Contents; About the Author; About the Technical Reviewer; Acknowledgments; Introduction; Part I: HTML5 Technologies; Chapter 1: Hypertext Markup Language; HTML Document; Elements; DOCTYPE; Attributes; Miscellaneous Structure Rules; Html Element; Head Element; Title Element; Meta Element; Script Element; Link Element; Style Element; Base Element; Summary; Chapter 2: Cascading Style Sheets; Styling Guidelines; Organizing Content; Applying Styles; CSS3 Specifications; CSS Concepts; Selectors; Declarations; Units; Distance Units; Color Units; Keywords; Precedence', 'Style Sheet SourcesSpecificity Rule; Important Keyword; Box Model; Vendor Prefixes; Style Attribute; Summary; Chapter 3: JavaScript Essentials; Introducing JavaScript; Objects; Constructors; Prototypes; Inheritance; Using Prototypes; Using Create; Using the Class Keyword; Overriding Members; Properties; Arrays; Attributes; Special Types; Miscellaneous Topics; Comparison Operators; Variable Scope; Strict Mode; Functions; Context; Immediately-Invoked Functions; Namespaces; Exceptions; Promises; Array Methods; Accessing Elements; Outputting an Array; Manipulating Elements; Searching', 'Creating SubsetsProcessing; Summary; Part II: HTML; Chapter 4: Structural HTML Elements; Content Categories; Sectioning Content; Section; Article; Aside; Nav; Address; Outlines; Explicit Sections; Document Headings; Header and Footer; Planning the Page Layout; Sectioning Roots; Blockquote; Details; Figure; Grouping Elements; Paragraph; Horizontal Rule; Preformatted; Main; Division; Listing Elements; List; Description List; Inline Frames; Deprecated Elements; hgroup; dir; frame and frameset; Summary; Chapter 5: Phrasing HTML Elements; Highlighting Text; Importance (strong); Emphasis (em)', 'Relevance (mark)Alternative Voice (i); Small (small); Strikethrough (s); Stylistically Offset (b); Unarticulated (u); Element Review; Other Semantic Phrasing; Code, Sample, Keyboard, and Variable; Abbreviations and Definitions; Subscripts and Superscripts; Time; Edits; Quoting; Span; Adding Carriage Returns; Line Break; Word Break Opportunity; Hyphens; Bidirectional Text; Text Direction; Flow Direction; Tightly Wrapping; Using Isolation; Overriding the Direction; Ruby; Summary; Chapter 6: Table HTML Elements; Simple Table; Column and Row Headings; Column Groups; Table Heading and Footer', 'Spanning CellsSummary; Chapter 7: Embedded HTML Elements; Anchor; Images; Multiple Sources; Pixel Ratio Selection; Viewport Selection; Image Map; Audio; Using the Native Controls; File Formats; Video; Tracks; HTML5 Plug-Ins; Summary; Chapter 8: HTML Form Elements; Overview; Form Element; Form Action; Form Method; Additional Attributes; Input Elements; Textual Form Data; Text Values; Textarea; Autofill; Attributes; Review; Selection Elements; Checkbox; Radio; Drop-Down Lists; Multi-Select Lists; Miscellaneous Types; Number; Color; File; Range; Hidden Input; Date and Time Data']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
arxiv-1612.06668,"Stream Fusion, to Completeness",Oleg Kiselyov,"Stream processing is mainstream (again): Widely-used stream libraries are now available for virtually all modern OO and functional languages, from Java to C# to Scala to OCaml to Haskell. Yet expressivity and performance are still lacking. For instance, the popular, well-optimized Java 8 streams do not support the zip operator and are still an order of magnitude slower than hand-written loops. We present the first approach that represents the full generality of stream processing and eliminates overheads, via the use of staging. It is based on an unusually rich semantic model of stream interaction. We support any combination of zipping, nesting (or flat-mapping), sub-ranging, filtering, mapping-of finite or infinite streams. Our model captures idiosyncrasies that a programmer uses in optimizing stream pipelines, such as rate differences and the choice of a ""for"" vs. ""while"" loops. Our approach delivers hand-written-like code, but automatically. It explicitly avoids the reliance on black-box optimizers and sufficiently-smart compilers, offering highest, guaranteed and portable performance. Our approach relies on high-level concepts that are then readily mapped into an implementation. Accordingly, we have two distinct implementations: an OCaml stream library, staged via MetaOCaml, and a Scala library for the JVM, staged via LMS. In both cases, we derive libraries richer and simultaneously many tens of times faster than past work. We greatly exceed in performance the standard stream libraries available in Java, Scala and OCaml, including the well-optimized Java 8 streams.","['arxiv', 'journals']"
arxiv-1612.03772,SimTensor: A synthetic tensor data generator,Hadi Fanaee-T,"SimTensor is a multi-platform, open-source software for generating artificial tensor data (either with CP/PARAFAC or Tucker structure) for reproducible research on tensor factorization algorithms. SimTensor is a stand-alone application based on MATALB. It provides a wide range of facilities for generating tensor data with various configurations. It comes with a user-friendly graphical user interface, which enables the user to generate tensors with complicated settings in an easy way. It also has this facility to export generated data to universal formats such as CSV and HDF5, which can be imported via a wide range of programming languages (C, C++, Java, R, Fortran, MATLAB, Perl, Python, and many more). The most innovative part of SimTensor is this that can generate temporal tensors with periodic waves, seasonal effects and streaming structure. it can apply constraints such as non-negativity and different kinds of sparsity to the data. SimTensor also provides this facility to simulate different kinds of change-points and inject various types of anomalies. The source code and binary versions of SimTensor is available for download in http://www.simtensor.org.","['arxiv', 'journals']"
DTIC_AD1030666,DTIC AD1030666: Evaluation of Marine Corps Manpower Computer Simulation Model,D,"Marine Corps Manpower Plans and Policy Division, Manpower  and  Reserve Affairs, is responsible for formulating Marine Corps force manpower plans. Accomplishing this mission requires extensive knowledge of the Human Resource Development Process (HRDP) for controlling future personnel attrition, retention, and accession quantities to ensure appropriate quantities of its various Military Occupational Specialties (MOS) and overall end strength are maintained. To assist their mission, an agent-based computer simulation model was developed in the Java computer language. This thesis investigates that simulation model, titled Manpower Simulation Model (MSM). This thesis provides documentation of MSMs architecture and processes, tests the sensitivity of its inputs through the use of an experimental design, and validates MSMs output measures by calculating the relative error for five successive forecast years for various HRDP categories. This thesis found that MSMs structure and output measurement responses aligned with HRDP practices. With respect to validation, on average the HRDP categories losses and accessions underestimated by 17 and 18 percent, respectively, while gains overestimated by 36 percent. The category promotions generally underestimated, but lessened in magnitude as grade increased. The category retention consistently overestimated for all grades. Lastly, the MSM showed biasness toward retaining Marines over backfilling vacancies through accessions.","['dticarchive', 'additional_collections']"
arxiv-1611.08908,"""Model and Run"" Constraint Networks with a MILP Engine",T,"Constraint Programming (CP) users need significant expertise in order to model their problems appropriately, notably to select propagators and search strategies. This puts the brakes on a broader uptake of CP. In this paper, we introduce MICE, a complete Java CP modeler that can use any Mixed Integer Linear Programming (MILP) solver as a solution technique. Our aim is to provide an alternative tool for democratizing the ""CP-style"" modeling thanks to its simplicity of use, with reasonable solving capabilities. Our contributions include new decompositions of (reified) constraints and constraints on numerical variables.","['arxiv', 'journals']"
arxiv-1611.08004,At Ease with Your Warnings: The Principles of the Salutogenesis Model Applied to Automatic Static Analysis,Jan-Peter Ostberg,"The results of an automatic static analysis run can be overwhelming, especially for beginners. The overflow of information and the resulting need for many decisions is mentally tiring and can cause stress symptoms. There are several models in health care which are designed to fight stress. One of these is the salutogenesis model created by Aaron Antonovsky. In this paper, we will present an idea on how to transfer this model into a triage and recommendation model for static analysis tools and give an example of how this can be implemented in FindBugs, a static analysis tool for Java.","['arxiv', 'journals']"
arxiv-1611.08005,On the Relationship of Inconsistent Software Clones and Faults: An Empirical Study,Stefan Wagner,"Background: Code cloning - copying and reusing pieces of source code - is a common phenomenon in software development in practice. There have been several empirical studies on the effects of cloning, but there are contradictory results regarding the connection of cloning and faults. Objective: Our aim is to clarify the relationship between code clones and faults. In particular, we focus on inconsistent (or type-3) clones in this work. Method: We conducted a case study with TWT GmbH where we detected the code clones in three Java systems, set them into relation to information from issue tracking and version control and interviewed three key developers. Results: Of the type-3 clones, 17 % contain faults. Developers modified most of the type-3 clones simultaneously and thereby fixed half of the faults in type-3 clones consistently. Type-2 clones with faults all evolved to fixed type-3 clones. Clone length is only weakly correlated with faultiness. Conclusion: There are indications that the developers in two cases have been aware of clones. It might be a reason for the weak relationship between type-3 clones and faults. Hence, it seems important to keep developers aware of clones, potentially with new tool support. Future studies need to investigate if the rate of faults in type-3 clones justifies using them as cues in defect detection.","['arxiv', 'journals']"
arxiv-1611.07623,Leveraging Parallel Data Processing Frameworks with Verified Lifting,Maaz Bin Safeer Ahmad,"Many parallel data frameworks have been proposed in recent years that let sequential programs access parallel processing. To capitalize on the benefits of such frameworks, existing code must often be rewritten to the domain-specific languages that each framework supports. This rewriting-tedious and error-prone-also requires developers to choose the framework that best optimizes performance given a specific workload. This paper describes Casper, a novel compiler that automatically retargets sequential Java code for execution on Hadoop, a parallel data processing framework that implements the MapReduce paradigm. Given a sequential code fragment, Casper uses verified lifting to infer a high-level summary expressed in our program specification language that is then compiled for execution on Hadoop. We demonstrate that Casper automatically translates Java benchmarks into Hadoop. The translated results execute on average 3.3x faster than the sequential implementations and scale better, as well, to larger datasets.","['arxiv', 'journals']"
arxiv-1610.04790,Prioritized Garbage Collection: Explicit GC Support for Software Caches,Diogenes Nunez,"Programmers routinely trade space for time to increase performance, often in the form of caching or memoization. In managed languages like Java or JavaScript, however, this space-time tradeoff is complex. Using more space translates into higher garbage collection costs, especially at the limit of available memory. Existing runtime systems provide limited support for space-sensitive algorithms, forcing programmers into difficult and often brittle choices about provisioning. This paper presents prioritized garbage collection, a cooperative programming language and runtime solution to this problem. Prioritized GC provides an interface similar to soft references, called priority references, which identify objects that the collector can reclaim eagerly if necessary. The key difference is an API for defining the policy that governs when priority references are cleared and in what order. Application code specifies a priority value for each reference and a target memory bound. The collector reclaims references, lowest priority first, until the total memory footprint of the cache fits within the bound. We use this API to implement a space-aware least-recently-used (LRU) cache, called a Sache, that is a drop-in replacement for existing caches, such as Google's Guava library. The garbage collector automatically grows and shrinks the Sache in response to available memory and workload with minimal provisioning information from the programmer. Using a Sache, it is almost impossible for an application to experience a memory leak, memory pressure, or an out-of-memory crash caused by software caching.","['arxiv', 'journals']"
arxiv-1610.04461,Persistent Contextual Values as Inter-Process Layers,M,"Mobile applications today often fail to be context aware when they also need to be customizable and efficient at run-time. Context-oriented programming allows programmers to develop applications that are more context aware. Its central construct, the so-called layer, however, is not customizable. We propose to use novel persistent contextual values for mobile development. Persistent contextual values automatically adapt their value to the context. Furthermore they provide access without overhead. Key-value configuration files contain the specification of contextual values and the persisted contextual values themselves. By modifying the configuration files, the contextual values can easily be customized for every context. From the specification, we generate code to simplify development. Our implementation, called Elektra, permits development in several languages including C++ and Java. In a benchmark we compare layer activations between threads and between applications. In a case study involving a web-server on a mobile embedded device the performance overhead is minimal, even with many context switches.","['arxiv', 'journals']"
arxiv-1610.05114,Towards an Accurate Mathematical Model of Generic Nominally-Typed OOP,M,"The construction of GNOOP as a domain-theoretic model of generic nominally-typed OOP is currently underway. This extended abstract presents the concepts of `nominal intervals' and `full generication' that are likely to help in building GNOOP as an accurate mathematical model of generic nominally-typed OOP. The abstract also presents few related category-theoretic suggestions. The presented concepts and suggestions are particularly geared towards enabling GNOOP to offer a precise and simple view of so-far-hard-to-analyze features of generic OOP such as variance annotations (e.g., Java wildcard types) and erased generics (e.g., Java type erasure).","['arxiv', 'journals']"
arxiv-1610.01133,Mathematical Execution: A Unified Approach for Testing Numerical Code,Zhoulai Fu,"This paper presents Mathematical Execution (ME), a new, unified approach for testing numerical code. The key idea is to (1) capture the desired testing objective via a representing function and (2) transform the automated testing problem to the minimization problem of the representing function. The minimization problem is to be solved via mathematical optimization. The main feature of ME is that it directs input space exploration by only executing the representing function, thus avoiding static or symbolic reasoning about the program semantics, which is particularly challenging for numerical code. To illustrate this feature, we develop an ME-based algorithm for coverage-based testing of numerical code. We also show the potential of applying and adapting ME to other related problems, including path reachability testing, boundary value analysis, and satisfiability checking. To demonstrate ME's practical benefits, we have implemented CoverMe, a proof-of-concept realization for branch coverage based testing, and evaluated it on Sun's C math library (used in, for example, Android, Matlab, Java and JavaScript). We have compared CoverMe with random testing and Austin, a publicly available branch coverage based testing tool that supports numerical code (Austin combines symbolic execution and search-based heuristics). Our experimental results show that CoverMe achieves near-optimal and substantially higher coverage ratios than random testing on all tested programs, across all evaluated coverage metrics. Compared with Austin, CoverMe improves branch coverage from 43% to 91%, with significantly less time (6.9 vs. 6058.4 seconds on average).","['arxiv', 'journals']"
arxiv-1610.00735,MatLM: a Matrix Formulation for Probabilistic Language Models,Yanshan Wang,"Probabilistic language models are widely used in Information Retrieval (IR) to rank documents by the probability that they generate the query. However, the implementation of the probabilistic representations with programming languages that favor matrix calculations is challenging. In this paper, we utilize matrix representations to reformulate the probabilistic language models. The matrix representation is a superstructure for the probabilistic language models to organize the calculated probabilities and a potential formalism for standardization of language models and for further mathematical analysis. It facilitates implementations by matrix friendly programming languages. In this paper, we consider the matrix formulation of conventional language model with Dirichlet smoothing, and two language models based on Latent Dirichlet Allocation (LDA), i.e., LBDM and LDI. We release a Java software package--MatLM--implementing the proposed models. Code is available at: https://github.com/yanshanwang/JGibbLDA-v.1.0-MatLM.","['arxiv', 'journals']"
DTIC_AD1029913,DTIC AD1029913: Transitioning Client Based NALCOMIS to a  Multi Function Web Based Application,D,"Navy and Marine Corps aviation utilizes a software suite to manage logistics known as NTCSS, and one of its primary applications is NALCOMIS. NALCOMIS has two configurations that are used by organizational and intermediate level maintenance activities, Optimized Organizational Maintenance Activity (OOMA) and Optimized Intermediate Maintenance Activity (OIMA). These configurations communicate with each other when co-located with a local client server. If a squadron departs its home station for a deployment or exercise, the OOMA server is disconnected from OIMA and lines of communication are lost. All data that needs to be shared between systems must be manually entered and updated. Manual data entry can lead to errors, resulting in inventory discrepancies that can amount to millions of dollars. This research examines technologies that lead to the design of a system that seamlessly integrates the two configurations of NALCOMIS and moves from a local client server model to a web server accessed through a secure web application. A proof of concept was developed to demonstrate the viability and utility of the proposed web-based application. Our analysis of the system load on the existing NALCOMIS servers shows that, with a minimum investment in hardware, a Marine Corps wide NALCOMIS-WEB could be implemented to create a fully interconnected Marine Aviation Logistics Squadron (MALS)network.","['dticarchive', 'additional_collections']"
arxiv-1609.06622,An Analysis of Introductory Programming Courses at UK Universities,Ellen Murphy,"Context: In the context of exploring the art, science and engineering of programming, the question of which programming languages should be taught first has been fiercely debated since computer science teaching started in universities. Failure to grasp programming readily almost certainly implies failure to progress in computer science. Inquiry: What first programming languages are being taught? There have been regular national-scale surveys in Australia and New Zealand, with the only US survey reporting on a small subset of universities. This the first such national survey of universities in the UK. Approach: We report the results of the first survey of introductory programming courses (N=80) taught at UK universities as part of their first year computer science (or related) degree programmes, conducted in the first half of 2016. We report on student numbers, programming paradigm, programming languages and environment/tools used, as well as the underpinning rationale for these choices. Knowledge: The results in this first UK survey indicate a dominance of Java at a time when universities are still generally teaching students who are new to programming (and computer science), despite the fact that Python is perceived, by the same respondents, to be both easier to teach as well as to learn. Grounding: We compare the results of this survey with a related survey conducted since 2010 (as well as earlier surveys from 2001 and 2003) in Australia and New Zealand. Importance: This survey provides a starting point for valuable pedagogic baseline data for the analysis of the art, science and engineering of programming, in the context of substantial computer science curriculum reform in UK schools, as well as increasing scrutiny of teaching excellence and graduate employability for UK universities.","['arxiv', 'journals']"
DTIC_AD1017372,DTIC AD1017372: Android: Call C Functions with the Native Development Kit (NDK),D,"The Android Native Development Kit (NDK) provides a Java Android application a simplified mechanism to call embedded C native codes, which are used to increase the performance of a computationally intensive application. This step-by-step guide is intended to assist programmers with how to attach an NDK plugin to an Android Integrated Development Environment and how to call C functions from a Java application.","['dticarchive', 'additional_collections']"
DTIC_AD1023361,DTIC AD1023361: Review of Knowledge Enhanced Electronic Logic (KEEL) Technology,D,"This report contains a review of the Knowledge Enhanced Electronic Logic (KEEL) technology, which provides a method of encoding expert knowledge for system control. KEEL allows a user to use drag-and-drop features of a Graphical User Interface (GUI) to reflect complex interrelationships between variables of a system. This allows the user to simulate the operation of the system in real time and fine-tune the relationships between inputs and expected system behavior. Once complete, KEEL can auto-generate code that can be inserted into applications to replicate the decision-making process of the expert. This review of KEEL consisted of analyzing the features of KEEL software and conducting testing to verify that the software accurately generated Java conventional code based on the design developed on the GUI.","['dticarchive', 'additional_collections']"
ERIC_EJ1135362,"ERIC EJ1135362: Full Flip, Half Flip and No Flip: Evaluation of Flipping an Introductory Programming Course",E,"While some research has suggested that video lectures are just as effective as in-person lectures to convey basic information to students, not everyone agrees that the flipped classroom model is an effective way of educating students. This research explores traditional, semi-flipped and fully-flipped classroom models by comparing three sections of an Introduction to Programming (Java) course that were taught at the same institution in Spring 2015 by three different instructors using three different paradigms. The data and observations collected suggests that incorporating in-class activities improves student satisfaction but a semi-flipped classroom, including in-class activities, some outside-class lecture videos, and some in-class lectures, may generally provide the best overall experience for the students. However, while students may be more satisfied and get more programming practice in a flipped paradigm, overall student performance did not appear to be greatly impacted.","['ericarchive', 'additional_collections']"
arxiv-1608.08736,Collective Intelligence for Smarter API Recommendations in Python,Andrea Renika D'Souza,"Software developers use Application Programming Interfaces (APIs) of libraries and frameworks extensively while writing programs. In this context, the recommendations provided in code completion pop-ups help developers choose the desired methods. The candidate lists recommended by these tools, however, tend to be large, ordered alphabetically and sometimes even incomplete. A fair amount of work has been done recently to improve the relevance of these code completion results, especially for statically typed languages like Java. However, these proposed techniques rely on the static type of the object and are therefore inapplicable for a dynamically typed language like Python. In this paper, we present PyReco, an intelligent code completion system for Python which uses the mined API usages from open source repositories to order the results based on relevance rather than the conventional alphabetic order. To recommend suggestions that are relevant for a working context, a nearest neighbor classifier is used to identify the best matching usage among all the extracted usage patterns. To evaluate the effectiveness of our system, the code completion queries are automatically extracted from projects and tested quantitatively using a ten-fold cross validation technique. The evaluation shows that our approach outperforms the alphabetically ordered API recommendation systems in recommending APIs for standard, as well as, third-party libraries.","['arxiv', 'journals']"
arxiv-1608.03322,Multi-Threaded Actors,Keyvan Azadbakht,"In this paper we introduce a new programming model of multi-threaded actors which feature the parallel processing of their messages. In this model an actor consists of a group of active objects which share a message queue. We provide a formal operational semantics, and a description of a Java-based implementation for the basic programming abstractions describing multi-threaded actors. Finally, we evaluate our proposal by means of an example application.","['arxiv', 'journals']"
arxiv-1608.01036,Fast and Lean Immutable Multi-Maps on the JVM based on Heterogeneous Hash-Array Mapped Tries,Michael J. Steindorfer,"An immutable multi-map is a many-to-many thread-friendly map data structure with expected fast insert and lookup operations. This data structure is used for applications processing graphs or many-to-many relations as applied in static analysis of object-oriented systems. When processing such big data sets the memory overhead of the data structure encoding itself is a memory usage bottleneck. Motivated by reuse and type-safety, libraries for Java, Scala and Clojure typically implement immutable multi-maps by nesting sets as the values with the keys of a trie map. Like this, based on our measurements the expected byte overhead for a sparse multi-map per stored entry adds up to around 65B, which renders it unfeasible to compute with effectively on the JVM. In this paper we propose a general framework for Hash-Array Mapped Tries on the JVM which can store type-heterogeneous keys and values: a Heterogeneous Hash-Array Mapped Trie (HHAMT). Among other applications, this allows for a highly efficient multi-map encoding by (a) not reserving space for empty value sets and (b) inlining the values of singleton sets while maintaining a (c) type-safe API. We detail the necessary encoding and optimizations to mitigate the overhead of storing and retrieving heterogeneous data in a hash-trie. Furthermore, we evaluate HHAMT specifically for the application to multi-maps, comparing them to state-of-the-art encodings of multi-maps in Java, Scala and Clojure. We isolate key differences using microbenchmarks and validate the resulting conclusions on a real world case in static analysis. The new encoding brings the per key-value storage overhead down to 30B: a 2x improvement. With additional inlining of primitive values it reaches a 4x improvement.","['arxiv', 'journals']"
arxiv-1607.04197,Design of an intermediate representation for query languages,R,"Data oriented applications, usually written in a high-level, general-purpose programming language (such as Java) interact with database through a coarse interface. Informally, the text of a query is built on the application side (either via plain string concatenation or through an abstract notion of statement) and shipped to the database over the wire where it is executed. The results are then serialized and sent back to the ""client-code"" where they are translated in the language's native datatypes. This round trip is detrimental to performances but, worse, such a programming model prevents one from having richer queries, namely queries containing user-defined functions (that is functions defined by the programmer and used e.g. in the filter condition of a SQL query). While some databases also possess a ""server-side"" language (e.g. PL/SQL in Oracle database), its integration with the very-optimized query execution engine is still minimal and queries containing (PL/SQL) user-defined functions remain notoriously inefficient. In this setting, we reviewed existing language-integrated query frameworks, highlighting that existing database query languages (including SQL) share high-level querying primitives (e.g., filtering, joins, aggregation) that can be represented by operators, but differ widely regarding the semantics of their expression language. In order to represent queries in an application language- and database-agnostic manner, we designed a small calculus, dubbed ""QIR"" for Query Intermediate Representation. QIR contains expressions, corresponding to a small extension of the pure lambda-calculus, and operators to represent usual querying primitives. In the effort to send efficient queries to the database, we abstracted the idea of ""good"" query representations in a measure on QIR terms. Then, we designed an evaluation strategy rewriting QIR query representations into ""better"" ones.","['arxiv', 'journals']"
an-introduction-to-java-programming,an-introduction-to-java-programming-2,B,LEARN JAVA PROGRAMMING FROM BEGINNING. IT IS VERY USEFUL e-BOOK. EXPLORE MORE on bookboon.com<br />,"['opensource', 'community']"
arxiv-1607.00825,Garbage Collection in JyNI - How to bridge Mark/Sweep and Reference Counting GC,S,"Jython is a Java-based Python implementation and the most seamless way to integrate Python and Java. It achieves high efficiency by compiling Python code to Java bytecode and thus letting Java's JIT optimize it - an approach that enables Python code to call Java functions or to subclass Java classes. It enables Python code to leverage Java's multithreading features and utilizes Java's built-in garbage collection (GC). However, it currently does not support CPython's C-API and thus does not support native extensions like NumPy and SciPy. Since most scientific code depends on such extensions, it is not runnable with Jython. Jython Native Interface (JyNI) is a compatibility layer that aims to provide CPython's native C extension API on top of Jython. JyNI is implemented using the Java Native Interface (JNI) and its native part is designed to be binary compatible with existing extension builds [...].","['arxiv', 'journals']"
arxiv-1606.08866,Technical Report: Towards a Universal Code Formatter through Machine Learning,Terence Parr,"There are many declarative frameworks that allow us to implement code formatters relatively easily for any specific language, but constructing them is cumbersome. The first problem is that ""everybody"" wants to format their code differently, leading to either many formatter variants or a ridiculous number of configuration options. Second, the size of each implementation scales with a language's grammar size, leading to hundreds of rules. In this paper, we solve the formatter construction problem using a novel approach, one that automatically derives formatters for any given language without intervention from a language expert. We introduce a code formatter called CodeBuff that uses machine learning to abstract formatting rules from a representative corpus, using a carefully designed feature set. Our experiments on Java, SQL, and ANTLR grammars show that CodeBuff is efficient, has excellent accuracy, and is grammar invariant for a given language. It also generalizes to a 4th language tested during manuscript preparation.","['arxiv', 'journals']"
arxiv-1606.07233,Adaptive Task Assignment in Online Learning Environments,Per-Arne Andersen,"With the increasing popularity of online learning, intelligent tutoring systems are regaining increased attention. In this paper, we introduce adaptive algorithms for personalized assignment of learning tasks to student so that to improve his performance in online learning environments. As main contribution of this paper, we propose a a novel Skill-Based Task Selector (SBTS) algorithm which is able to approximate a student's skill level based on his performance and consequently suggest adequate assignments. The SBTS is inspired by the class of multi-armed bandit algorithms. However, in contrast to standard multi-armed bandit approaches, the SBTS aims at acquiring two criteria related to student learning, namely: which topics should the student work on, and what level of difficulty should the task be. The SBTS centers on innovative reward and punishment schemes in a task and skill matrix based on the student behaviour. To verify the algorithm, the complex student behaviour is modelled using a neighbour node selection approach based on empirical estimations of a students learning curve. The algorithm is evaluated with a practical scenario from a basic java programming course. The SBTS is able to quickly and accurately adapt to the composite student competency --- even with a multitude of student models.","['arxiv', 'journals']"
arxiv-1606.05942,Future-based Static Analysis of Message Passing Programs,Wytse Oortwijn,"Message passing is widely used in industry to develop programs consisting of several distributed communicating components. Developing functionally correct message passing software is very challenging due to the concurrent nature of message exchanges. Nonetheless, many safety-critical applications rely on the message passing paradigm, including air traffic control systems and emergency services, which makes proving their correctness crucial. We focus on the modular verification of MPI programs by statically verifying concrete Java code. We use separation logic to reason about local correctness and define abstractions of the communication protocol in the process algebra used by mCRL2. We call these abstractions futures as they predict how components will interact during program execution. We establish a provable link between futures and program code and analyse the abstract futures via model checking to prove global correctness. Finally, we verify a leader election protocol to demonstrate our approach.","['arxiv', 'journals']"
arxiv-1606.04296,"DiSquawk: 512 cores, 512 memories, 1 JVM",Foivos S. Zakkak,"Trying to cope with the constantly growing number of cores per processor, hardware architects are experimenting with modular non-cache-coherent architectures. Such architectures delegate the memory coherency to the software. On the contrary, high productivity languages, like Java, are designed to abstract away the hardware details and allow developers to focus on the implementation of their algorithm. Such programming languages rely on a process virtual machine to perform the necessary operations to implement the corresponding memory model. Arguing about the correctness of such implementations is not trivial though. In this work we present our implementation of the Java Memory Model in a Java Virtual Machine targeting a 512-core non-cache-coherent memory architecture. We shortly discuss design decisions and present early evaluation results, which demonstrate that our implementation scales with the number of cores. We model our implementation as the operational semantics of a Java Core Calculus that we extend with synchronization actions, and prove its adherence to the Java Memory Model.","['arxiv', 'journals']"
arxiv-1606.02021,SCJ-Circus: a refinement-oriented formal notation for Safety-Critical Java,Alvaro Miyazawa,"Safety-Critical Java (SCJ) is a version of Java whose goal is to support the development of real-time, embedded, safety-critical software. In particular, SCJ supports certification of such software by introducing abstractions that enforce a simpler architecture, and simpler concurrency and memory models. In this paper, we present SCJ-Circus, a refinement-oriented formal notation that supports the specification and verification of low-level programming models that include the new abstractions introduced by SCJ. SCJ-Circus is part of the family of state-rich process algebra Circus, as such, SCJ-Circus includes the Circus constructs for modelling sequential and concurrent behaviour, real-time and object orientation. We present here the syntax and semantics of SCJ-Circus, which is defined by mapping SCJ-Circus constructs to those of standard Circus. This is based on an existing approach for modelling SCJ programs. We also extend an existing Circus-based refinement strategy that targets SCJ programs to account for the generation of SCJ-Circus models close to implementations in SCJ.","['arxiv', 'journals']"
DTIC_AD1026303,DTIC AD1026303: Data Mining of Extremely Large Ad Hoc Data Sets to Produce Inverted Indices,D,"The purpose of this study is to leverage existing Internet-sized ad hoc data sets by creating an inverted index that will enable a robust search capability. In particular, this study is focused on the Common Crawl web corpus. This involves exploring the tools and techniques necessary to effectively traverse this data set, as well as producing the tools to create an inverted index relationship between the terms and websites found within web archive files. The primary tools utilized in this process are Apache Hadoop, Apache MapReduce, Amazon Web Services, and Java. Additionally, methods to enhance this relationship with other information of interest are investigated in this thesis. Specifically, an index was developed that contains the added component of term relative location. This inverted index relationship is an essential component ofand the first step increating a robust search capability for a very large ad hoc data set.","['dticarchive', 'additional_collections']"
arxiv-1605.07171,The bitwise operations in relation to obtaining Latin squares,K,"The main thrust of the article is to provide interesting example, useful for students of using bitwise operations in the programming languages C ++ and Java. As an example, we describe an algorithm for obtaining a Latin square of arbitrary order. We will outline some techniques for the use of bitwise operations.","['arxiv', 'journals']"
arxiv-1605.05274,Java Generics are Turing Complete,R,"This paper describes a reduction from the halting problem of Turing machines to subtype checking in Java. It follows that subtype checking in Java is undecidable, which answers a question posed by Kennedy and Pierce in 2007. It also follows that Java's type checker can recognize any recursive language, which improves a result of Gil and Levy from 2016. The latter point is illustrated by a parser generator for fluent interfaces.","['arxiv', 'journals']"
P1151614488,HYBRID FRACTAL IMAGE COMPRESSION BASED ON RANGE BLOCK SIZE,I,"<span class=""fleft"" style=""padding:3px;text-align:justify;"">The
 present paper proposes Hybrid Fractal image compressions (HFIC) for 
grey and  Color images. The HFIC method is carried out for the variable 
size range blocks. The sample images here are divided into blocks by 
considering minimum and max size ranges. This  method transforms the RGB
 color image into three planes and then divide them into variable 
ranges. To achieve fractal compression, Relative transformation and 
entropy coding is applied. The image is reconstructed by applying the 
inverse transforms and iterative <span class=""details"">functions.
 The results of the present analysis demonstrate that, for the hybrid 
fractal compression scheme with variable range method applied to color 
and gray scale images like  Lena, medical MRI etc, show higher CR and 
PSNR values compared to fixed range block size  and other existing 
methods. The results indicate that both color and gray level images with
 Rmax = 16 and Rmin = 8 shows higher Compression ratio(CR) and good Peak
 Signal to Noise Ratios (PSNR).<br /><br /><a href=""http://www.icgst.com/paper.aspx?pid=P1151614488"" rel=""nofollow"">http://www.icgst.com/paper.aspx?pid=P1151614488</a><br /><br /></span></span><table class=""style1"" align=""left""><tbody><tr class=""alt-color""><td class=""page_head"" colspan=""2""><span style=""font-weight:bold;"">Academic Community Member:</span>
                                </td>
                                <td rowspan=""6"" style=""text-align:right;background-color:#FFFFFF;"" align=""right"" valign=""top"">
                                    <img src=""//web.archive.org/web/2im_/http://www.icgst-amc.com/institute/Handler1.ashx?url=%7E//InstituteFiles/3/Members/3517/Photo/1283517.JPG"" style=""border-color:#C0C0C0;border-width:5px;border-style:double;"" align=""top"" alt=""1283517.JPG"" /></td>
                            </tr><tr class=""alt-color""><td class=""page_head"" colspan=""2""><span style=""font-weight:bold;"">Page Visitors:</span>
                                     <span>641</span>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Full Name:</span>
                                </td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span>Prof. Dr.</span>
                                    <a href=""http://www.jntuacea.ac.in"" rel=""nofollow"">B Eswara  Reddy</a>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Affiliation:</span>
                                </td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span class=""align"">, JNTUA College of Engineering </span>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Biography:</span>
                                    <br /><img src=""//web.archive.org/web/2im_/http://www.icgst-amc.com/Images/gm.jpg"" style=""height:50px;width:50px;border-width:0px;"" alt=""gm.jpg"" /></td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span class=""align""></span><div class=""expandable""><p>Dr.
 B. Eswara Reddy graduated in B.Tech (Computer Science and Engineering) 
from Sri Krishna Devaraya University in 1995. He received Masters Degree
 in M.Tech. (Software Engineering) from JNT University, Hyderabad, in 
1999. He received Ph.D in Computer Science & Engineering from JNT 
University, Hyderabad, in 2008. He has guided 3 research scholars for 
Ph.D. He served as Assistant Professor from 1996 to 2006 and as 
Associate Professor from 2006 to 2012. He is working as Professor of CSE
 Dept., at JNTUA College of Engineering, Anantapuram since 2012 and 
currently acting as coordinator for Master of Science in Information 
Technology (MSIT) programme offered at JNTU Anantapuram, currently he is
 Vice-Principal, J.N.T.U.A. College of Engineering, Anantapuram. He has 
more than 50 Publications in various International Journals and 
Conferences. He is one of the author’s of the textbooks titled 
‘Programming with Java’ published by Pearson/Sanguine Publishers and 
‘Data Mining’ published by <span class=""read-more"">… <a href=""http://www.icgst-amc.com/institute/Community.aspx?InstId=3&aid=3517#"" rel=""nofollow"">[ read more ]</a></span></p></div> 
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">AMC URL:</span>
                                </td>
                            



                                <td class=""style13"" style=""text-align:left;"">
                                    <a href=""http://www.icgst-amc.com/institute/Community.aspx?aid=3517"" rel=""nofollow"">http://www.icgst-amc.com/institute/Community.aspx?aid=3517</a></td></tr></tbody></table><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><table class=""style1"" align=""left""><tbody><tr class=""alt-color""><td class=""page_head"" colspan=""2""><span style=""font-weight:bold;"">Academic Community Member:</span>
                                </td>
                                <td rowspan=""6"" style=""text-align:right;background-color:#FFFFFF;"" align=""right"" valign=""top"">
                                    <img src=""//web.archive.org/web/2im_/http://www.icgst-amc.com/institute/Handler1.ashx?url=%7E/InstituteFiles/3/Members/19727/Photo/12819727.jpg"" style=""border-color:#C0C0C0;border-width:5px;border-style:double;"" align=""top"" alt=""12819727.jpg"" /></td>
                            </tr><tr class=""alt-color""><td class=""page_head"" colspan=""2""><span style=""font-weight:bold;"">Page Visitors:</span>
                                     <span>24</span>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Full Name:</span>
                                </td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span>Mr.</span>
                                    <a href=""http://mjcollege.ac.in/"" rel=""nofollow"">MOHAMMED   ISMAIL.B</a>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Affiliation:</span>
                                </td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span class=""align"">Muffakham jah college of Engineering &Tech</span>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Biography:</span>
                                    <br /><img src=""//web.archive.org/web/2im_/http://www.icgst-amc.com/Images/gm.jpg"" style=""height:50px;width:50px;border-width:0px;"" alt=""gm.jpg"" /></td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span class=""align""></span><div class=""expandable""><p>Mohammed
 Ismail. B received   B.E degree in Instrumentation Technology from 
V.T.U Belgaum and M.Tech in Computer Science Engineering from JNTUH 
Hyderabad. He is a Research Scholar  in CSE from JNTUA Ananthapuram. He 
has 13 years of teaching experience. He Joined Muffakham Jah  College of
 Engineering & Technology, Hyderabad in 2006 where he is working as 
Senior Assistant professor. His research interests include Image 
processing, Embedded Systems & Computer Vision. He has 13 
publications in National, International Journal and Conferences. He is a
 life member of ISTE.</p></div> 
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">AMC URL:</span>
                                </td>
                            



                                <td class=""style13"" style=""text-align:left;"">
                                    <a href=""http://www.icgst-amc.com/institute/Community.aspx?aid=19727"" rel=""nofollow"">http://www.icgst-amc.com/institute/Community.aspx?aid=19727</a></td></tr></tbody></table><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><table class=""style1"" align=""left""><tbody><tr class=""alt-color""><td class=""page_head"" colspan=""2""><span style=""font-weight:bold;"">Academic Community Member:</span>
                                </td>
                                <td rowspan=""6"" style=""text-align:right;background-color:#FFFFFF;"" align=""right"" valign=""top"">
                                    <img src=""//web.archive.org/web/2im_/http://www.icgst-amc.com/institute/Handler1.ashx?url=%7E//InstituteFiles/3/Members/20758/Photo/12820758.jpg"" style=""border-color:#C0C0C0;border-width:5px;border-style:double;"" align=""top"" alt=""12820758.jpg"" /></td>
                            </tr><tr class=""alt-color""><td class=""page_head"" colspan=""2""><span style=""font-weight:bold;"">Page Visitors:</span>
                                     <span>26</span>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Full Name:</span>
                                </td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span>Prof. Dr.</span>
                                    <a href=""http://www.skuniversity.org/"" rel=""nofollow"">T. Bhaskara  Reddy</a>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Affiliation:</span>
                                </td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span class=""align"">S.K.U Anantapuram (A.P)</span>
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">Biography:</span>
                                    <br /><img src=""//web.archive.org/web/2im_/http://www.icgst-amc.com/Images/gm.jpg"" style=""height:50px;width:50px;border-width:0px;"" alt=""gm.jpg"" /></td>
                                <td class=""style13"" style=""text-align:left;"">
                                    <span class=""align""></span><div class=""expandable""><p>Dr.
 T. Bhaskara Reddy, Associate Professor. Department of  Computer Science
 and Technology at S.K University, Anantapur A.P. He holds the post of 
Deputy Director of Distance education at S.K. University. He was also 
the CSE Coordinator of 
Engineering S.K. University. He completed his M. Sc and Ph. D in 
computer science from S.K. University. He has acquired M. Tech from 
Nagarjuna University. He has more than 20 years of Teaching and Research
 experience. He has published more than 60 papers in National, 
International journals and conferences. To his credit he has completed 
major research project (UGC) on “Segment Compression of medical images 
using Lossless binary and optimized binary plane techniques”. He has 
successfully guided 6  Ph. D and 3 M. Phil students. His research 
interests are in the field of image Processing, computer networks, data 
mining and data ware house.
</p></div> 
                                </td>
                            </tr><tr><td class=""style14"">
                                    <span style=""font-weight:bold;"">AMC URL:</span>
                                </td>
                            



                                <td class=""style13"" style=""text-align:left;"">
                                    <a href=""http://www.icgst-amc.com/institute/Community.aspx?aid=20758"" rel=""nofollow"">http://www.icgst-amc.com/institute/Community.aspx?aid=20758</a></td></tr></tbody></table><br />","['journals_contributions', 'journals']"
DTIC_AD1000313,DTIC AD1000313: Kleene Algebra and Bytecode Verification,D,"Most standard approaches to the static analysis of programs, such as the popular worklist method, are first-order methods that inductively annotate program points with abstract values. In [6] we introduced a second-order approach based on Kleene algebra. In this approach, the primary objects of interest are not the abstract data values, but the transfer functions that manipulate them. These elements form a left-handed Kleene algebra. The data flow labeling is not achieved by inductively labeling the program with abstract values, but rather by computing the star (Kleene closure) of a matrix of transfer functions. In this paper we show how this general framework applies to the problem of Java bytecode verification. We show how to specify transfer functions arising in Java bytecode verification in such a way that the Kleene algebra operations (join, composition, star) can be computed efficiently. We also give a hybrid dataflow analysis algorithm that computes the closure of a matrix on a cutset of the control flow graph, thereby avoiding the recalculation of dataflow information when there are cycles in the graph. This method could potentially improve the performance over the standard worklist algorithm when a small cutset can be found.","['dticarchive', 'additional_collections']"
arxiv-1604.05903,A declarative JVM Language for Automated Validation,Nabarun Mondal,"nJexl is a derivative of Apache Jexl project [1]. The motivation for nJexl are domain specific languages (DSL) like VERILOG [2], VHDL [3], Spice [4]. DSL for Soft- ware testing is not a new idea, many commercial tools like Silk Suite [5] use them,while Selenese, the DSL for Selenium IDE [6] is open source. nJexl is a functionally motivated, embeddable,Turing Complete [7] [8] language. It's philosophy is to expose the existing Java echo system in a declarative fashion for the purpose of software validation [9]. By design nJexl script size is meagre compared to Python or even to Scala for validation problems. Author's firm heavily uses nJexl for software automation purpose which drastically reduced the effort for automatic verification for a year now.","['arxiv', 'journals']"
arxiv-1604.04591,An Interference-Free Programming Model for Network Objects,Mischael Schill,"Network objects are a simple and natural abstraction for distributed object-oriented programming. Languages that support network objects, however, often leave synchronization to the user, along with its associated pitfalls, such as data races and the possibility of failure. In this paper, we present D-SCOOP, a distributed programming model that allows for interference-free and transaction-like reasoning on (potentially multiple) network objects, with synchronization handled automatically, and network failures managed by a compensation mechanism. We achieve this by leveraging the runtime semantics of a multi-threaded object-oriented concurrency model, directly generalizing it with a message-based protocol for efficiently coordinating remote objects. We present our pathway to fusing these contrasting but complementary ideas, and evaluate the performance overhead of the automatic synchronization in D-SCOOP, finding that it comes close to---or outperforms---explicit locking-based synchronization in Java RMI.","['arxiv', 'journals']"
arxiv-1604.03211,Automatic Parallelization: Executing Sequential Programs on a Task-Based Parallel Runtime,Alcides Fonseca,"There are billions of lines of sequential code inside nowadays' software which do not benefit from the parallelism available in modern multicore architectures. Automatically parallelizing sequential code, to promote an efficient use of the available parallelism, has been a research goal for some time now. This work proposes a new approach for achieving such goal. We created a new parallelizing compiler that analyses the read and write instructions, and control-flow modifications in programs to identify a set of dependencies between the instructions in the program. Afterwards, the compiler, based on the generated dependencies graph, rewrites and organizes the program in a task-oriented structure. Parallel tasks are composed by instructions that cannot be executed in parallel. A work-stealing-based parallel runtime is responsible for scheduling and managing the granularity of the generated tasks. Furthermore, a compile-time granularity control mechanism also avoids creating unnecessary data-structures. This work focuses on the Java language, but the techniques are general enough to be applied to other programming languages. We have evaluated our approach on 8 benchmark programs against OoOJava, achieving higher speedups. In some cases, values were close to those of a manual parallelization. The resulting parallel code also has the advantage of being readable and easily configured to improve further its performance manually.","['arxiv', 'journals']"
ChinaXiv-201604.01046V1,中性原子成像仪地检电子系统的研制,明晨曦,"<div class=""hd"">
 <h1>
  
  中性原子成像仪地检电子系统的研制
 </h1>
 <div class=""flex"" style=""border:0px;padding-bottom:0px;"">
 </div>
 <div class=""bd"" style=""border-bottom:1px solid #ced6e0;"">
  <ul style=""margin-top:0px;"">
   <li>
    <b>
     作者：
    </b>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E6%98%8E%E6%99%A8%E6%9B%A6"" style=""color:#3060cc;"" rel=""nofollow"">
     明晨曦
    </a>
    <sup style=""margin-left:0px;"">
     1,2
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E4%BD%99%E5%BA%86%E9%BE%99"" style=""color:#3060cc;"" rel=""nofollow"">
     余庆龙
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E6%A2%81%E9%87%91%E5%AE%9D"" style=""color:#3060cc;"" rel=""nofollow"">
     梁金宝
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E5%BC%A0%E7%84%95%E6%96%B0"" style=""color:#3060cc;"" rel=""nofollow"">
     张焕新
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
    <a href=""https://chinaxiv.org/user/search.htm?field=author&amp;value=%E8%8D%86%E6%B6%9B"" style=""color:#3060cc;"" rel=""nofollow"">
     荆涛
    </a>
    <sup style=""margin-left:0px;"">
     1
    </sup>
   </li>
   <li>
    <b>
     作者单位：
    </b>
    <div style=""margin-left:70px;margin-top:-26px;"">
     <div>
      1.
      <a href=""https://chinaxiv.org/user/search.htm?field=affication&amp;value=%E4%B8%AD%E5%9B%BD%E7%A7%91%E5%AD%A6%E9%99%A2%E5%9B%BD%E5%AE%B6%E7%A9%BA%E9%97%B4%E7%A7%91%E5%AD%A6%E4%B8%AD%E5%BF%83"" style=""color:#3060cc;"" rel=""nofollow"">
       中国科学院国家空间科学中心
      </a>
     </div>
     <div>
      2.
      <a href=""https://chinaxiv.org/user/search.htm?field=affication&amp;value=%E4%B8%AD%E5%9B%BD%E7%A7%91%E5%AD%A6%E9%99%A2%E5%A4%A7%E5%AD%A6"" style=""color:#3060cc;"" rel=""nofollow"">
       中国科学院大学
      </a>
     </div>
    </div>
   </li>
   <li>
    <b>
     提交时间：
    </b>
    2016-04-22
   </li>
  </ul>
 </div>
 <div class=""bd"" style=""margin-top:15px;"">
  <p style=""color:#333;"">
   <b>
    摘要:
   </b>
   本文介绍了MIT卫星计划中性原子成像仪（NAIS-H）的基本结构以及工作原理，通过分析MIT卫星NAIS-H的工作原理及测试需求，设计并实现了基于该成像仪的地面检测，包括硬件电路系统及上位机软件系统。本文分别从通讯、数据处理等方面，描述了地检系统的主要结构设计以及工作流程，并详述了上位机系统中串口通讯、数据解包、图像处理等各软件模块设计以及java代码编写。最后，对地检系统进行测试，得到的结果显示该系统具有良好的性能，达到了设计要求。
  </p>
  <p style=""color:#333;"">
   <b>
    Abstract:
   </b>
   This paper introduces the structure and working principle of the Neutral Atom Imaging System-High （NAIS-H） which is in the MIT project. Based on the testing needs of the instrument， we have designed ground test equipment， including the circuit system and the host computer system. In this paper， we show the structure and working principle of the ground test for NAIS-H， and tell structure and java programming of the sub modules of the host computer system in detail， such as API communicating system， data analyzing system and data saving system. At last， we test the equipment， and the result shows the ground test system has good performance and achieves the design requirement.
  </p>
  <div class=""brdge"">
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%E8%83%BD%E9%87%8F%E4%B8%AD%E6%80%A7%E5%8E%9F%E5%AD%90"" rel=""nofollow"">
     能量中性原子
    </a>
   </span>
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%20%E5%9C%B0%E9%9D%A2%E6%A3%80%E6%B5%8B"" rel=""nofollow"">
     地面检测
    </a>
   </span>
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%20Java%E9%80%9A%E4%BF%A1"" rel=""nofollow"">
     Java通信
    </a>
   </span>
   <span class=""spankwd"">
    <a href=""https://chinaxiv.org/user/search.htm?field=keywords&amp;value=%20%E5%9B%BE%E5%83%8F%E7%AE%97%E6%B3%95"" rel=""nofollow"">
     图像算法
    </a>
   </span>
  </div>
  
  <ul>
   <li>
    <b>
     期刊：
    </b>
    <a rel=""nofollow"">
     电子设计工程
    </a>
   </li>
   <li>
    <b>
     分类：
    </b>
    <a href=""https://chinaxiv.org/user/search.htm?field=domain&amp;value=392"" rel=""nofollow"">
     地球科学
    </a>
    &gt;&gt;
    <a href=""https://chinaxiv.org/user/search.htm?field=subject&amp;value=402"" rel=""nofollow"">
     空间物理学
    </a>
   </li>
   <li>
    <b>
     引用：
    </b>
    <a href=""https://chinaxiv.org/abs/201604.01046"" rel=""nofollow"">
     <font color=""#0000FF"">
      ChinaXiv:201604.01046
     </font>
    </a>
    (或此版本
    <a href=""https://chinaxiv.org/abs/201604.01046v1"" rel=""nofollow"">
     <font color=""#0000FF"">
      ChinaXiv:201604.01046V1
     </font>
    </a>
    )
    <br />
    <a style=""margin-left:45px;"" rel=""nofollow"">
     doi:10.12074/201604.01046
    </a>
    <br />
    <a href=""https://www.cstr.cn/CSTR:32003.36.ChinaXiv.201604.01046.V1"" style=""margin-left:45px;"" rel=""nofollow"">
     <font color=""#0000FF"">
      CSTR:32003.36.ChinaXiv.201604.01046.V1
     </font>
    </a>
   </li>
   <li>
    <b>
     推荐引用方式：
    </b>
    <span>
     明晨曦,余庆龙,梁金宝,张焕新,荆涛.(2016).中性原子成像仪地检电子系统的研制.电子设计工程.[ChinaXiv:201604.01046]
    </span>
   </li>
  </ul>
 </div>
 <div class=""ft"">
  <h4>
   <span>
    版本历史
   </span>
  </h4>
  <table>
   <tr>
    <td>
     <b>
      [V1]
     </b>
    </td>
    <td>
     2016-04-22 08:58:10
    </td>
    <td>
     ChinaXiv:201604.01046V1
    </td>
    <td>
     <a class=""btn"" href=""https://chinaxiv.org/user/download.htm?id=1643"" rel=""nofollow"">
      下载全文
     </a>
    </td>
   </tr>
  </table>
 </div>
</div>
","['chinaxivmirror', 'journals']"
arxiv-1604.00346,Refactoring Delta-Oriented Product Lines to achieve Monotonicity,Ferruccio Damiani,"Delta-oriented programming (DOP) is a flexible transformational approach to implement software product lines. In delta-oriented product lines, variants are generated by applying operations contained in delta modules to a (possibly empty) base program. These operations can add, remove or modify named elements in a program (e.g., classes, methods and fields in a Java program). This paper presents algorithms for refactoring a delta-oriented product line into monotonic form, i.e., either to contain add and modify operations only (monotonic increasing) or to contain remove and modify operations only (monotonic decreasing). Because of their simpler structure, monotonic delta-oriented product lines are easier to analyze. The algorithms are formalized by means of a core calculus for DOP of product lines of Java programs and their correctness and complexity are given.","['arxiv', 'journals']"
arxiv-1603.08648,A Comparison of NOOP to Structural Domain-Theoretic Models of Object-Oriented Programming,M,"Mainstream object-oriented programming languages such as Java, C#, C++ and Scala are all almost entirely nominally-typed. NOOP is a recently developed domain-theoretic model of OOP that was designed to include full nominal information found in nominally-typed OOP. This paper compares NOOP to the most widely known domain-theoretic models of OOP, namely, the models developed by Cardelli and Cook, which were structurally-typed models. Leveraging the development of NOOP, the comparison presented in this paper provides a clear and precise mathematical account for the relation between nominal and structural OO type systems.","['arxiv', 'journals']"
ERIC_EJ1094576,ERIC EJ1094576: Academic Software Downloads from Google Code: Useful Usage Indicators?,E,"Introduction: Computer scientists and other researchers often make their programs freely available online. If this software makes a valuable contribution inside or outside of academia then its creators may want to demonstrate this with a suitable indicator, such as download counts. Methods: Download counts, citation counts, labels and licenses were extracted for programs that were both hosted in the Google Code software repository and cited in Scopus. Analysis: Download counts were correlated with Web of Science citations, the distributions of both were compared and common software labels and licencing arrangements were identified. Results: Although downloads correlate positively and significantly with Scopus citations, the correlation is weak (0.3) because some software has a large natural audience outside of academia. There is disagreement on the best licence to use for shared software, with no licence chosen by more than about a fifth of the projects. The most common language label was Java (20%) and, excluding generic computing terms, the most common topic labels were Google (5%), security (3%) and bioinformatics (3%). Conclusions: Download counts can give evidence of wider non-academic uses of software. However, software that is apparently not primarily designed for research but that is nevertheless cited by academics can also attract many downloads. Overall, download counts can be used as an indicator of academic value, but only if contextualised with the purpose of the program.","['ericarchive', 'additional_collections']"
ERIC_EJ1136238,ERIC EJ1136238: Wooden Peg Game: Implementations as Both a Web App and as an Android App,E,"Mobile application development is currently an important component of CS/IS education. Because of the rapid rate of change in the mobile application field, there are many websites that provide instructional material in tutorial format, but it is difficult to find a textbook that includes mobile application programming assignments and exercises. This paper presents two assignments, one as a web app implemented in HTML and JavaScript and one as an Android app implemented in Java using Android Studio, for an introductory level course in mobile application development. Both assignments implement the same game: a digital representation of the wooden peg game in which 15 pegs are arranged in a wooden triangle. When playing the game, one initial peg is removed from the board. Subsequent moves are made by jumping a peg over a second peg and removing the second peg. The ultimate goal is to remove all but one peg. The web app version of the game is assigned to students first, after other introductory html/JavaScript assignments have been completed. The html/JavaScript version can be used as an example of multi-platform development using PhoneGap or other multi-platform development environments. The Android app version of the game is assigned after other introductory Android applications have been completed.","['ericarchive', 'additional_collections']"
arxiv-1603.00431,On GitHub's Programming Languages,Amirali Sanatinia,"GitHub is the most widely used social, distributed version control system. It has around 10 million registered users and hosts over 16 million public repositories. Its user base is also very active as GitHub ranks in the top 100 Alexa most popular websites. In this study, we collect GitHub's state in its entirety. Doing so, allows us to study new aspects of the ecosystem. Although GitHub is the home to millions of users and repositories, the analysis of users' activity time-series reveals that only around 10% of them can be considered active. The collected dataset allows us to investigate the popularity of programming languages and existence of pattens in the relations between users, repositories, and programming languages. By, applying a k-means clustering method to the users-repositories commits matrix, we find that two clear clusters of programming languages separate from the remaining. One cluster forms for ""web programming"" languages (Java Script, Ruby, PHP, CSS), and a second for ""system oriented programming"" languages (C, C++, Python). Further classification, allow us to build a phylogenetic tree of the use of programming languages in GitHub. Additionally, we study the main and the auxiliary programming languages of the top 1000 repositories in more detail. We provide a ranking of these auxiliary programming languages using various metrics, such as percentage of lines of code, and PageRank.","['arxiv', 'journals']"
DTIC_ADA631963,DTIC ADA631963: Graph-based Models for Data and Decision Making,D,"This effort is focused on developing and applying tools for modeling human information processing. Models include transformations of response time data from empirical studies, and complex network models for capturing broader dynamics of complex systems. Progress so far has resulted in some theoretical work in the area of response time modeling of workload capacity and dimer automata complex systems models of information transmission through a network. We have designed a novel approach for interfacing cognitive models and user interfaces, and have explored relationships between mathematical and computational models of a detection task. Additionally, new visual tools for pattern discovery and visual analytics are proposed based on topological data analysis theory. Several pieces of open source software have been developed for implementing these analyses and making them widely available.","['dticarchive', 'additional_collections']"
arxiv-1602.01711,The Great Time Series Classification Bake Off: An Experimental Evaluation of Recently Proposed Algorithms. Extended Version,Anthony Bagnall,"In the last five years there have been a large number of new time series classification algorithms proposed in the literature. These algorithms have been evaluated on subsets of the 47 data sets in the University of California, Riverside time series classification archive. The archive has recently been expanded to 85 data sets, over half of which have been donated by researchers at the University of East Anglia. Aspects of previous evaluations have made comparisons between algorithms difficult. For example, several different programming languages have been used, experiments involved a single train/test split and some used normalised data whilst others did not. The relaunch of the archive provides a timely opportunity to thoroughly evaluate algorithms on a larger number of datasets. We have implemented 18 recently proposed algorithms in a common Java framework and compared them against two standard benchmark classifiers (and each other) by performing 100 resampling experiments on each of the 85 datasets. We use these results to test several hypotheses relating to whether the algorithms are significantly more accurate than the benchmarks and each other. Our results indicate that only 9 of these algorithms are significantly more accurate than both benchmarks and that one classifier, the Collective of Transformation Ensembles, is significantly more accurate than all of the others. All of our experiments and results are reproducible: we release all of our code, results and experimental details and we hope these experiments form the basis for more rigorous testing of new algorithms in the future.","['arxiv', 'journals']"
essential-java,Essential Java,A,"<span style=""color:rgb(236,236,236);font-family:'Söhne', 'ui-sans-serif', 'system-ui', '-apple-system', 'Segoe UI', Roboto, Ubuntu, Cantarell, 'Noto Sans', sans-serif, 'Helvetica Neue', Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';font-size:14px;background-color:rgb(33,33,33);"">Java programming: the Object Class</span>",opensource
arxiv-1601.08154,"JADE, TraSMAPI and SUMO: A tool-chain for simulating traffic light control",Tiago Azevedo,"Increased stress, fuel consumption, air pollution, accidents and delays are some of the consequences of traffic congestion usually incurring in tremendous economic impacts, which society aims to remedy in order to leverage a sustainable development. Recently, unconventional means for modeling and controlling such complex traffic systems relying on multi-agent systems have arisen. This paper contributes to the understanding of such complex and highly dynamic systems by proposing an open-source tool-chain to implement multi-agent-based solutions in traffic and transportation. The proposed approach relies on two very popular tools in both domains, with focus on traffic light control. This tool-chain consists in combining JADE (Java Agent DEvelopment Framework), for the implementation of multi-agent systems, with SUMO (Simulation of Urban MObility), for the microscopic simulation of traffic interactions. TraSMAPI (Traffic Simulation Manager Application Programming Interface) is used to combine JADE and SUMO allowing communication between them. A demonstration of the concept is presented to illustrate the main features of this tool-chain, using Q-Learning as the reinforcement learning method for each traffic light agent in a simulated network. Results demonstrate the feasibility of the proposed framework as a practical means to experiment with different agent-based designs of intelligent transportation solutions.","['arxiv', 'journals']"
ERIC_ED591582,ERIC ED591582: The Incremental Teaching Project Design for Project-Based Learning and Its Application in Java Programming Course,E,"Project-Based Learning (PBL) is a widely adopted pedagogy that ignites students' interest of a subject through the investigation of an authentic problem and cultivates their abilities of innovation and self-learning. Traditional PBL often involves a project of complexity and significant scale, which, under the time constraint of a course, is often difficult for students to handle and risks insufficient comprehension of the knowledge and negative impact on learning confidence. This paper proposes an incremental teaching project concept and its design strategy on top of the traditional project-based learning. An incremental teaching project is carefully designed for a Java Programming curriculum, based on which we discuss the dos and don'ts of applying incremental PBL to teaching.","['ericarchive', 'additional_collections']"
ERIC_EJ1114675,ERIC EJ1114675: Development of Distributed System for Electronic Business Based on Java-Technologies,E,"This paper describes the results of studies on the peculiarities of distributed information systems, and the research of distributed systems technology development. The paper also provides the results of the analysis of E-business market research in the Republic of Kazakhstan. The article briefly describes the implementation of a possible solution to a distributed system based on Java-technologies. The topicality of the work is determined by the need of E-business development to increase economic investments, as well as improving the competitiveness of Kazakhstan in the world trade. The paper gives a brief description of the types of E-business, the concept of a distributed system, types of distributed software systems, distributed systems architecture analysis, logical software layers of distributed systems, as well as the analysis of distributed systems technology development and Java-technologies for the development of distributed systems. In addition, an example of a distributed system development in E-business is provided--a Java-based online store, as well as the description of the implementation of a distributed system, the software part and a hardware part of a distributed system, the description of the logical architecture for the online store, the structure and the operation of the system. Also, the name and address of the implemented distributed system are given, which is the result of a study of distributed systems and the implementation of Java-based distributed systems. The development of E-business requires the implementation of an information system for the promotion of goods and services. Today, E-businesses mostly use information systems with distributed structure. The implementation of Java-based distributed systems in E-business is one way of the E-business development in Kazakhstan. The results are applicable to the post-Soviet and developing countries, which include Kazakhstan, as the theoretical basis for the development of E-business.","['ericarchive', 'additional_collections']"
NASA_NTRS_Archive_20160011454,NASA Technical Reports Server (NTRS) 20160011454: Computational Approaches to Simulation and Optimization of Global Aircraft Trajectories,N,"This study examines three possible approaches to improving the speed in generating wind-optimal routes for air traffic at the national or global level. They are: (a) using the resources of a supercomputer, (b) running the computations on multiple commercially available computers and (c) implementing those same algorithms into NASAs Future ATM Concepts Evaluation Tool (FACET) and compares those to a standard implementation run on a single CPU. Wind-optimal aircraft trajectories are computed using global air traffic schedules. The run time and wait time on the supercomputer for trajectory optimization using various numbers of CPUs ranging from 80 to 10,240 units are compared with the total computational time for running the same computation on a single desktop computer and on multiple commercially available computers for potential computational enhancement through parallel processing on the computer clusters. This study also re-implements the trajectory optimization algorithm for further reduction of computational time through algorithm modifications and integrates that with FACET to facilitate the use of the new features which calculate time-optimal routes between worldwide airport pairs in a wind field for use with existing FACET applications. The implementations of trajectory optimization algorithms use MATLAB, Python, and Java programming languages. The performance evaluations are done by comparing their computational efficiencies and based on the potential application of optimized trajectories. The paper shows that in the absence of special privileges on a supercomputer, a cluster of commercially available computers provides a feasible approach for national and global air traffic system studies.","['NASA_NTRS_Archive', 'additional_collections']"
absolutebeginner0000cade,Absolute beginner's guide to Minecraft Mods programming : no experience necessary!,C,"['1 online resource (1 volume) :', ""Now you can mod your Minecraft game environment into anything you can imagine, without becoming a technical expert! This book is the fastest way to master Minecraft modding and use Java to transform the Minecraft game's worlds, tools, behavior, weapons, structures, mobs ... everything! Plus, you'll learn Java programming skills you can use anywhere. Learn how to do what you want, the way you want, one incredibly easy step at a time. Modding the Minecraft game has never been this simple! --Publisher's description"", 'Online resource; title from title page (Safari, viewed October 23, 2015)', 'Includes index', ""Java from the ground up. Dig into Minecraft programming with Java ; Use NetBeans for Minecraft programming ; Create a Minecraft Mod ; Start writing Java programs ; Understand how Java programs work ; Store and change information in a Mod ; Use strings to communicate ; Use conditional tests to make decisions ; Repeat an action with loops ; Store information with arrays -- The world of Java objects. Create your first object ; Describe what your object is like ; Make the most of existing objects ; Store objects in data structures ; Handle errors in a Mod ; Create a threaded Mod ; Read and write files -- Create killer Minecraft Mods. Spawn a Mob ; Make one Mob ride another ; Take a census of Mobs and villages ; Transmute materials in an inventory ; Dig a giant hole ; Chop down a forest of trees ; Respond to events in the game ; Display a Mob's health during combat ; Make a world change over time ; Befriend the God of lightning""]","['printdisabled', 'internetarchivebooks']"
bb-Building.Trading.Bots.Using.Java,Building  Trading Bots  Using Java,S,"Welcome to the world of automated trading! The fact that you are reading this book 
suggests that you want to probably build your own bot, which hopefully can make you 
some money while you are busy with your day job or, like me, want to experiment with 
the technology that goes into building such a bot using Java.
Automated trading has been around for a while, although it has largely been a 
preserve of big players such as banks and hedge funds.
This has changed in the last few years, however. Many retail investors are now able 
to trade on various platforms and exchanges directly, instead of using the services of a 
traditional broker on the phone, which means the demand has been growing to automate 
the task of placing orders while these investors get on with their day jobs. As a first step in 
automating this process, many platforms such as OANDA, LMAX, etc., provide APIs for 
various programming languages such as Java, Python, C#, and PHP so that the mundane 
tasks of watching the market, looking at charts, and doing analysis can be automated.
On this journey, we will focus not only on the concepts of automated trading, but 
also on writing clean, test-driven Java programs.
Toward the end, we will not only have a working trading bot that is ready to 
trade with any strategy, but from a technical perspective, we will have also gained an 
appreciation of the event-driven, multithreaded world of Java programming<div><br /></div><div><b><br /></b></div><div><b>ISBN-13 (pbk)</b>: 978-1-4842-2519-6 </div><div><b>ISBN-13 (electronic):</b> 978-1-4842-2520-2 </div><div><b>DOI</b> 10.1007/978-1-4842-2520-2<br /></div>","['opensource', 'community']"
beginningandroid0000zech_s5c5,Beginning Android games ,Z,"['1 online resource :', ""Learn all of the basics needed to join the ranks of successful Android game developers. You'll start with game design fundamentals and Android programming basics, and then progress toward creating your own basic game engine and playable game apps that work on Android smartphones and tablets. Beginning Android Games, Third Edition gives you everything you need to branch out and write your own Android games for a variety of hardware. Do you have an awesome idea for the next break-through mobile gaming title? Beginning Android Games will help you kick-start your project. This book will guide you through the process of making several example game apps using APIs available in Android. What You'll Learn Gain the fundamentals of game programming in the context of the Android platform Use Android's APIs for graphics, audio, and user input to reflect those fundamentals Develop two 2D games from scratch, based on Canvas API and OpenGL ES Create a full-featured 3D game Publish your games, get crash reports, and support your users Complete your own playable 2D OpenGL games Who This Book Is For People with a basic knowledge of Java who want to write games on the Android platform. It also offers information for experienced game developers about the pitfalls and peculiarities of the platform"", ""Android, the new kid on the block -- First steps with the Android SDK -- Game development 101 -- Android for game developers -- An Android game development framework -- Mr. Nom invades Android -- OpenGL ES : a gentle introduction -- 2D game programming tricks -- Super jumper : a 2D OpenGL ES game -- OpenGL ES : going 3D -- Programming tricks -- Droid invaders : the grand finale -- Publishing your game -- What's next?"", 'Print version record', 'Includes bibliographical references and index']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningrubyfro0000coop_v6z6,Beginning Ruby : from novice to professional,C,"['1 online resource (476 pages)', ""Learn the principles behind object-oriented programming and within a few chapters create a fully functional Ruby application. You'll also gain a basic understanding of many ancillary technologies such as databases, XML, web frameworks, and networking - some of which are needed as part of a fully functioning Ruby application. Based on the bestselling first and second editions, Beginning Ruby, Third Edition is a leading guide to learn Ruby from the ground up. The new edition of this book provides the same excellent introduction to Ruby as the previous editions plus updates for the newest version of Ruby 2.3. This book can also be used as a textbook or companion to a textbook on beginning Ruby programming. The light and agile Ruby programming language remains a very popular open source scripting option for developers building today's web and even some enterprise applications. And, now, Ruby also has applications using the Raspberry Pi, popular among hobbyists and makers. Many former Java developers still use Ruby on Rails today, the most popular framework for building Ruby applications. What You'll Learn What are the fundamentals of Ruby and its object-oriented building blocks How to work with Ruby libraries, gems, and documentation How to work with files and databases How to write and deploy Ruby applications What are the various Ruby web frameworks and how to use them How to do network programming with Ruby and more Who This Book Is For This book is for beginning programmers, programmers new to Ruby, and web developers interested in learning and knowing the foundations of the Ruby programming language"", ""At a Glance; Contents; Foreword; About the Author; About the Technical Reviewer; Acknowledgments; Introduction; Part 1: Foundations and Scaffolding; Chapter 1: Let's Get It Started: Installing Ruby; Installing Ruby; Windows; Mac OS X / macOS; Testing for a Preinstalled Version of Ruby; Installing Ruby on OS X; Installing Ruby from Source on Mac OS X; Linux; Checking If Ruby Is Installed on Linux; Installing Ruby with a Package Manager; Installing Ruby from Source Code; Other Platforms; Summary; Chapter 2: Programming == Joy: A Whistle-Stop Tour of Ruby and Object Orientation"", 'Baby Stepsirb: Interactive Ruby; Ruby Is ""English for Computers""; Why Ruby Makes a Great Programming Language; Trails for the Mind; Turning Ideas into Ruby Code; How Ruby Understands Concepts with Objects and Classes; The Making of a Person; Basic Variables; From People to Pets; Structuring Your Pets Logically; Controlling Your Pets; Everything Is an Object; Kernel Methods; Passing Data to Methods; Using the Methods of the String Class; Using Ruby in a Non-Object-Oriented Style; Summary; Chapter 3: Ruby\'s Building Blocks: Data, Expressions, and Flow Control; Numbers and Expressions', 'Basic ExpressionsVariables; Comparison Operators and Expressions; Looping Through Numbers with Blocks and Iterators; Floating Point Numbers; Constants; Text and Strings; String Literals; String Expressions; Interpolation; String Methods; Regular Expressions and String Manipulation; Substitutions; Iteration with a Regular Expression; Matching; Arrays and Lists; Basic Arrays; Splitting Strings into Arrays; Array Iteration; Other Array Methods; Array Addition and Concatenation; Array Subtraction and Difference; Checking for an Empty Array; Checking an Array for a Certain Item', ""Accessing the First and Last Elements of the ArrayReversing the Order of the Array's Elements; Hashes; Basic Hash Methods; Iterating Through Hash Elements; Retrieving Keys; Deleting Hash Elements; Deleting Hash Elements Conditionally; Hashes Within Hashes; Flow Control; if and unless;?, the Ternary Operator; elsif and case; while and until; Code Blocks; Other Useful Building Blocks; Dates and Times; Large Numbers; Ranges; Symbols; Converting Objects to Other Classes; Summary; Chapter 4: Developing Your First Ruby Application; Working with Source Code Files; Creating a Test File"", 'Visual Studio CodeAlternatives to Linux; A Simple Source Code File; Running Your Source Code; Windows; Mac OS X / macOS; Linux and Other UNIX-Based Systems; Our Application: A Text Analyzer; Required Basic Features; Building the Basic Application; Obtaining Some Dummy Text; Loading Text Files and Counting Lines; Counting Characters; Counting Words; Counting Sentences and Paragraphs; Calculating Averages; The Source Code So Far; Adding Extra Features; Percentage of ""Useful"" Words; Summarizing by Finding ""Interesting"" Sentences; Analyzing Files Other Than text.txt; The Completed Program', 'Summary', 'Print version record', 'Includes bibliographical references and index']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
bigcpubigdatasol0000kami,"Big CPU, big data : solving the world's toughest computational problems with parallel computing",K,"['viii, 496 pages : 23 cm', 'Teaches how to write parallel programs for multicore machines, compute clusters, GPU accelerators, and big data map-reduce jobs, in the Java language. Covers how to measure the performance of parallel programs and how to design the programs to run as fast as possible. -- Back cover']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
java-3-d-programming,Java 3D Programming,D,"<span style=""color:rgb(71,70,65);font-family:Helvetica, Arial, sans-serif;font-size:14px;white-space:pre-wrap;background-color:rgb(255,255,255);"">Java 3D is a client−side Java application programming interface (API) developed at Sun Microsystems for rendering interactive 3D graphics using Java. Using Java 3D you will be able to develop richly interactive 3D applications, ranging from immersive games to scientific visualization applications.</span>","['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
java-gui-lessons,Java GUI Lessons,J,"Back in 2016, I had some programming students who wanted to FINALLY learn how to make graphical games in Java, so I obliged them, by crafting these 12 lessons. There were originally going to be another 6 lessons, covering topics like inheritance, but by October of that year, I was growing tired of making these, and my students were more interested in creatively enhancing their own Mario games, as well as making other graphical games in Java, so I have left this work ""unfinished"".<div><br /></div><div>Why are the lessons numbered 1-#? Originally, I had plans for other series of lessons covering other broad topics, which would have been numbered 2-#, 3-#, etc. However, I never really got around to making those, either.<br /><div><br /></div><div>You are free to use the provided Java code for ANY purpose, commercial or non-commercial!</div></div>",opensource
java8shizhanjava0000raou,"Java 8 shi zhan = Java 8 in action: lambdas, streams, and functional-style programming",R,"['349 p. ; 24 cm', 'Ben shu jie shao le Java 8 zhei ge li cheng bei ban ben de xin te xing, Bao kuo Lambdas, Liu he han shu shi bian cheng. Quan shu fen si ge bu fen:ji chu zhi shi, Han shu shi shu ju chu li, Gao xiao Java 8 bian cheng he chao yue Java 8,Xiang du zhe zhan xian le yi fu Java yu shi ju jin de xian dai hua hua juan', 'You Manning Publication shou quan chu ban']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javabestguidetom0000hoff,JAVA : the best guide to master JAVA programming fast,H,50 pages : 16 cm,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaprogramming0008farr_n0r1,Java programming,F,"['xxx, 994 pages : 24 cm', '""Print number: 01; Print year: 2015""--Title page verso', 'Includes index', 'Includes Internet access', 'Previous edition: Boston, MA : Course Technology, 2014']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaxmljson0000frie,Java XML and JSON ,F,"['1 online resource (xx, 284 pages) :', ""Java XML and JSON describes the popular XML and JSON data-interchange languages. You explore each language and learn how to parse/create XML-based documents and parse JSON-based documents via various Java APIs. You also learn how XML and JSON are used in AJAX (and AJAJ), Android, Big Data, and Web Services contexts, all from the Java perspective. What you'll learn How to use Java, JSON and XML together to build services, big data How to use XML; parse XML documents with SAX, DOM, StAX; selecting nodes with XPath; and transform XML documents with XSLT What is JSON and how to explore parsing JSON content with Google GSON, Jackson, Quick JSON How to roll your own JSON APIs How to use XML and JSON with Ajax, Android, big data and web services"", 'Online resource; title from PDF title page (SpringerLink, viewed June 29, 2016)', 'Chapter 1: Introducing XML -- Chapter 2: Parsing XML Documents with SAX -- Chapter 3: Parsing and Creating XML Documents with DOM -- Chapter 4: Parsing and Creating XML Documents with StAX -- Chapter 5: Selecting Nodes with XPath -- Chapter 6: Transforming XML Documents with XSLT -- Chapter 7: Introducing JSON -- Chapter 8: Parsing and Creating JSON Objects with mJson -- Chapter 9: Parsing and Creating JSON Objects with Gson -- 10: Extracting JSON Values with JsonPath -- Appendix A: Answers to Exercises', 'Includes bibliographical references and index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
modernprogrammin0000davi,"Modern programming made easy : using Java, Scala, Groovy, and JavaScript ",D,"['xvii, 126 pages : 24 cm', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
professionalscal0000bedr,Professional Scala ,B,"['xviii, 222 pages : 24 cm', '""Wrox programmer to programmer""--Cover', 'Includes index', 'Language features -- Functional programming -- Java combatibility -- Simple build tool -- Maven -- Scala style/ling -- Testing -- Documenting your code with Scaladoc -- Type system -- Advanced functional programming -- Concurrency -- Scala.js']","['printdisabled', 'internetarchivebooks']"
raspberrypiwithj0000chin,Raspberry Pi with Java : programming the internet of things (IoT),C,"['xv, 315 pages, 5 unnumbered pages : 24 cm', '""Create embedded projects for personal and professional application. Join the Internet of Things revolution with a project-based approach to building embedded Java applications. Written by recognized Java experts, this Oracle Press guide features a series of low-cost, DIY projects that gradually escalate your development skills. Learn how to set up and configure your Raspberry Pi, connect external hardware, work with the NetBeans IDE, and write and embed powerful Java applications. Raspberry Pi with Java: Programming the Internet of Things (IoT) covers hobbyist as well as professional home and industry applications."" --Back cover', '""Oracle Press""--Cover', '""Embedded application development for home and industry""--Cover', 'Includes index (pages 297-315)', 'Baking Pi -- Your first Java project -- Binary timer -- IoT hat -- Line runner -- Tea station -- Autonomous drone -- Retro video game emulator -- Nighthacking RetroPi -- Index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
softwarequalityj0000munt,Software quality and Java automation engineer survival guide : a completely packaged guide with right skills : 500+ questions & answers ,M,"['xxxv, 401 pages : 23 cm', '""Basic concepts + self review + interview preparation.""', 'Includes bibliographical references', 'Introduction -- Skill#1. Software development life cycle (SDLC) -- Skill#2. Software quality concepts -- Skill#3. Object oriented programming & system (OOPS) -- Skill#4. XML -- Skill#5. XPATH -- Skill#6. JSON -- Skill#7. Source code control system (SCCS)/SCM SVN & GIT -- Skill#8. UNIX/LINUX OS -- Skill#9. JAVA -- Skill#10. ANT -- Skill#11. MAVEN -- Skill#12. JUNIT -- Skill#13. Testing -- Skill#14. Hudson/Jenkins -- Skill#15. Web applications testing and selenium -- Skill#16. Web services (Soap&Rest API) testing and SOAPUI Tool -- Hands-on/getting started -- JAVA samples code -- Selenium samples code -- Conclusion']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
springmvccookboo0000bret,Spring MVC cookbook : over 40 recipes for creating cloud-ready Java web applications with Spring MVC,B,"['1 online resource :', 'Annotation', 'Description based on online resource; title from cover (viewed March 15, 2016)', 'Includes index', 'Cover; Copyright; Credits; About the Author; About the Reviewer; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Setup Routine for an Enterprise Spring Application; Introduction; Installing Eclipse for JEE Developers and Java SE 8; Configuring Eclipse for Java 8, Maven 3, and Tomcat 8; Defining the project structure with Maven; Installing Spring, Spring MVC, and a web structure; Chapter 2: Designing a Microservice Architecture with Spring MVC; Introduction; Configuring a controller with simple URL mapping; Configuring a fallback controller using ViewResolver', 'Setting up and customizing a responsive single page webdesign with BootstrapDisplaying a model in the View, using the JSTL; Defining a common WebContentInterceptor; Designing a client-side MVC pattern with AngularJS; Chapter 3: Working with Java Persistence and Entities; Introduction; Configuring the Java Persistence API in Spring; Defining useful EJB3 entities and relationships; Making use of the JPA and Spring Data JPA; Chapter 4: Building a REST API for a Stateless Architecture; Introduction; Binding requests and marshalling responses; Configuring content-negotiation (JSON, XML, and so on)', 'Adding pagination, filters, and sorting capabilitiesHandling exceptions globally; Documenting and exposing an API with Swagger; Chapter 5: Authenticating with Spring MVC; Introduction; Configuring Apache HTTP to proxy your Tomcat(s); Adapting users and roles to Spring Security; Authenticating over a BASIC scheme; Authenticating with a third-party OAuth2 scheme; Storing credentials in a REST environment; Authorizing on services and controllers; Chapter 6: Implementing HATEOAS; Introduction; Turning DTOs into Spring HATEOAS resources; Building links for a hypermedia-driven API', 'Choosing a strategy to expose JPA EntitiesRetrieving data from a third-party API with OAuth; Chapter 7: Developing CRUD Operations and Validations; Introduction; Extending REST handlers to all HTTP methods; Validating resources using bean validation support; Internationalizing messages and contents for REST; Validating client-side forms with HTML5 AngularJS; Chapter 8: Communicating Through WebSockets and STOMP; Introduction; Streaming social events with STOMP over SockJS ; Using RabbitMQ as a multiprotocol message broker; Stacking and consuming tasks with RabbitMQ and AMQP', 'Securing messages with Spring Session and RedisChapter 9: Testing and Troubleshooting; Introduction; Automating Database Migrations with FlyWay; Unit testing with Mockito and Maven Surefire; Integration testing with Cargo, Rest-assured, and Maven failsafe; Injecting Spring Beans into integration tests; Modern application Logging with Log4j2; Index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
springpersistenc0000fish_k1u5,Spring persistence with Hibernate,F,"['1 online resource :', ""Learn how to use the core Hibernate APIs and tools as part of the Spring Framework. This book illustrates how these two frameworks can be best utilized. Other persistence solutions available in Spring are also shown including the Java Persistence API (JPA). Spring Persistence with Hibernate, Second Edition has been updated to cover Spring Framework version 4 and Hibernate version 5. After reading and using this book, you'll have the fundamentals to apply these persistence solutions into your own mission-critical enterprise Java applications that you build using Spring. Persistence is an important set of techniques and technologies for accessing and using data, and ensuring that data is mobile regardless of specific applications and contexts. In Java development, persistence is a key factor in enterprise, e-commerce, and other transaction-oriented applications. Today, the agile and open source Spring Framework is the leading out-of-the-box, open source solution for enterprise Java developers; in it, you can find a number of Java persistence solutions. What You'll Learn How to use Spring Persistence, including using persistence tools in Spring as well as choosing the best Java persistence frameworks outside of Spring How to work with Spring Framework features such as Inversion of Control (IoC), aspect-oriented programming (AOP), and more How to work with Spring JDBC, use declarative transactions with Spring, and reap the benefits of a lightweight persistence strategy How to work with Hibernate and integrate it into your Spring-based enterprise Java applications for transactions, data processing, and more How to integrate JPA for creating a well-layered persistence tier in your enterprise Java application Who This Book Is For This book is ideal for developers interested in learning more about persistence framework options on the Java platform, as well as fundamental Spring concepts. Because the book covers several persistence frameworks, it is suitable for anyone interested in learning more about Spring or any of the frameworks covered. Lastly, this book covers advanced topics related to persistence architecture and design patterns, and is ideal for beginning developers looking to learn more in these areas"", 'Online resource; title from PDF title page (SpringerLink, viewed June 15, 2016)', ""At a Glance; Contents; About the Authors; About the Technical Reviewer; Acknowledgments; Preface; Chapter 1: Architecting Your Application with Spring, Hibernate, and Patterns; The Benefit of a Consistent Approach; The Significance of Dependency Injection; A Synergistic Partnership; The Story of Spring's and Hibernate's Success; A Better Approach for Integration; Best Practices for Architecting an Application; The Layers of a Persistence Tier; The Domain Model; The Data Access Object (DAO) Layer; The Service Layer; Leveraging Declarative Transactions"", ""Understanding Aspect-Oriented Programming (AOP)Simplifying Transactions; The Benefit of Coding to Interfaces; Testing Your Persistence Tier; Advanced Features and Performance Tuning; Hibernate Search; Hibernate Validator; Building a REST Web Service; Other Persistence Design Patterns; The Template Pattern; The Active-Record Pattern; Summary; Chapter 2: Spring Basics; Exploring Spring's Architecture; The Application Context; An XML-Based Approach; Code-Based Configuration; Beans, Beans, the Magical Fruit; The Spring Life Cycle; Understanding Bean Scopes"", 'Dependency Injection and Inversion of ControlSetter-Based Dependency Injection; Constructor-Based Dependency Injection; Instance Collaboration; Coding to Interfaces; Dependency Injection via Autowiring; Code-Based Dependency Injection; Set It and Forget It!; Injecting Code Using AOP and Interceptors; Summary; Chapter 3: Basic Application Setup; Application Management with Maven; Managed Dependencies; Standard Directory Structure; POM Deconstruction; Spring Configuration; Namespace Support; Externalizing Property Configurations; Component Scanning; Import Statements; Database Integration', 'JDBC SupportIntegration with JNDI; Web Application Configuration; Servlet Definition; Spring MVC; Summary; Chapter 4: Persistence with Hibernate; The Evolution of Database Persistence in Java; EJB, JDO, and JPA; How Hibernate Fits In; JPA Interface Hierarchy; The Audio Manager Domain Model and DAO Structure; An @Entity-Annotated POJO; Simplified DAO Pattern with Generics; The Life Cycle of a JPA Entity; JPA Configuration; Bare-Bones JPA Setup; Spring Integration; Using the LocalContainerEntityManagerFactoryBean; Querying and DAO Strategies; Looking at the JPA Criteria API', 'Using the JPA 2.0 Criteria APIUsing QueryDSL; Integrating QueryDSL with Spring; Summary; Chapter 5: Domain Model Fundamentals; Understanding Associations; Building the Domain Model; Polymorphism in JPA; Convention over Configuration; Managing Entity Identifiers; Using Cascading Options to Establish Data Relationships; Adding Second-Level Caching; Using Polymorphism with Hibernate; Summary; Chapter 6: Transaction Management; The Joy of ACID; Understanding Isolation Levels; Serializable; Repeatable Read; Read Committed; Read Uncommitted; Controlling ACID Reflux; Platform Transaction Management', 'Includes bibliographical references and index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
webdevelopmentwi0000sotn,Web development with Clojure : build bulletproof web apps with less code,S,"['1 online resource (1 volume) :', '""If the usual patchwork of web development tools and languages just isn\'t cutting it for you, you need ""Web Development With Clojure."" Clojure gives you the rich infrastructure of the JVM with the expressive power of a modern functional language. It combines excellent performance with rapid development--and you can exploit these virtues for web app development. With step-by-step examples, you\'ll learn how to harness that power and richness to build modern web applications. Modern web development needs modern tools. ""Web Development With Clojure"" shows you how to apply Clojure programming fundamentals to build real-world solutions. You\'ll develop all the pieces of a full web application in this powerful language. If you already have some familiarity with Clojure, you\'ll learn how to put it to serious practical use. If you\'re new to the language, the book provides just enough Clojure to get down to business. You\'ll learn the full process of web development using Clojure while getting hands-on experience with current tools, libraries, and best practices in the language. You\'ll develop Clojure apps with both the Light Table and Eclipse development environments. Rather than frameworks, Clojure development builds on rich libraries. You\'ll acquire expertise in the popular Ring/Compojure stack, and you\'ll learn to use the Liberator library to quickly develop RESTful services. Plus, you\'ll find out how to use ClojureScript to work in one language on the client and server sides. Throughout the book, you\'ll develop key components of web applications, including multiple approaches to database access. You\'ll create a simple guestbook app and an app to serve resources to users. By the end, you will have developed a rich Picture Gallery web application from conception to packaging and deployment. This book is for anyone interested in taking the next step in web development.What You Need: The latest JVM, Clojure 1.4+, and the Leiningen build tool, as well as an editor such as Emacs, Eclipse, or Light Table.""--Alibris.com', 'Online resource; title from title page (viewed September 1, 2016)', '""Version: P1.0 (July 2016).""', '""Edited by Michael Swaine""--Cover', 'Includes bibliographical references']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
IJOERDEC201530,An efficient Mapreduce scheduling algorithm in hadoop,I,"<span><span style=""font-size:10pt;line-height:115%;font-family:'Times New Roman', serif;"">Hadoop
is a free java based programming framework that supports the processing of
large datasets in a distributed computing environment. Mapreduce technique is
being used in hadoop for processing and generating large datasets with a
parallel distributed algorithm on a cluster. A key benefit of mapreduce is that
it automatically handles failures and hides the complexity of fault tolerance
from the user. Hadoop uses FIFO (FIRST IN FIRST OUT) scheduling algorithm as
default in which the jobs are executed in the order of their arrival. This
method suits well for homogeneous cloud and results in poor performance on
heterogeneous cloud. Later the LATE (Longest Approximate Time to End) algorithm
has been developed which reduces the FIFO's response time by a factor of 2.It
gives better performance in heterogenous environment. LATE algorithm is based
on three principles i) prioritising tasks to speculate ii) selecting fast nodes
to run on iii)capping speculative tasks to prevent thrashing. It takes action
on appropriate slow tasks and it could not compute the remaining time for tasks
correctly and can't find the real slow tasks. Finally a SAMR (Self Adaptive
MapReduce) scheduling algorithm is being introduced which can find slow tasks
dynamically by using the historical information recorded on each node to tune
parameters. SAMR reduces the execution time by 25% when compared with FIFO and
14% when compared with LATE.</span></span>

","['journals_contributions', 'journals']"
IJOERDEC201530_201605,An efficient Mapreduce scheduling algorithm in hadoop,I,"<span><span style=""font-size:10pt;line-height:115%;font-family:'Times New Roman', serif;"">Hadoop
is a free java based programming framework that supports the processing of
large datasets in a distributed computing environment. Mapreduce technique is
being used in hadoop for processing and generating large datasets with a
parallel distributed algorithm on a cluster. A key benefit of mapreduce is that
it automatically handles failures and hides the complexity of fault tolerance
from the user. Hadoop uses FIFO (FIRST IN FIRST OUT) scheduling algorithm as
default in which the jobs are executed in the order of their arrival. This
method suits well for homogeneous cloud and results in poor performance on
heterogeneous cloud. Later the LATE (Longest Approximate Time to End) algorithm
has been developed which reduces the FIFO's response time by a factor of 2.It
gives better performance in heterogenous environment. LATE algorithm is based
on three principles i) prioritising tasks to speculate ii) selecting fast nodes
to run o</span></span><span><span style=""font-size:10pt;line-height:115%;font-family:'Times New Roman', serif;"">n iii)capping speculative tasks to prevent thrashing. It takes action
on appropriate slow tasks and it could not compute the remaining time for tasks
correctly and can't find the real slow tasks. Finally a SAMR (Self Adaptive
MapReduce) scheduling algorithm is being introduced which can find slow tasks
dynamically by using the historical information recorded on each node to tune
parameters. SAMR reduces the execution time by 25% when compared with FIFO and
14% when compared with LATE.</span></span>

","['folkscanomy_academic', 'folkscanomy', 'additional_collections']"
arxiv-1512.07051,The Impact of Technical Domain Expertise on Search Behavior and Task Outcome,Julia Kiseleva,"Domain expertise is regarded as one of the key factors impacting search success: experts are known to write more effective queries, to select the right results on the result page, and to find answers satisfying their information needs. Search transaction logs play the crucial role in the result ranking. Yet despite the variety in expertise levels of users, all prior interactions are treated alike, suggesting that weighting in expertise can improve the ranking for informational tasks. The main aim of this paper is to investigate the impact of high levels of technical domain expertise on both search behavior and task outcome. We conduct an online user study with searchers proficient in programming languages. We focus on Java and Javascript, yet we believe that our study and results are applicable for other expertise-sensitive search tasks. The main findings are three-fold: First, we constructed expertise tests that effectively measure technical domain expertise and correlate well with the self-reported expertise. Second, we showed that there is a clear position bias, but technical domain experts were less affected by position bias. Third, we found that general expertise helped finding the correct answers, but the domain experts were more successful as they managed to detect better answers. Our work is using explicit tests to determine user expertise levels, which is an important step toward fully automatic detection of expertise levels based on interaction behavior. A deeper understanding of the impact of expertise on search behavior and task outcome can enable more effective use of expert behavior in search logs - essentially make everyone search as an expert.","['arxiv', 'journals']"
DTIC_AD1034422,"DTIC AD1034422: LSP 156, Low Power Embedded Analytics: FY15 Line Supported Information, Computation, and Exploitation Program",D,"This report covers the second year of the low-power embedded analytics project, a three-yearuniversity collaboration between Lincoln Laboratory and Professor Arvinds group at the MIT ComputerScience and AI Laboratory (CSAIL). The goal of the project is to design and prototype a novelarchitecture that has wide potential applicability to important applications ranging from back-office bigdataanalytics to fieldable hot-spot systems providing storage-processing-communication services for offgridsensors. Speed and power efficiency are the key metrics.Current state-of-the art approaches for big-data aim toward scaling out to many computers to meetprocessing, storage capacity, and access bandwidth requirements. Data is distributed over manycomputers, and complex processing is decomposed into tasks that operate on localized data andaggregated back together. With an emphasis on scalability and cross-platform portability, applications arewritten in high-level languages such as Java. New systems and new algorithms can be put togetherquickly, but not optimal in terms of performance and power efficiency.","['dticarchive', 'additional_collections']"
JCppEditV3.8,JCpp Edit V 3.8,D,"<a href=""https://www.jcppedit.com/"" rel=""nofollow""> JCppEdit</a> is <span style=""color:rgb(84,84,84);font-family:arial, sans-serif;font-size:small;background-color:rgb(255,255,255);"">an Integrated Development Environment (</span><span style=""font-weight:bold;color:rgb(106,106,106);font-family:arial, sans-serif;font-size:small;background-color:rgb(255,255,255);"">IDE</span><span style=""color:rgb(84,84,84);font-family:arial, sans-serif;font-size:small;background-color:rgb(255,255,255);"">).</span><span style=""font-size:11pt;line-height:107%;font-family:Calibri, 'sans-serif';""> A multiple programming language IDE that offers you a unique platform to code many programs in a single environment, starting from C, C++, Java to HTML, CSS, JavaScript, XML and Text files. It is a simple IDE; you don't have to configure this software to write code in any programming language, just install and start working. JCppEdit v3.8 has an innovative design and excellent set of IDE tools, specially designed for individuals, learning programming.  </span>","['opensource_media', 'community']"
NASA_NTRS_Archive_20160000935,NASA Technical Reports Server (NTRS) 20160000935: Environment Modeling Using Runtime Values for JPF-Android,N,"Software applications are developed to be executed in a specific environment. This environment includes external native libraries to add functionality to the application and drivers to fire the application execution. For testing and verification, the environment of an application is simplified abstracted using models or stubs. Empty stubs, returning default values, are simple to generate automatically, but they do not perform well when the application expects specific return values. Symbolic execution is used to find input parameters for drivers and return values for library stubs, but it struggles to detect the values of complex objects. In this work-in-progress paper, we explore an approach to generate drivers and stubs based on values collected during runtime instead of using default values. Entry-points and methods that need to be modeled are instrumented to log their parameters and return values. The instrumented applications are then executed using a driver and instrumented libraries. The values collected during runtime are used to generate driver and stub values on- the-fly that improve coverage during verification by enabling the execution of code that previously crashed or was missed. We are implementing this approach to improve the environment model of JPF-Android, our model checking and analysis tool for Android applications.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1511.01874,Abstraction Refinement Guided by a Learnt Probabilistic Model,Radu Grigore,"The core challenge in designing an effective static program analysis is to find a good program abstraction -- one that retains only details relevant to a given query. In this paper, we present a new approach for automatically finding such an abstraction. Our approach uses a pessimistic strategy, which can optionally use guidance from a probabilistic model. Our approach applies to parametric static analyses implemented in Datalog, and is based on counterexample-guided abstraction refinement. For each untried abstraction, our probabilistic model provides a probability of success, while the size of the abstraction provides an estimate of its cost in terms of analysis time. Combining these two metrics, probability and cost, our refinement algorithm picks an optimal abstraction. Our probabilistic model is a variant of the Erdos-Renyi random graph model, and it is tunable by what we call hyperparameters. We present a method to learn good values for these hyperparameters, by observing past runs of the analysis on an existing codebase. We evaluate our approach on an object sensitive pointer analysis for Java programs, with two client analyses (PolySite and Downcast).","['arxiv', 'journals']"
arxiv-1511.00511,A Formal Model for Direct-style Asynchronous Observables,Philipp Haller,"Languages like F#, C#, and recently also Scala, provide ""Async"" programming models which aim to make asynchronous programming easier by avoiding an inversion of control that is inherent in callback-based programming models. This paper presents a novel approach to integrate the Async model with observable streams of the Reactive Extensions model. Reactive Extensions are best-known from the .NET platform, and widely-used implementations of its programming model exist also for Java, Ruby, and other languages. This paper contributes a formalization of the unified ""Reactive Async"" model in the context of an object-based core calculus. Our formal model captures the essence of the protocol of asynchronous observables using a heap evolution property. We prove a subject reduction theorem; the theorem implies that reduction preserves the heap evolution property. Thus, for well-typed programs our calculus ensures the protocol of asynchronous observables.","['arxiv', 'journals']"
arxiv-1510.07864,Dignit\'e - DIGital Network Information & Traces Extraction,Thomas Marcel Ender,"Web-based criminality like counterfeiting uses web applications which are hosted on web servers. Those servers contain a lot of information which can be used to identify the owner and other connected persons like hosters, shipping partners, money mules and more. These pieces of information reveal insights on the owner or provider of a fraud website, thus we can call them traces. These traces can then be used by the police, law enforcement authorities or the legal representatives of the victim. In our project 2 we had identified a vast range of possible traces. We had also considered their information content and existing limitations. During our Bachelor thesis, we have selected several traces and started the implementation of the API with its underlying library. After the successful implementation of the selected traces, we have created a graphical user interface to allow the use of our solution without using a command-line interface. To do so, we have learned to use the Scala Programming Language and its integration with Java code. The graphical user interface of our example application is built using Scala Swing, the Scala adoption of the Swing Framework. The test cases are defined using ScalaTest with FlatSpec and Matchers and executed using the JUnit Runner.","['arxiv', 'journals']"
DTIC_ADA622512,DTIC ADA622512: Protection of Mission-Critical Applications from Untrusted Execution Environment: Resource Efficient Replication and Migration of Virtual Machines,D,"Continuous replication and live migration of Virtual Machines (VMs) are two vital tools in a virtualized environment, but they are resource-expensive. Continuously replicating a VM's checkpointed state to a backup host maintains high-availability (HA) of the VM despite host failures, but checkpoint replication can generate significant network traffic. This report describes how to replicate VMs for HA using resources efficiently, and to migrate VMs fast, with minimal execution disruption and using resources efficiently.","['dticarchive', 'additional_collections']"
arxiv-1509.07238,Frequency Distribution of Error Messages,D,"Which programming error messages are the most common? We investigate this question, motivated by writing error explanations for novices. We consider large data sets in Python and Java that include both syntax and run-time errors. In both data sets, after grouping essentially identical messages, the error message frequencies empirically resemble Zipf-Mandelbrot distributions. We use a maximum-likelihood approach to fit the distribution parameters. This gives one possible way to contrast languages or compilers quantitatively.","['arxiv', 'journals']"
arxiv-1508.06791,Boosting Java Performance using GPGPUs,James Clarkson,"Heterogeneous programming has started becoming the norm in order to achieve better performance by running portions of code on the most appropriate hardware resource. Currently, significant engineering efforts are undertaken in order to enable existing programming languages to perform heterogeneous execution mainly on GPUs. In this paper we describe Jacc, an experimental framework which allows developers to program GPGPUs directly from Java. By using the Jacc framework, developers have the ability to add GPGPU support into their applications with minimal code refactoring. To simplify the development of GPGPU applications we allow developers to model heterogeneous code using two key abstractions: \textit{tasks}, which encapsulate all the information needed to execute code on a GPGPU; and \textit{task graphs}, which capture the inter-task control-flow of the application. Using this information the Jacc runtime is able to automatically handle data movement and synchronization between the host and the GPGPU; eliminating the need for explicitly managing disparate memory spaces. In order to generate highly parallel GPGPU code, Jacc provides developers with the ability to decorate key aspects of their code using annotations. The compiler, in turn, exploits this information in order to automatically generate code without requiring additional code refactoring. Finally, we demonstrate the advantages of Jacc, both in terms of programmability and performance, by evaluating it against existing Java frameworks. Experimental results show an average performance speedup of 32x and a 4.4x code decrease across eight evaluated benchmarks on a NVIDIA Tesla K20m GPU.","['arxiv', 'journals']"
ProgrammingInHTML5WithJavaScriptAndCSS3TrainingGuide,Programming In HTML 5 With Java Script And CSS 3 Training Guide,m,html5 css3 java script<br />,"['opensource', 'community']"
arxiv-1508.04753,Cold Object Identification in the Java Virtual Machine,Kim T. Briggs,"Many Java applications instantiate objects within the Java heap that are persistent but seldom if ever referenced by the application. Examples include strings, such as error messages, and collections of value objects that are preloaded for fast access but they may include objects that are seldom referenced. This paper describes a stack-based framework for detecting these ""cold"" objects at runtime, with a view to marshaling and sequestering them in designated regions of the heap where they may be preferentially paged out to a backing store, thereby freeing physical memory pages for occupation by more active objects. Furthermore, we evaluate the correctness and efficiency of stack-based approach with an Access Barrier. The experimental results from a series of SPECjvm2008 benchmarks are presented.","['arxiv', 'journals']"
arxiv-1508.03837,Incorporating User Interaction into Imperative Languages,K,"Adding versatile interactions to imperative programming -- C, Java and Android -- is an essential task. Unfortunately, existing languages provide little constructs for user interaction. We propose a computability-logical approach to user interaction. We illustrate our idea via C^I, an extension of the core C with a new choice statement.","['arxiv', 'journals']"
arxiv-1508.03893,Towards Enabling Overture as a Platform for Formal Notation IDEs,Luís Diogo Couto,"Formal Methods tools will never have as many users as tools for popular programming languages and so the effort spent on constructing Integrated Development Environments (IDEs) will be orders of magnitudes lower than that of programming languages such as Java. This means newcomers to formal methods do not get the same user experience as with their favourite programming IDE. In order to improve this situation it is essential that efforts are combined so it is possible to reuse common features and thus not start from scratch every time. This paper presents the Overture platform where such a reuse philosophy is present. We give an overview of the platform itself as well as the extensibility principles that enable much of the reuse. The paper also contains several examples platform extensions, both in the form of new features and a new IDE supporting a new language.","['arxiv', 'journals']"
DTIC_ADA621888,"DTIC ADA621888: Virtual Machine-level Software Transactional Memory: Principles, Techniques, and Implementation",D,"Software transactional memory (STM) has emerged as an easy to program synchronization abstraction for multicore computer architectures. But performance of current STMframeworks are inferior and heavily influenced by infrastructure resource management (e.g., operating system scheduling, garbage collection, memory allocation). The project's first major result is ByteSTM, a virtual machine-level Java STMimplementation that is built by extending the Jikes RVM. The project modified Jikes RVM's optimizing compiler to transparently support implicit transactions. Being implemented at the VM-level, which enables direct memory accesses, ByteSTMavoids Java garbage collection overhead by manually managing memory for transactional metadata, and provides pluggable support for implementing different STMalgorithms. Three well-known STM algorithms have been integrated into ByteSTM: TL2, NOrec, and RingSTM. The project's experimental studies revealed throughput improvement over other non-VM STMs by 6-70% on micro-benchmarks and by 7-60% on macro-benchmarks. ByteSTM is open-source, publicly available (http://hydravm.org/bytestm/), and is used by the TM community.The project s second major result is a set of possibility and impossibility results on the feasibility of ensuring the Disjoint-Access Parallelism (DAP) property for STM implementations (PODC 15). DAP is one of the most desirable properties for maximizing TM s scalability. The project investigated the possibility and inherent cost of implementing a DAP TM that ensures the two most important properties for maximizing performance of read-dominated workloads, namely, having invisible and wait-free read-only transactions. The project proved that relaxing the Real-Time Order (RTO) is necessary to implement such a TM. This result motivated the project to introduce Witnessable Real-Time Order (WRTO), a weaker variant of RTO that demands enforcing RTO only between directly conflicting transactions.","['dticarchive', 'additional_collections']"
arxiv-1508.00628,How Scale Affects Structure in Java Programs,Cristina V. Lopes,"Many internal software metrics and external quality attributes of Java programs correlate strongly with program size. This knowledge has been used pervasively in quantitative studies of software through practices such as normalization on size metrics. This paper reports size-related super- and sublinear effects that have not been known before. Findings obtained on a very large collection of Java programs -- 30,911 projects hosted at Google Code as of Summer 2011 -- unveils how certain characteristics of programs vary disproportionately with program size, sometimes even non-monotonically. Many of the specific parameters of nonlinear relations are reported. This result gives further insights for the differences of ""programming in the small"" vs. ""programming in the large."" The reported findings carry important consequences for OO software metrics, and software research in general: metrics that have been known to correlate with size can now be properly normalized so that all the information that is left in them is size-independent.","['arxiv', 'journals']"
arxiv-1507.08610,"Fast, Flexible, and Declarative Construction of Abstract Syntax Trees with PEGs",K,"We address a declarative construction of abstract syntax trees with Parsing Expression Grammars. AST operators (constructor, connector, and tagging) are newly defined to specify flexible AST constructions. A new challenge coming with PEGs is the consistency management of ASTs in backtracking and packrat parsing. We make the transaction AST machine in order to perform AST operations in the context of the speculative parsing of PEGs. All the consistency control is automated by the analysis of AST operators. The proposed approach is implemented in the Nez parser, written in Java. The performance study shows that the transactional AST machine requires 25\% approximately more time in CSV, XML, and C grammars.","['arxiv', 'journals']"
NASA_NTRS_Archive_20160006380,NASA Technical Reports Server (NTRS) 20160006380: Software Validation via Model Animation,N,"This paper explores a new approach to validating software implementations that have been produced from formally-verified algorithms. Although visual inspection gives some confidence that the implementations faithfully reflect the formal models, it does not provide complete assurance that the software is correct. The proposed approach, which is based on animation of formal specifications, compares the outputs computed by the software implementations on a given suite of input values to the outputs computed by the formal models on the same inputs, and determines if they are equal up to a given tolerance. The approach is illustrated on a prototype air traffic management system that computes simple kinematic trajectories for aircraft. Proofs for the mathematical models of the system's algorithms are carried out in the Prototype Verification System (PVS). The animation tool PVSio is used to evaluate the formal models on a set of randomly generated test cases. Output values computed by PVSio are compared against output values computed by the actual software. This comparison improves the assurance that the translation from formal models to code is faithful and that, for example, floating point errors do not greatly affect correctness and safety properties.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1507.04047,Parallelization Strategies for Spatial Agent-Based Models,Nuno Fachada,"Agent-based modeling (ABM) is a bottom-up modeling approach, where each entity of the system being modeled is uniquely represented as an independent decision-making agent. Large scale emergent behavior in ABMs is population sensitive. As such, the number of agents in a simulation should be able to reflect the reality of the system being modeled, which can be in the order of millions or billions of individuals in certain domains. A natural solution to reach acceptable scalability in commodity multi-core processors consists of decomposing models such that each component can be independently processed by a different thread in a concurrent manner. In this paper we present a multithreaded Java implementation of the PPHPC ABM, with two goals in mind: 1) compare the performance of this implementation with an existing NetLogo implementation; and, 2) study how different parallelization strategies impact simulation performance on a shared memory architecture. Results show that: 1) model parallelization can yield considerable performance gains; 2) distinct parallelization strategies offer specific trade-offs in terms of performance and simulation reproducibility; and, 3) PPHPC is a valid reference model for comparing distinct implementations or parallelization strategies, from both performance and statistical accuracy perspectives.","['arxiv', 'journals']"
arxiv-1507.03577,JSKETCH: Sketching for Java,Jinseong Jeon,"Sketch-based synthesis, epitomized by the SKETCH tool, lets developers synthesize software starting from a partial program, also called a sketch or template. This paper presents JSKETCH, a tool that brings sketch-based synthesis to Java. JSKETCH's input is a partial Java program that may include holes, which are unknown constants, expression generators, which range over sets of expressions, and class generators, which are partial classes. JSKETCH then translates the synthesis problem into a SKETCH problem; this translation is complex because SKETCH is not object-oriented. Finally, JSKETCH synthesizes an executable Java program by interpreting the output of SKETCH.","['arxiv', 'journals']"
NASA_NTRS_Archive_20160001332,NASA Technical Reports Server (NTRS) 20160001332: From Pixels to Planets,N,"The Kepler Mission was launched in 2009 as NASAs first mission capable of finding Earth-size planets in the habitable zone of Sun-like stars. Its telescope consists of a 1.5-m primary mirror and a 0.95-m aperture. The 42 charge-coupled devices in its focal plane are read out every half hour, compressed, and then downlinked monthly. After four years, the second of four reaction wheels failed, ending the original mission. Back on earth, the Science Operations Center developed the Science Pipeline to analyze about 200,000 target stars in Keplers field of view, looking for evidence of periodic dimming suggesting that one or more planets had crossed the face of its host star. The Pipeline comprises several steps, from pixel-level calibration, through noise and artifact removal, to detection of transit-like signals and the construction of a suite of diagnostic tests to guard against false positives. The Kepler Science Pipeline consists of a pipeline infrastructure written in the Java programming language, which marshals data input to and output from MATLAB applications that are executed as external processes. The pipeline modules, which underwent continuous development and refinement even after data started arriving, employ several analytic techniques, many developed for the Kepler Project. Because of the large number of targets, the large amount of data per target and the complexity of the pipeline algorithms, the processing demands are daunting. Some pipeline modules require days to weeks to process all of their targets, even when run on NASA's 128-node Pleiades supercomputer. The software developers are still seeking ways to increase the throughput. To date, the Kepler project has discovered more than 4000 planetary candidates, of which more than 1000 have been independently confirmed or validated to be exoplanets. Funding for this mission is provided by NASAs Science Mission Directorate.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1506.06039,moco: Fast Motion Correction for Calcium Imaging,Alexander Dubbs,"Motion correction is the first in a pipeline of algorithms to analyze calcium imaging videos and extract biologically relevant information, for example the network structure of the neurons therein. Fast motion correction would be especially critical for closed-loop activity triggered stimulation experiments, where accurate detection and targeting of specific cells in necessary. Our algorithm uses a Fourier-transform approach, and its efficiency derives from a combination of judicious downsampling and the accelerated computation of many $L_2$ norms using dynamic programming and two-dimensional, fft-accelerated convolutions. Its accuracy is comparable to that of established community-used algorithms, and it is more stable to large translational motions. It is programmed in Java and is compatible with ImageJ.","['arxiv', 'journals']"
arxiv-1506.05270,jUCM: Universal Class Morphing (position paper),Aggelos Biboudis,"We extend prior work on class-morphing to provide a more expressive pattern-based compile-time reflection language. Our MorphJ language offers a disciplined form of metaprogramming that produces types by statically iterating over and pattern-matching on fields and methods of other types. We expand such capabilities with ""universal morphing"", which also allows pattern-matching over types (e.g., all classes nested in another, all supertypes of a class) while maintaining modular type safety for our meta-programs. We present informal examples of the functionality and discuss a design for adding universal morphing to Java.","['arxiv', 'journals']"
arxiv-1506.02369,Automated Synthesis of Distributed Controllers,A,"Synthesis is a particularly challenging problem for concurrent programs. At the same time it is a very promising approach, since concurrent programs are difficult to get right, or to analyze with traditional verification techniques. This paper gives an introduction to distributed synthesis in the setting of Mazurkiewicz traces, and its applications to decentralized runtime monitoring. 1 Context Modern computing systems are increasingly distributed and heterogeneous. Software needs to be able to exploit these advances, providing means for applications to be more performant. Traditional concurrent programming paradigms, as in Java, are based on threads, shared-memory, and locking mechanisms that guard access to common data. More recent paradigms like the reactive programming model of Erlang [4] and Scala [35,36] replace shared memory by asynchronous message passing, where sending a message is non-blocking. In all these concurrent frameworks, writing reliable software is a serious challenge. Programmers tend to think about code mostly in a sequential way, and it is hard to grasp all possible schedulings of events in a concurrent execution. For similar reasons, verification and analysis of concurrent programs is a difficult task. Testing, which is still the main method for error detection in software, has low coverage for concurrent programs. The reason is that bugs in such programs are difficult to reproduce: they may happen under very specific thread schedules and the likelihood of taking such corner-case schedules is very low. Automated verification, such as model-checking and other traditional exploration techniques, can handle very limited instances of concurrent programs, mostly because of the very large number of possible states and of possible interleavings of executions. Formal analysis of programs requires as a prerequisite a clean mathematical model for programs. Verification of sequential programs starts usually with an abstraction step -- reducing the value domains of variables to finite domains, viewing conditional branching as non-determinism, etc. Another major simplification consists in disallowing recursion. This leads to a very robust computational model, namely finite-state automata and regular languages. Regular languages of words (and trees) are particularly well understood notions. The deep connections between logic and automata revealed by the foundational work of B\""uchi, Rabin, and others, are the main ingredients in automata-based verification .","['arxiv', 'journals']"
DTIC_ADA625741,"DTIC ADA625741: Vulnerabilities in Bytecode Removed by Analysis, Nuanced Confinement and Diversification (VIBRANCE)",D,"The VIBRANCE tool starts with a vulnerable Java application and automatically hardens it against SQL injection, OS command injection, file path traversal, numeric errors, denial of service, and other attacks. For a large class of attacks, the protection added by VIBRANCE blocks the attacks and safely continues execution.","['dticarchive', 'additional_collections']"
DTIC_ADA633242,DTIC ADA633242: Investigating the Implementation of Knowledge Representation in the COMBATXXI System,D,"Combat models and simulations aim to find a balance between complexity and simplicity : Both oversimplification and too much detail can lead to erroneous findings. In simulations that require representation of human behavior, modelers rely on prior scripting to find the balance. However, this technique cannot depict dynamic behavior during the simulation run. This inadequate representation of entity behavior can cause misleading or incomplete results. This thesis investigates the implementation of knowledge representation in combat models in order to enhance entity behavior. The new method does not try to include more details in the model than the scripting method, but it tries to enhance the entity decision making to create more realistic outcomes. A knowledge base along with reasoning capabilities was linked to a combat model to mimic the memory and the brain of an entity. To demonstrate the feasibility of this approach, an ontology development tool called Protege was linked to a combat model called COMBATXXI . Besides achieving dynamic behavior, the new method has other advantages over previous approaches such as better separation of specification and implementation, loosely - coupled components to allow code reuse, use of well - established reasoners for free, and exploitation of partially - sensed infused information","['dticarchive', 'additional_collections']"
arxiv-1505.06003,Opportunities for a Truffle-based Golo Interpreter,Julien Ponge,"Golo is a simple dynamically-typed language for the Java Virtual Machine. Initially implemented as a ahead-of-time compiler to JVM bytecode, it leverages invokedy-namic and JSR 292 method handles to implement a reasonably efficient runtime. Truffle is emerging as a framework for building interpreters for JVM languages with self-specializing AST nodes. Combined with the Graal compiler, Truffle offers a simple path towards writing efficient interpreters while keeping the engineering efforts balanced. The Golo project is interested in experimenting with a Truffle interpreter in the future, as it would provides interesting comparison elements between invokedynamic versus Truffle for building a language runtime.","['arxiv', 'journals']"
arxiv-1505.02100,FPGA-Based Bandwidth Selection for Kernel Density Estimation Using High Level Synthesis Approach,Artur Gramacki,"FPGA technology can offer significantly hi\-gher performance at much lower power consumption than is available from CPUs and GPUs in many computational problems. Unfortunately, programming for FPGA (using ha\-rdware description languages, HDL) is a difficult and not-trivial task and is not intuitive for C/C++/Java programmers. To bring the gap between programming effectiveness and difficulty the High Level Synthesis (HLS) approach is promoting by main FPGA vendors. Nowadays, time-intensive calculations are mainly performed on GPU/CPU architectures, but can also be successfully performed using HLS approach. In the paper we implement a bandwidth selection algorithm for kernel density estimation (KDE) using HLS and show techniques which were used to optimize the final FPGA implementation. We are also going to show that FPGA speedups, comparing to highly optimized CPU and GPU implementations, are quite substantial. Moreover, power consumption for FPGA devices is usually much less than typical power consumption of the present CPUs and GPUs.","['arxiv', 'journals']"
NASA_NTRS_Archive_20150011044,NASA Technical Reports Server (NTRS) 20150011044: CA3 Technical Integration,N,No abstract available,"['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20160007330,NASA Technical Reports Server (NTRS) 20160007330: DAIDALUS: Detect &amp; Avoid Alerting Logic for Unmanned Systems,N,No abstract available,"['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1504.04971,Impact assessment for vulnerabilities in open-source software libraries,Henrik Plate,"Software applications integrate more and more open-source software (OSS) to benefit from code reuse. As a drawback, each vulnerability discovered in bundled OSS potentially affects the application. Upon the disclosure of every new vulnerability, the application vendor has to decide whether it is exploitable in his particular usage context, hence, whether users require an urgent application patch containing a non-vulnerable version of the OSS. Current decision making is mostly based on high-level vulnerability descriptions and expert knowledge, thus, effort intense and error prone. This paper proposes a pragmatic approach to facilitate the impact assessment, describes a proof-of-concept for Java, and examines one example vulnerability as case study. The approach is independent from specific kinds of vulnerabilities or programming languages and can deliver immediate results.","['arxiv', 'journals']"
arxiv-1504.01842,Formal Certification of Android Bytecode,Hendra Gunadi,"Android is an operating system that has been used in a majority of mobile devices. Each application in Android runs in an instance of the Dalvik virtual machine, which is a register-based virtual machine (VM). Most applications for Android are developed using Java, compiled to Java bytecode and then translated to DEX bytecode using the dx tool in the Android SDK. In this work, we aim to develop a type-based method for certifying non-interference properties of DEX bytecode, following a methodology that has been developed for Java bytecode certification by Barthe et al. To this end, we develop a formal operational semantics of the Dalvik VM, a type system for DEX bytecode, and prove the soundness of the type system with respect to a notion of non-interference. We then study the translation process from Java bytecode to DEX bytecode, as implemented in the dx tool in the Android SDK. We show that an abstracted version of the translation from Java bytecode to DEX bytecode preserves the non-interference property. More precisely, we show that if the Java bytecode is typable in Barthe et al's type system (which guarantees non-interference) then its translation is typable in our type system. This result opens up the possibility to leverage existing bytecode verifiers for Java to certify non-interference properties of Android bytecode.","['arxiv', 'journals']"
arxiv-1503.05317,Model Checking AORTA: Verification of Organization-Aware Agents,A,"As agent systems grow larger and more complex, there is an increasing need to formally verify them. Furthermore, it is often suggested that complex systems can be regulated using organizational models, imposing constraints on the agents in the systems. Agents that can understand the organizational model and constraints in a system is said to be organization-aware. This paper is concerned with verification of organization-aware agents. We show how agents using AORTA, a framework for making agents organization-aware, can be formally verified using an extended version of the Agent Java PathFinder (AJPF), a model checking system designed specifically for agent programming languages. We integrate AORTA with the Agent Infrastructure Layer (AIL), which is an intermediate layer on top of which APLs can be implemented, and use our extension of AJPF to verify a system of agents aiming to write a paper together by using an organization for coordination.","['arxiv', 'journals']"
arxiv-1503.04608,Variability Abstractions: Trading Precision for Speed in Family-Based Analyses (Extended Version),Aleksandar S. Dimovski,"Family-based (lifted) data-flow analysis for Software Product Lines (SPLs) is capable of analyzing all valid products (variants) without generating any of them explicitly. It takes as input only the common code base, which encodes all variants of a SPL, and produces analysis results corresponding to all variants. However, the computational cost of the lifted analysis still depends inherently on the number of variants (which is exponential in the number of features, in the worst case). For a large number of features, the lifted analysis may be too costly or even infeasible. In this paper, we introduce variability abstractions defined as Galois connections and use abstract interpretation as a formal method for the calculational-based derivation of approximate (abstracted) lifted analyses of SPL programs, which are sound by construction. Moreover, given an abstraction we define a syntactic transformation that translates any SPL program into an abstracted version of it, such that the analysis of the abstracted SPL coincides with the corresponding abstracted analysis of the original SPL. We implement the transformation in a tool, reconfigurator that works on Object-Oriented Java program families, and evaluate the practicality of this approach on three Java SPL benchmarks.","['arxiv', 'journals']"
arxiv-1503.04911,Typing Classes and Mixins with Intersection Types,Jan Bessai,"We study an assignment system of intersection types for a lambda-calculus with records and a record-merge operator, where types are preserved both under subject reduction and expansion. The calculus is expressive enough to naturally represent mixins as functions over recursively defined classes, whose fixed points, the objects, are recursive records. In spite of the double recursion that is involved in their definition, classes and mixins can be meaningfully typed without resorting to neither recursive nor F-bounded polymorphic types. We then adapt mixin construct and composition to Java and C#, relying solely on existing features in such a way that the resulting code remains typable in the respective type systems. We exhibit some example code, and study its typings in the intersection type system via interpretation into the lambda-calculus with records we have proposed.","['arxiv', 'journals']"
DTIC_ADA620600,DTIC ADA620600: Mobile Konami Codes: Analysis of Android Malware Services Utilizing Sensor and Resource-Based State Changes,D,"Society s pervasive use of mobile technologies has provided an incentive for the amount and kinds of mobile malware to steadily increase since 2004. Challenges in static analysis of mobile malware have stimulated the need for emulated, dynamic analysis techniques. Unfortunately, emulating mobile devices is nontrivial because of the different types of hardware features onboard (e.g., sensors) and the manner in which users interact with their devices as compared to traditional computing platforms. To test this, our research focuses on the enumeration and comparison of static attributes and event values from sensors and dynamic resources on Android runtime environments, both from physical devices and online analysis services. Utilizing our results from enumeration, we develop two different Android applications that are successful in detecting and evading the emulated environments utilized by those mobile analysis services during execution. When ran on physical devices, the same applications successfully perform a pseudo-malware action and send device identifying information to our server for logging.","['dticarchive', 'additional_collections']"
DTIC_ADA620627,DTIC ADA620627: Standardization of Software Application Development and Governance,D,"A number of Defense Department initiatives focus on how to engineer better systems that directly influence software architecture, including Open Architecture, Enterprise Architecture, and Joint Information Enterprise. Additionally, the Department of Defense (DOD) mandates moving applications to consolidated datacenters and cloud computing. When examined from an application development perspective, the DOD lacks a common approach for incorporating new technology or developing software-intensive systems that will be included in the proposed consolidated datacenters and cloud computing. This thesis will outline an architectural framework incorporating a common approach for software development based on a standard approach. The result of this research will be a high-level guide that defines a methodology that incorporates architectural frameworks, and aligns with high-level policies and guidance to ensure more commonality and structure for software programs. This thesis shows how a common methodology incorporating commercial technology into defense systems can establish a common framework for application and technology development. This is not a simple problem to solve, but, if not addressed, DOD application development will fall further behind the commercial market. Without clear direction to the acquisition community on how to build applications, there will be a lack of alignment between strategic goals and future technology implementation.","['dticarchive', 'additional_collections']"
ERIC_ED562096,"ERIC ED562096: Proceedings of the International Association for Development of the Information Society (IADIS) International Conference on Mobile Learning (11th, Madeira, Portugal, March 14-16, 2015)",E,"These proceedings contain the papers and posters of the 11th International Conference on Mobile Learning 2015, which was organised by the International Association for Development of the Information Society, in Madeira, Portugal, March 14-16, 2015. The Mobile Learning 2015 Conference seeks to provide a forum for the presentation and discussion of mobile learning research which illustrate developments in the field. The following are included in these proceedings: (1) Evolution or Revolution? Diffusion and Adaptation of (Smart) Mobile Phones among Children and Adolescents (Gitte Bang Stald); (2) Wearables and the ""Anatomy"" of Information: Biodata, Privacy, and Ethics (Amber Hutchins and Jake McNeill); (3) Scaffolding Java Programming on a Mobile Phone for Novice Learners (Chao Mbogo, Edwin Blake and Hussein Suleman); (4) Implementation of an Intelligent Tutorial System for Socioenvironmental Management Projects (Gil Vera, Víctor Daniel and Gabriel Awad); (5) Patterns of Mobile Technology Use in Teaching: A Pilot Study (Tami Seifert); (6) Developing Students' Professional Digital Identity (Thomas Cochrane and Laurent Antonczak); (7) Impact of Contextuality on Mobile Learning Acceptance: An Empirical Study Based on Language Learning App (Stephan Böhm and Georges Philip Constantine); (8) Do Mobile Learning Devices Enhance Learning in Higher Education Anatomy Classrooms? (Kate Wilkinson and Phil Barter); (9) It's Not Just the Pedagogy: Challenges in Scaling Mobile Learning Applications into Institution-Wide Learning Technologies (Peter Bird and Mark Stubbs); (10) Mobile Learning and Teacher Education: Researching MLEARN Pilot Development (Don Passey and Joana Zozimo); (11) Mobile-Assisted Language Learning: Student Attitudes to Using Smartphones to Learn English Vocabulary (Neil Davie and Tobias Hilber); (12) Active Students in Webinars (Line Kolås, Hugo Nordseth and Jørgen Sørlie Yri); (13) Expanding the Media Mix in Statistics Education through Platform-Independent and Interactive Learning Objects (Hans-Joachim Mittag); (14) Research on Mobile Learning Activities Applying Tablets (Eugenijus Kurilovas, Anita Juskeviciene and Virginija Bireniene); (15) Learner Centered Experiences with Flipped Classroom and Mobile Online Webinars in Distance Education Program (Lisbeth Amhag); (16) Walk Like an Egyptian: A Serious, Pervasive Mobile Game for Tourism (Fatema Mohsen Gabr and Slim Abdennadher); (17) Educational Materials for Mobile Learning (Kosuke Kaneko, Yoshihiro Okada, Motofumi Yoshida, Hitoshi Inoue and Naomi Fujimura); (18) Boosting up JSL Learners' Outside-Class Learning Time with Learning Log System (Noriko Uosaki, Hiroaki Ogata and Kousuke Mouri); (19) An Integrated Learning Management System for Location-Based Mobile Learning (Christian Sailer, Peter Kiefer and Martin Raubal); (20) The Influence of Affordances on Learner Preferences in Mobile Language Learning (Maria Uther and Adrian Banks); (21) Microlearning as Innovative Pedagogy for Mobile Learning in MOOC (Despina Kamilali and Chryssa Sofianopoulou); (22) Cross-Platform User Interface of e-Learning Applications (Michal Stoces, Jan Masner, Jan Jarolímek, Pavel Šimek, Jirí Vanek and Miloš Ulman); (23) Technology Trends in Mobile Computer Supported Collaborative Learning in Elementary Education from 2009 to 2014 (Mia Carapina and Ivica Boticki); (24) Challenges of Using Learning Analytics Techniques to Support Mobile Learning (Marco Arrigo, Giovanni Fulantelli and Davide Taibi); (25) Effectiveness and Utility of Terminal Tablet as Electric Textbooks for Nursing Practicum (Yumiko Nakamura, Kaori Fukayama and Yukie Majima); (26) A Study on the Process of Development of Collective Intelligence for Utilization of Unused Space of Abandoned Schools (Uk Kim and Junyoung Yang); (27) Implementation of an Adaptive Learning System Using a Bayesian Network (Keiji Yasuda, Hiroyuki Kawashima, Yoko Hata and Hiroaki Kimura); (28) Mathematics and Mobile Learning (Fayez Sayed); and (29) A Framework to Support Global Corporate M-Learning: Learner Initiative and Technology Acceptance across Cultures (Wendy Farrell). An author index is provided. (Individual papers contain references.)","['ericarchive', 'additional_collections']"
ERIC_ED562428,ERIC ED562428: Scaffolding Java Programming on a Mobile Phone for Novice Learners,E,"The ubiquity of mobile phones provides an opportunity to use them as a resource for construction of programs beyond the classroom. However, limitations of mobile phones impede their use as typical programming environments. This research proposes that programming environments on mobile phones should include scaffolding techniques specifically designed for mobile phones, and designed based on learners' needs. This paper discusses the effectiveness of theoretically-derived scaffolding techniques to construct Java programs on a mobile phone. The results indicate that even though scaffolding techniques could support learners to program on a mobile phone, further modifications of the designed scaffolding techniques may be necessary in order to more effectively support programming on a mobile phone. [For complete proceedings, see ED562096.]","['ericarchive', 'additional_collections']"
arxiv-1502.06286,"StarL: Towards a Unified Framework for Programming, Simulating and Verifying Distributed Robotic Systems",Yixiao Lin,"We developed StarL as a framework for programming, simulating, and verifying distributed systems that interacts with physical processes. StarL framework has (a) a collection of distributed primitives for coordination, such as mutual exclusion, registration and geocast that can be used to build sophisticated applications, (b) theory libraries for verifying StarL applications in the PVS theorem prover, and (c) an execution environment that can be used to deploy the applications on hardware or to execute them in a discrete event simulator. The primitives have (i) abstract, nondeterministic specifications in terms of invariants, and assume-guarantee style progress properties, (ii) implementations in Java/Android that always satisfy the invariants and attempt progress using best effort strategies. The PVS theories specify the invariant and progress properties of the primitives, and have to be appropriately instantiated and composed with the application's state machine to prove properties about the application. We have built two execution environments: one for deploying applications on Android/iRobot Create platform and a second one for simulating large instantiations of the applications in a discrete even simulator. The capabilities are illustrated with a StarL application for vehicle to vehicle coordination in a automatic intersection that uses primitives for point-to-point motion, mutual exclusion, and registration.","['arxiv', 'journals']"
the-java-language-specification-java-se-8-edition,"The Java Language Specification, Java SE 8 Edition",O,"The Java Language Specification, Java SE 8 Edition <br />",opensource
arxiv-1502.01410,"A Study of ""Wheat"" and ""Chaff"" in Source Code",Martin Velez,"Natural language is robust against noise. The meaning of many sentences survives the loss of words, sometimes many of them. Some words in a sentence, however, cannot be lost without changing the meaning of the sentence. We call these words ""wheat"" and the rest ""chaff."" The word ""not"" in the sentence ""I do not like rain"" is wheat and ""do"" is chaff. For human understanding of the purpose and behavior of source code, we hypothesize that the same holds. To quantify the extent to which we can separate code into ""wheat"" and ""chaff"", we study a large (100M LOC), diverse corpus of real-world projects in Java. Since methods represent natural, likely distinct units of code, we use the, approximately, 9M Java methods in the corpus to approximate a universe of ""sentences."" We ""thresh"", or lex, functions, then ""winnow"" them to extract their wheat by computing the minimal distinguishing subset (MINSET). Our results confirm that programs contain much chaff. On average, MINSETS have 1.56 words (none exceeds 6) and comprise 4% of their methods. Beyond its intrinsic scientific interest, our work offers the first quantitative evidence for recent promising work on keyword-based programming and insight into how to develop powerful, alternative programming systems.","['arxiv', 'journals']"
arxiv-1501.05338,Semantics for Locking Specifications,Michael Ernst,"To prevent concurrency errors, programmers need to obey a locking discipline. Annotations that specify that discipline, such as Java's @GuardedBy, are already widely used. Unfortunately, their semantics is expressed informally and is consequently ambiguous. This article highlights such ambiguities and formalizes the semantics of @GuardedBy in two alternative ways, building on an operational semantics for a small concurrent fragment of a Java-like language. It also identifies when such annotations are actual guarantees against data races. Our work aids in understanding the annotations and supports the development of sound formal tools that verify or infer such annotations.","['arxiv', 'journals']"
arxiv-1501.01678,"LeoTask: a fast, flexible and reliable framework for computational research",Changwang Zhang,"LeoTask is a Java library for computation-intensive and time-consuming research tasks. It automatically executes tasks in parallel on multiple CPU cores on a computing facility. It uses a configuration file to enable automatic exploration of parameter space and flexible aggregation of results, and therefore allows researchers to focus on programming the key logic of a computing task. It also supports reliable recovery from interruptions, dynamic and cloneable networks, and integration with the plotting software Gnuplot.","['arxiv', 'journals']"
ERIC_ED593835,"ERIC ED593835: Strange, but True? Object-Oriented Programming Is Best Taught, and Learnt, While Sitting on the Floor",E,"There is a perception amongst some of those learning computer programming that the principles of object-oriented programming (where behaviour is often encapsulated across multiple class files) can be difficult to grasp, especially when taught through a traditional, didactic ""talk-and-chalk"" method or in a lecture-based environment. We propose a non-traditional teaching method, developed for a government-funded teaching training project delivered by Queen's University, we call it ""bigCode."" In this scenario, learners are provided with many printed, poster-sized fragments of code (in this case either Java or C#). The learners sit on the floor in groups and assemble these fragments into the many classes which make-up an object-oriented program. Early trials indicate that ""bigCode"" is an effective method for teaching object-orientation. The requirement to physically organise the code fragments imitates closely the thought processes of a good software developer when developing object-oriented code. Furthermore, in addition to teaching the principles involved in object-orientation, ""bigCode"" is also an extremely useful technique for teaching learners the organisation and structure of individual classes in Java or C# (as well as the organisation of procedural code). The mechanics of organising fragments of code into complete, correct computer programs give the users first-hand practice of this important skill, and as a result they subsequently find it much easier to develop well-structured code on a computer. Yet, open questions remain. Is ""bigCode"" successful only because we have unknowingly targeted predominantly kinesthetic learners? Is ""bigCode"" also an effective teaching approach for other forms of learners, such as visual learners? How scalable is ""bigCode"": in its current form can it be used with large class sizes, or outside the classroom?","['ericarchive', 'additional_collections']"
ERIC_EJ1075126,ERIC EJ1075126: Study on Design and Implementation of JAVA Programming Procedural Assessment Standard,E,"The traditional JAVA course examination is just a list of questions from which we cannot know students' skills of programming. According to the eight abilities in curriculum objectives, we designed an assessment standard of JAVA programming course that is based on employment orientation and apply it to practical teaching to check the teaching efficiency of this assessment standard itself. Procedural assessment standard avoids disadvantages of traditional final examination. It puts emphasis on quality control of learning process. Through tracing and comparison of students during the last three years, procedural assessment has realized the unification of testing contents and curriculum objectives, improved students' abilities and laid the foundation of employment for the future.","['ericarchive', 'additional_collections']"
ERIC_EJ1081237,ERIC EJ1081237: Pointer Animation Implementation at Development of Multimedia Learning of Java Programming,E,"This research represents the development research using the references of previous research results related to the development of interactive multimedia learning (learner controlled), specially about the effectiveness and efficiency of multimedia learning of a content that developed by pointer animation implementation showing the content in harmony with relevant voice narration (having the character of affirming/equipping/explaining). Content to be learnt is to have a dynamic type (principle) that is Java Programming. Java Programming is selected considering the content complexity level which is high enough. The development method follows the method of development of multimedia learning with the instructional strategy according to Merrill in Component Display Theory (CDT), animation principle in multimedia format from Mayer, and accommodating the learning style (visual/verbal) of the learner. The result of development in the form of modules of interactive multimedia learning (learner controlled) of Java Programming with the pointer animation. With those modules, the learner is expected to be more motivated to learn self-supportingly, circumstantial and recurring, so that learner ability in comprehending concepts of Java Programming and applying it in solving problem can be reached.","['ericarchive', 'additional_collections']"
InfocomCabinetMiscZIL,Infocom Cabinet: Misc: ZIL,I,"Infocom Cabinet: Misc: ZIL

A collection of digitized scans from a large cache of documents related to the game publisher Infocom, Inc. of Cambridge, MA. Assembled by Steven Meretzky of Infocom.

During his time at Infocom, Steve Meretzky meticulously gathered thousands of pages of notes, journals, maps, memos, forms and other printable materials related to all aspects of Infocom, and kept them in his basement for decades. During the GET LAMP production, Jason Scott scanned in roughly 9,000 pages of these documents across a number of months, borrowing the materials from Steve and scanning them as quickly as possible, at around 600dpi. From these scans, a portion was used in the GET LAMP movie to illustrate various scenes and descriptions by interviewees.

This item contains instructions for the ZIL ""Zork Implementation Language"" programming environment.","['infocomcabinet', 'softwarehistory']"
apachekafkacookb0000minn,"Apache kafka cookbook : over 50 hands-on recipes to efficiently administer, maintain, and use your Apache Kafka installation ",M,"['1 online resource (111 pages)', 'Includes index', 'Print version record', 'Cover; Copyright; Credits; About the Author; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Initiating Kafka; Introduction; Setting up multiple Kafka brokers; Creating topics; Sending some messages from the console; Consuming from the console; Chapter 2: Configuring Brokers; Introduction; Configuring the basic settings; Configuring threads and performance; Configuring the log settings; Configuring the replica settings; Configuring the ZooKeeper settings; Configuring other miscellaneous parameters; Chapter 3: Configuring a Producer and Consumer; Introduction', 'Configuring the basic settings for producerConfiguring the thread and performance for producer; Configuring the basic settings for consumer; Configuring the thread and performance for consumer; Configuring the log settings for consumer; Configuring the ZooKeeper settings for consumer; Other configurations for consumer; Chapter 4: Managing Kafka; Introduction; Consumer offset checker; Understanding dump log segments; Exporting the ZooKeeper offsets; Importing ZooKeeper offsets; Using GetOffsetShell; Using the JMX tool; Using the Kafka migration tool; The MirrorMaker tool; Replay Log Producer', 'Simple Consumer ShellState Change Log Merger; Updating offsets in Zookeeper; Verifying consumer rebalance; Chapter 5: Integrating Kafka with Java; Introduction; Writing a simple producer; Writing a simple consumer; Writing a high-level consumer; Writing a producer with message partitioning; Multithreaded consumers in Kafka; Chapter 6: Operating Kafka; Introduction; Adding and removing topics; Modifying topics; Implementing a graceful shutdown; Balancing leadership; Mirroring data between Kafka clusters; Expanding clusters; Increasing the replication factor; Checking the consumer position', 'Decommissioning brokersChapter 7: Integrating Kafka with Third-Party Platforms; Introduction; Using Flume; Using Gobblin; Using Logstash; Configuring Kafka for real-time; Integrating Spark with Kafka; Integrating Storm with Kafka; Integrating Elasticsearch with Kafka; Integrating SolrCloud with Kafka; Chapter 8: Monitoring Kafka; Introduction; Monitoring server stats; Monitoring producer stats; Monitoring consumer stats; Connecting to Graphite; Monitoring with Ganglia; Index']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningspring0000cali,Beginning Spring ,C,"['1 online resource', ""This is the complete beginner's guide to Java's most popular framework, Spring. Written with an eye toward real-world enterprises, the book covers all aspects of application development within the Spring Framework. Spring provides the exact toolset required to build an enterprise application, and has become the standard within the field. It covers Spring 4.0, which contains support for Java 8 and Java EE 7. R. Topics include: dependency injection and inversion of control; unit testing Spring enabled web applications; data acccess using Spring JDBC and ORM support along with transaction management; building web applications and RESTful web services with Spring MVC; securing web applications using Spring security; Spring expression language with its extensive features; aspect oriented programming; facilities provided by Spring AOP; caching with 3rd party cache providers' support; best of the breed: Spring 4.0. --"", '""Wrox programmer to programmer.""', 'Vendor-supplied metadata', 'POJO programming model, lightweight containers, and inversion of control -- Dependency injection with Spring -- Building web applications using Spring MVC -- JDBC data access with Spring -- Data access with JPA using Spring -- Managing transactions with Spring -- Test-driven development with Spring -- Aspect-oriented programming with Spring -- Spring expression language -- Caching -- RESTful web services with Spring -- Securing web applications with Spring security -- Next stop : Spring 4.0']","['printdisabled', 'internetarchivebooks']"
clojurehighperfo0000kuma,Clojure high performance programming : become an expert at writing fast and high performant code in Clojure 1.7.0,K,"['1 online resource (1 volume) :', 'Online resource; title from cover page (Safari, viewed October 20, 2015)', 'Includes index', 'Cover; Copyright; Credits; About the Author; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Performance by Design; Use case classification; The user-facing software; Computational and data-processing tasks; A CPU bound computation; A memory bound task; A cache bound task; An input/output bound task; Online transaction processing; Online analytical processing; Batch processing; A structured approach to the performance; The performance vocabulary; Latency; Throughput; Bandwidth; Baseline and benchmark; Profiling; Performance optimization', 'Concurrency and parallelismResource utilization; Workload; The latency numbers that every programmer should know; Summary; Chapter 2: Clojure Abstractions; Non-numeric scalars and interning; Identity, value, and epochal time model; Variables and mutation; Collection types; Persistent data structures; Constructing lesser-used data structures; Complexity guarantee; O(<7) implies near constant time; The concatenation of persistent data structures; Sequences and laziness; Laziness; Laziness in data structure operations; Constructing lazy sequences; Transducers; Performance characteristics', 'TransientsFast repetition; Performance miscellanea; Disabling assertions in production; Destructuring; Recursion and tail-call optimization (TCO); Premature end of iteration; Multimethods versus protocols; Inlining; Summary; Chapter 3: Leaning on Java; Inspecting the equivalent Java source for Clojure code; Creating a new project; Compiling the Clojure sources into Java bytecode; Decompiling the .class files into Java source; Compiling the Clojure source without locals clearing; Numerics, boxing, and primitives; Arrays; Reflection and type hints; An array of primitives; Primitives', 'Macros and metadataString concatenation; Miscellaneous; Using array/numeric libraries for efficiency; HipHip; primitive-math; Detecting boxed math; Resorting to Java and native code; Proteus -- mutable locals in Clojure; Summary; Chapter 4: Host Performance; The hardware; Processors; Branch prediction; Instruction scheduling; Threads and cores; Memory systems; Cache; Interconnect; Storage and networking; The Java Virtual Machine; The just-in-time compiler; Memory organization; HotSpot heap and garbage collection; Measuring memory (heap/stack) usage; Determining program workload type', ""Tackling memory inefficiencyMeasuring latency with Criterium; Criterium and Leiningen; Summary; Chapter 5: Concurrency; Low-level concurrency; Hardware memory barrier (fence) instructions; Java support and the Clojure equivalent; Atomic updates and state; Atomic updates in Java; Clojure's support for atomic updates; Faster writes with atom striping; Asynchronous agents and state; Asynchrony, queueing, and error handling; Why you should use agents; Nesting; Coordinated transactional ref and state; Ref characteristics; Ref history and in-transaction deref operations""]","['inlibrary', 'printdisabled', 'internetarchivebooks']"
codename-one-developer-guide,Codename One Developer Guide,Shai Almog,"The complete official developer guide for the Codename One open source project. Codename One allows developers to create native mobile apps using Java for all mobile OS's (iOS, Android etc.). It's based on an open source project started at Sun Microsystems back in 2007 and has a large grassroots community behind it.","['folkscanomy_mathematics', 'folkscanomy', 'additional_collections']"
crackingcodingin0000mcdo_k7r4,Cracking the coding interview : 189 programming questions and solutions,M,"['x, 696 pages : 25 cm', 'Now in the 6th edition, the book gives you the interview preparation you need to get the top software developer jobs. This is a deeply technical book and focuses on the software engineering skills to ace your interview. The book includes 189 programming interview questions and answers, as well as other advice', 'Previous edition: 2014', ""1. The interview process. Why? -- How questions are selected -- Timeline and preparation map -- It's all relative -- Frequently asked questions -- 2. Behind the scenes. The Microsoft interview -- The Amazon interview -- The Google interview -- The Apple interview -- The Facebook interview -- The Palantir interview -- 3. Special situations. Experienced candidates -- Testers and SDETs -- Product (and program) managment --Dev lead and managers -- Start-ups -- Acquisitions and acquihires -- For interviewers -- 4. Before the interview. Getting the right experience -- Writing a great resume -- Preparation map -- 5. Behavioral questions. Interview preparation grid -- Know your technical projects -- Responding to behavioral questions -- So, tell me about yourself -- 6. Big O. An analogy -- Time complexity -- Space complexity -- Drop the constraints -- Drop the non-dominant terms -- Multi-part algorithms: add vs. multiply -- Amortized time -- Log N runtimes -- Recursive runtimes -- Examples and exercises -- 7. Technical questions. How to prepare -- What you need to know -- Walking through a problem -- Optimize & Solve Technique # 1: Look for BUD -- Optimize & Solve Technique #2: DIY (Do it yourself) -- Optimize & Solve Technique #3: Simplify and generalize -- Optimize & Solve Technique #4: Base case and build -- Optimize & Solve Technique #5: Data structure brainstorm -- Best conceivable runtime (BCR) -- Handling incorrect answers -- When you've heard a question before -- The 'perfect' language for interviews -- What good coding looks like -- Don't give up! -- 8. The offer and beyond. Handling offers and rejection -- Evaluating the offer -- Negotiation -- On the job -- 9. Interview questions. Data structures: Arrays and strings ; Linked lists ; Stacks and queues ; Trees and graphs -- Concepts and algorithms. Bit manipulation ; Math and logic puzzles ; Object-oriented design ; Recursion and dynamic programming ; System design and scalability ; Sorting and searching ; Testing -- Knowledge based. C and C++ ; Java ; Databases ; Threads and locks ; Additional review problems. Moderate ; Hard -- 10. Solutions. Data structures -- Concepts and algorithms -- Knowledge based -- Additional review problems -- 11. Advanced topics. Useful math -- Topological sort -- Dijkstra's Algorithm -- Hash table collision resolution -- Rabin-Karp substring search -- AVL trees -- Red-black trees -- MapReduce -- Additional studying -- 12. Code library. HashMapList  -- TreeNode (Binary search tree) -- LinkedListNode (Linked list) -- Trie & TrieNode -- 13. Hints. Hints for data structures -- Hints for concepts and algorithms -- Hints for knowledge-based questions -- Hints for assorted review problems -- 14. About the author"", ""1. The interview process. Why? -- How questions are selected -- Timeline and preparation map -- It's all relative -- Frequently asked questions -- 2. Behind the scenes. The Microsoft interview -- The Amazon interview -- The Google interview -- The Apple interview -- The Facebook interview -- The Palantir interview -- 3. Special situations. Experienced candidates -- Testers and SDETs -- Product (and program) managment --Dev lead and managers -- Start-ups -- Acquisitions and acquihires -- For interviewers -- 4. Before the interview. Getting the right experience -- Writing a great resume -- Preparation map -- 5. Behavioral questions. Interview preparation grid -- Know your technical projects -- Responding to behavioral questions -- So, tell me about yourself -- 6. Big O. An analogy -- Time complexity -- Space complexity -- Drop the constraints -- Drop the non-dominant terms -- Multi-part algorithms: add vs. multiply -- Amortized time -- Log N runtimes -- Recursive runtimes -- Examples and exercises -- 7. Technical questions. How to prepare -- What you need to know -- Walking through a problem -- Optimize & Solve Technique # 1: Look for BUD -- Optimize & Solve Technique #2: DIY (Do it yourself) -- Optimize & Solve Technique #3: Simplify and generalize -- Optimize & Solve Technique #4: Base case and build -- Optimize & Solve Technique #5: Data structure brainstorm -- Best conceivable runtime (BCR) -- Handling incorrect answers -- When you've heard a question before -- The 'perfect' language for interviews -- What good coding looks like -- Don't give up! -- 8. The offer and beyond. Handling offers and rejection -- Evaluating the offer -- Negotiation -- On the job -- 9. Interview questions. Data structures: Arrays and strings ; Linked lists ; Stacks and queues ; Trees and graphs -- Concepts and algorithms. Bit manipulation ; Math and logic puzzles ; Object-oriented design ; Recursion and dynamic programming ; System design and scalability ; Sorting and searching ; Testing -- Knowledge based. C and C++ ; Java ; Databases ; Threads and locks ; Additional review problems. Moderate ; Hard -- 10. Solutions. Data structures -- Concepts and algorithms -- Knowledge based -- Additional review problems -- 11. Advanced topics. Useful math -- Topological sort -- Dijkstra's Algorithm -- Hash table collision resolution -- Rabin-Karp substring search -- AVL trees -- Red-black trees -- MapReduce -- Additional studying -- 12. Code library. HashMapList  -- TreeNode (Binary search tree) -- LinkedListNode (Linked list) -- Trie & TrieNode -- 13. Hints. Hints for data structures -- Hints for concepts and algorithms -- Hints for knowledge-based questions -- Hints for assorted review problems -- 14. About the author""]","['inlibrary', 'printdisabled', 'internetarchivebooks']"
cucumbercookbook0000garg,Cucumber cookbook : over 35 hands-on recipes to efficiently master the art of behavior driven development using Cucumber-JVM,G,"['1 online resource (1 volume) :', 'This book is intended for business and development personnel who want to use Cucumber for behavior-driven development and test automation. You will learn how to explore the usage of the Gherkin language to write meaningful and smart feature files; understand scenario, steps, backgrounds, scenario outlines, and data tables; discover the concepts of glue code and step definitions; gain insight into the different types of step definitions, regular expressions, doc strings, data table transformations, and capture groups; master the advanced concepts of implementing tags and hooks; override default Cucumber options and settings along with different output report formats; run Jenkins and Cucumber from terminal while running various Cucumber scenarios in parallel. --', 'Online resource; title from cover (Safari, viewed June 19, 2015)', 'Includes index', '""Quick answers to common problems""--Cover', 'Cover -- Copyright -- Credits -- About the Author -- About the Reviewers -- www.PacktPub.com -- Table of Contents -- Preface -- Chapter 1: Writing Feature Files -- Introduction -- Writing your first Feature file with one Scenario -- Creating Scenarios with different Steps -- Creating a Scenario with the And and But keywords -- Writing a Feature file with multiple Scenarios -- Adding Backgrounds to Feature files -- Sending multiple arguments in Steps -- Using complex data types to store data -- Implementing Scenario Outlines -- Creating a Feature file in a language other than English -- Combining Scenarios, Backgrounds, and Scenario Outlines -- Chapter 2: Creating Step Definitions -- Introduction -- Creating your first Step Definitions file -- Identifying Duplicate and Ambiguous Step Definitions -- Using Regular Expressions to optimize Step Definitions -- Using Optional Capture and Noncapture groups -- Transforming Data Tables to parse the test data -- Implementing data table diffs to compare tables -- Using Doc Strings to parse big data as one chunk -- Combining Doc Strings and Scenario Outlines -- Defining String transformations for better conversions -- Chapter 3: Enabling Fixtures -- Introduction -- Tagging -- ANDing and ORing Tags -- Adding Hooks to Cucumber code -- Tagging the Hooks -- ANDing and ORing tagged Hooks -- Chapter 4: Configuring Cucumber -- Introduction -- Integrating Cucumber with JUnit -- Overriding the Cucumber Options -- Running Strict and Running Dry -- Configuring the Cucumber Console output -- Directing the Cucumber output to a file -- Configuring the naming conventions -- Chapter 5: Running Cucumber -- Introduction -- Integrating Cucumber with Maven -- Running Cucumber from the Terminal -- Overriding Options from the Terminal -- Integrating Cucumber with Jenkins and GitHub -- Running Cucumber test cases in parallel', 'Chapter 6: Building Cucumber Frameworks -- Introduction -- Building a Web Automation framework -- Building a Mobile Automation framework -- Building a REST Automation framework -- Index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
designpatternsea0000unse,"Design patterns : the easy way, w/Java : standard solutions for everyday programming problems",V,"['227 pages : 23 cm', '""Simple code solutions for everyday programming problems; great for: game programming, system analysis, app programming, automation, & database systems.""']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
digitalaudioedit0000jack,Digital audio editing fundamentals,J,"['1 online resource (xxi, 142 pages) :', 'This book is a new media mini-book covering concepts central to digital audio editing using the Audacity 2.1.1 open source software package which also apply to all of the professional audio editing packages. The book builds upon the foundational concepts of MIDI, synthesis (artificially created digital audio), and sampled waveforms (analog audio turned into digital audio). The book gets more advanced as chapters progress, and covers key concepts for new media producers such as how to maximize audio quality and which digital audio new media formats are best for use with Kindle, Android Studio, Java, JavaFX, iOS, Blackberry, Tizen, Firefox OS, Chrome OS, Opera OS, Ubuntu Touch and HTML5. The book also covers key factors regarding the data footprint optimization work process, streaming versus captive digital audio new media assets, digital audio programming and publishing platforms, and why data footprint optimization is important for modern day new media content development and distribution. Industry terminology involved in digital audio editing, synthesis, sampling, analysis and processing The work process which comprises a fundamental digital audio editing, analysis, and effects pipeline The foundational audio waveform sampling concepts that are behind modern digital audio publishing How to install, and utilize, the professional, open source Audacity 2.1 digital audio editing software Concepts behind digital audio sample resolution and sampling frequency and how to select settings How to select the best digital audio data codec and format for your digital audio content application How to go about data footprint optimization, to ascertain which audio formats give the best results Using Digital Audio Assets in Computer Programming Languages and Content Publishing Platforms', 'Includes index', 'Online resource; title from PDF title page (SpringerLink, viewed December 29, 2015)', 'At a Glance; Contents; About the Author; About the Technical Reviewer; Acknowledgments; Introduction; Chapter 1: The Foundation of Digital Audio: The Sound Wave; Downloading and Installing Audacity; AudacityTeam.org: Get Your Audacity 2.1 Software; Audio File Formats: Installing FFMPEG and LAME; A Foundation for Audio: The Sound Wave; Analog Audio: Sound Waves Formed Out of Air; Digital Audio: Sound Waves Formed Out of Bytes; Summary; Chapter 2: The History of Digital Audio: MIDI and Synthesis; Downloading and Installing Rosegarden; Rosegarden.com: Get Your Rosegarden Software', 'The Digital Audio Player Piano: MIDI DataMIDI Data: Your Musical Instrument Data Interface; Digital Performance Data: MIDI Is Not Digital Audio; Audio Synthesis: Synthesizers Create Sound Waves; MIDI Platform Support: Android, HTML5, and Java; Summary; Chapter 3: The Reproduction of Digital Audio: Data Sampling; Data Sampling: Resolution and Frequency; Sampling Digital Audio: Taking a Data Sample; Data Sample Resolution: Data Bytes per Sample; Data Sample Frequency: Data Samples per Second; Data Sample Mathematics: Amount of Binary Data; Sample Products: Sampler Hardware and Libraries', ""Recording Digital Audio: Using AudacitySummary; Chapter 4: The Transmission of Digital Audio: Data Formats; Audio Compression and Data Formats; Digital Audio Codecs: Bit Rates, Streaming, and HD; Digital Audio Transmission: Streaming Audio or Captive Audio?; Streaming Digital Audio Data: Setting Your Bit Rates Optimally; High-Definition HD Digital Audio: 24-Bit 48 kHz Sampling Data; Digital Audio Storage and Playback: File Formats; MIDI: Musical Instrument Data Interface's MID, XMF, and MXMF; MPEG-3: The Popular MP3 Digital Audio Player Data Format"", 'FLAC: The 24-Bit HD Audio Capable Free Lossless Audio CodecOgg Vorbis: A Lossy High-Performance Open Source Codec; MPEG-4: Advanced Audio Coding AAC-LC, AAC-ELD, or HE-AAC; AMR: The MPEG-4 Adaptive Multi-Rate Audio Codecs for Voice; Pulse-Code Modulation: Windows WAV or Mac AIFF PCM Codecs; Summary; Chapter 5: The Cleanup of Digital Audio: Noise Removal; Noise Removal: Algorithmic Processing; Noise Reduction: Defining the Background Noise; Noise Reduction: Removing the Background Noise; Summary; Chapter 6: The Isolation of Digital Audio: Trimming Tools; Audio Sample Editing: Basic Techniques', 'Trimming Digital Audio: Removing Unused DataExtracting Audio: Selecting Sample Components; Scrubbing Digital Audio: Sample Playback Rate; Rearranging Digital Audio: Cut, Copy, and Paste; Summary; Chapter 7: The Manual Labor of Digital Audio: Sample Editing; Audio Data Editing: Changing the Sample; Cleaning the Sample: Removing Isolated Artifacts; Sample Data Surgery: Removing Attached Artifacts; Algorithmic Sample Surgery: Integrated Artifacts; Summary; Chapter 8: The Algorithms of Digital Audio: Audio Processing; Algorithmic Audio Effects Processing; Waveform Amplitude: The Amplify Effect', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
introducingjavaf0000schi,Introducing JavaFX 8 programming ,S,"['xi, 262 pages : 24 cm', '""Introducing JavaFX 8 Programming provides a fast-paced, practical introduction to JavaFX, Java\'s next-generation GUI programming framework. In this easy-to-read guide, best-selling author Herb Schildt presents the key topics and concepts you\'ll need to start developing modern, dynamic JavaFX GUI applications. The book begins with the fundamentals, including the general form of a JavaFX program. You then advance to event handling, controls, images, fonts, layouts, effects, transforms, animations (including 3-D animations), menus, and more. Numerous complete examples are included that put key topics and techniques into action. Designed for Java programmers, the book\'s focus is on the JavaFX API and all examples are written entirely in Java. Best of all, the book is written in the clear, crisp, uncompromising style that has made Herb Schildt the choice of millions worldwide""--', 'Includes index', 'Machine generated contents note: Chapter 1: JavaFX Fundamentals -- Chapter 2: Introducing Events and Controls -- Chapter 3: Exploring JavaFX Controls: Part One -- Chapter 4: Exploring JavaFX Controls: Part Two -- Chapter 5: Work with Images, Fonts, and Layouts -- Chapter 6: Effects and Transforms -- Chapter 7: Animation -- Chapter 8: Explore Menus -- Chapter 9: Charts, WebView, and Canvas']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
ironcladjavabuil0000mani,Iron-clad Java : building secure web applications ,M,"['xvii, 282 pages ; 24 cm', '""This Oracle Press guide provides expert tips and techniques for building more secure Java-based Web applications. Iron-Clad Java: Building Secure Web Applications describes the use of several OWASP, Oracle, Apache, and Google open-source Java projects that are essential tools needed to construct a secure web application with the Java programming language. You\'ll learn best practices for authentication and access control, defense for cross-site scripting and cross-site request forgery, cryptographic storage, and injection protection. Using the practical advice, best practices, and real-world examples provided in this authoritative resource, you\'ll gain software engineering techniques for increasing security. Tech edited by Java Security Director, Milton Smith Shows how to build secure Java Web applications using leading industry tools and techniques Code examples from the book available free for download ""--', '""Oracle.""', '""Oracle Press.""', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
isbn_9781473003118,M250 Object-oriented Java programming units 1-5 Getting started with objects,Unknown Author,No Description Available,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
java8inactionlam0000urma,"Java 8 in action : lambdas, streams, and functional-style programming ",U,"['xxviii, 394 pages : 24 cm', 'Every new version of Java is important, but Java 8 is a game changer. Java 8 in Action is a clearly written guide to the new features of Java 8. It begins with a practical introduction to lambdas, using real-world Java code. Next, it covers the new Streams API and shows how you can use it to make collection-based code radically easier to understand and maintain. It also explains other major Java 8 features including default methods, Optional, CompletableFuture, and the new Date and Time API. This book is written for programmers familiar with Java and basic OO programming. -- Provided by publisher', 'Includes index', 'Fundamentals -- Java 8: why should you care? -- Passing code with behavior parameterization -- Lambda expressions -- Functional-style data processing -- Introducing streams -- Working with streams -- Collecting data with streams -- Parallel data processing and performance -- Effective Java 8 programming -- Refactoring, testing, and debugging -- Default methods -- Using Optional as a better alternative to null -- CompletableFuture: composable asynchronous programming -- New Date and Time API -- Beyond Java -- Thinking functionally -- Functional programming techniques -- Blending OOP and FP: comparing Java 8 and Scala -- Conclusions and where next for Java -- Appendix A. Miscellaneous language updates -- Appendix B. Miscellaneous library updates -- Appendix C. Performing multiple operations in parallel on a stream -- Appendix D. Lambdas and JVM bytecode']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
java8programming0000perk,JAVA 8 PROGRAMMING : step by step java 8 course programming,P,No Description Available,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaee7bigpictur0000cowa,Java EE 7 : the big picture ,C,"['xxi, 486 pages : 23 cm', '""The Definitive Guide to Java Platform, Enterprise Edition 7Java EE 7: The Big Picture uniquely explores the entire Java EE 7 platform in an all-encompassing style while examining each tier of the platform in enough detail so that you can select the right technologies for specific project needs. In this authoritative guide, Java expert Danny Coward walks you through the code, applications, and frameworks that power the platform. Take full advantage of the robust capabilities of Java EE 7, increase your productivity, and meet enterprise demands with help from this Oracle Press resource. Explore the features of the Java servlet model and Java servlet API Create dynamic web content with JavaServer Pages and JavaServer Faces Build websites for nonbrowser clients with JAX-RS Push data to web clients using Java WebSockets Secure web applications Work with web component APIs Maximize enterprise beans for multithreading, asynchronous processes, transactions, and more Access relational databases with the Java Database Connectivity APIs and the Java Persistence API Understand the packaging and deployment mechanisms of Java EE applications Work with Java EE Contexts and Dependency Injection Secure enterprise beans in a Java EE application Enable parallel processing with Java EE concurrency APIs ""--', '""Java EE 7: The Big Picture uniquely explores the entire Java EE 7 platform in an all-encompassing style while examining each tier of the platform in enough detail so that you can select the right technologies for specific project needs. In this authoritative guide, Java expert Danny Coward walks you through the code, applications, and frameworks that power the platform. Take full advantage of the robust capabilities of Java EE 7, increase your productivity, and meet enterprise demands with help from this Oracle Press resource""--', 'Includes index', 'Machine generated contents note: Chapter 1: The Big Picture -- PART I: The Mouthpiece of Java EE: The Web Tier -- Chapter 2: Building Blocks of the Web Tier: Java Servlet API and Java Servlets -- Chapter 3: Dynamic Web Pages: Java ServerPages (JSP) -- Chapter 4: Assembling Dynamic Web Pages: JavaServer Faces (JSF) -- Chapter 5: Web Sites for the Non-Browsers: JAX-RS -- Chapter 6: Adding Sparkle: Java WebSocket -- Chapter 7: Securing Web Applications -- Chapter 8: The Self-Contained Web Site: Java EE Web Application -- PART II: The Brain of Java EE: Middle Tier -- Chapter 9: Introducing the Thinking Component: Enterprise Java Beans -- Chapter 10: Advanced Thinking with Enterprise Beans -- PART III: The Collective Memory: The Information Tier -- Chapter 11: Classic Memories: JDBC -- Chapter 12: Modern Memories: Persistence -- PART IV: The Java EE Toolbox: Java EE Environment -- Chapter 13: The Big Picture Revisited: Java EE Applications -- Chapter 14: Deconstructing Components: Dependency Injection -- Chapter 15: Java EE Security -- Chapter 16: Think Efficient: Java Concurrency']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javahibernatecoo0000praj,Java Hibernate cookbook : over 50 recipes to help you build dynamic and powerful real-time Java Hibernate applications ,P,"['1 online resource (1 volume) :', 'Online resource; title from cover page (Safari, viewed October 14, 2015)', 'Includes index', 'Cover; Copyright; Credits; About the Authors; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Setting Up Hibernate; Introduction; Getting the required libraries for hibernate; Creating a hibernate persistent class; Providing an XML-based hibernate mapping; Providing an annotation-based hibernate mapping; Providing a hibernate configuration using an XML file; Providing a hibernate configuration using the properties file; Configuring hibernate programmatically; Chapter 2: Understanding the Fundamentals; Introduction; Building a SessionFactory', 'Creating a generic SessionFactory provider classOpening a new session; Opening a stateless session; Saving an object to the database; Fetching an object from the database; Removing an object from the database; Updating an object; Creating a criteria; Restricting the results using a criteria; Pagination using a criteria; Sorting the results; Transforming a result; Using basic projection; Chapter 3: Basic Annotations; Introduction; Declaring a class as an entity and creating a table in the database -- @Entity and @Table; Creating a column in the table -- @Column', 'Creating a primary key and composite primary key column -- @Id and @IdClassCreating an autogenerator column; Chapter 4: Working with Collections; Introduction; Persisting List; Persisting Set; Persisting Map; Persisting Array; Chapter 5: Working with Associations; Introduction; One-to-one mapping using foreign key association; One-to-one mapping using a common join table; One-to-one mapping using a common primary key; One-to-many mapping or many-to-one mapping; Many-to-many mapping; Chapter 6: Querying; Introduction; Working with an alias; Performing aggregate operations', 'Executing a subquery using a criteriaExecuting a native SQL query; Executing a query using HQL; Using formula in hibernate; Working with NamedQuery; Chapter 7: Advanced Concepts; Introduction; Working with a first-level cache; Working with a second-level cache; Working with a query cache; Working with the table per class hierarchy strategy of inheritance; Working with the table per subclass strategy of inheritance; Working with the table per concrete class strategy of inheritance; Working with the versioning of objects; Maintaining the history of an object; Working with an interceptor', 'Working with batch processingChapter 8: Integration with Other Frameworks; Introduction; Integration with Spring; Integration with Struts; Index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javahowtoprogram0010unse,Java how to program : early objects,Unknown Author,1198 Seiten :,"['printdisabled', 'internetarchivebooks']"
javainnutshell0000evan,Java in a Nutshell,E,"['xvi, 399 pages : 23 cm', ""The sixth edition of Java in a Nutshell helps experienced Java programmers get the most out of Java 7 and 8, but it's also a learning path for new developers. With examples rewritten to take full advantage of modern Java APIs and development best practices, this fully updated book brings you up to date and gets you ready to develop Java applications for the future. Learn how lambda expressions make your programs shorter, and easier to write and understand ; Explore Nashorn, the brand new implementation of Javascript on the Java Virtual Machine Start using the new I/O APIs to make your code cleaner, shorter, and safer ; Understand Java's concurrency model and learn how to write multithreaded code with confidence"", '""Covers Java 8""--Cover', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaintroduction0000savi_r5h5,Java : an introduction to problem solving & programming ,S,"['1023 pages : 24 cm', 'Previous edition: 2012', 'Includes bibliographical references (pages 1022-1023) and index']","['printdisabled', 'internetarchivebooks']"
javaprogramming20000fain_z4i8,Java programming : 24-hour trainer ,F,"['xxxiii, 587 pages : 24 cm', ""A beginner's guide to the latest features in Java programming, including step-by-step online video instruction"", '""Complete learning package with online video tutorials""--Cover', 'Includes index', 'Introducing Java -- Eclipse IDE -- Object-oriented programming with Java -- Class methods and constructors -- Java syntax: bits and pieces -- Packages, interfaces, and encapsulation -- Programming with abstract classes and interfaces -- Introducing the GUI with Swing -- Event Handling in Swing GUI -- Error handling -- Introduction to collections -- Introduction to generics -- Lambda expressions and functional style programming -- Working with I/O streams -- Java serialization -- Network programming basics -- Concurrency and multithreading -- Introduction to GUI with JavaFX -- Developing Java FX calculator and tic-tac-toe -- Stream API -- Working with relational DBMS using JDBC -- Rendering tabular data in the GUI -- Annotations and reflection -- Remote method invocation -- Java EE 7 overview -- Programming with servlets -- JavaServer pages -- Developing web applications with WebSockets -- Introducing JNDI -- Introducing JMS and MOM -- Introduction to enterprise JavaBeans -- Overview of the Java peristence API -- Working with RESTful web services -- Java logging API -- Introduction to unit testing with JUnit framework -- Build automation with Gradle -- Java technical interviews', 'Previous edition: 2011']","['printdisabled', 'internetarchivebooks']"
learninginternet0000wahe,Learning internet of things : explore and learn about internet of things with the help of engaging and enlightening tutorials designed for raspberry Pi,W,"['1 online resource (242 pages) :', ""If you're a developer or electronics engineer who is curious about Internet of Things, then this is the book for you. With only a rudimentary understanding of electronics, Raspberry Pi, or similar credit-card sized computers, and some programming experience using managed code such as C# or Java, you will be taught to develop state-of-the-art solutions for Internet of Things in an instant"", 'Includes index', 'Online resource; title from PDF title page (ebrary, viewed February 14, 2015)', 'Cover; Copyright; Credits; About the Author; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Preparing our IoT Projects; Creating the sensor project; Preparing the Raspberry Pi; Clayster libraries; Hardware; Interacting with our hardware; Interfacing the hardware; Internal representation of sensor values; Persisting data; External representation of sensor values; Exporting sensor data; Creating the actuator project; Hardware; Interfacing the hardware; Creating a controller; Representing sensor values; Parsing sensor data; Calculating control states', 'Creating a cameraHardware; Accessing the serial port on Raspberry Pi; Interfacing the hardware; Creating persistent default settings; Adding configurable properties; Persisting the settings; Working with current settings; Initializing the camera; Summary; Chapter 2: The HTTP Protocol; HTTP basics; Adding HTTP support to the sensor; Setting up an HTTP server on the sensor; Setting up an HTTPS server on the sensor; Adding a root menu; Displaying measured information in an HTML page; Generating graphics dynamically; Creating sensor data resources; Interpreting the readout request', 'Testing our data exportUser authentication; Adding events for enhanced network performance; Adding HTTP support to the actuator; Creating the web services resource; Accessing individual outputs; Collective access to outputs; Accessing the alarm output; Using the test form; Accessing WSDL; Using the REST web service interface; Adding HTTP support to the controller; Subscribing to events; Creating the control thread; Controlling the actuator; Summary; Chapter 3: The UPnP Protocol; Introducing UPnP; Providing a service architecture; Documenting device and service capabilities', 'Creating a device description documentChoosing a device type; Being friendly; Providing the device with an identity; Adding icons; Adding references to services; Topping off with a URL to a web presentation page; Creating the service description document; Adding actions; Adding state variables; Adding a unique device name; Providing a web interface; Creating a UPnP interface; Registering UPnP resources; Replacing placeholders; Adding support for SSDP; Notifying the network; Responding to searches; Implementing the Still Image service; Initializing evented state variables', 'Providing web service propertiesAdding service properties; Adding actions; Using our camera; Setting up UPnP; Discovering devices and services; Subscribing to events; Receiving events; Executing actions; Summary; Chapter 4: The CoAP Protocol; Making HTTP binary; Finding development tools; Adding CoAP to our sensor; Defining our first CoAP resources; Manually triggering an event notification; Registering data readout resources; Returning XML; Returning JSON; Returning plain text; Discovering CoAP resources; Testing our CoAP resources; Adding CoAP to our actuator']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
learningjavabybu0000hort,Learning Java by Building Android Games,H,"['1 online resource', ""Android is the fastest growing operating system (OS) with one of the largest installed bases of any mobile OS. Android uses one of the most popular programming languages, Java, as the primary language for building apps of all types. So, you should first obtain a solid grasp of the Java language and its foundation APIs to improve the chances of succeeding as an Android app developer. This book will show you how to get your Android development environment set up and you will soon have your first working game. The difficulty level grows steadily with the introduction of key Java topics such as loops, methods, and OOP. You'll then use them in the development of games. You will learn how to build a math test game, a Simon-like memory game, a retro pong-style game, and for the grand finale, a Snake-style, retro arcade game with real Google Play leaderboards and achievements. The book has a hands-on approach and is packed with screenshots"", 'Print version record', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
minecraftmodding0000gupt,Minecraft modding with Forge : a family-friendly guide to building fun mods in Java ,G,"['xvi, 174 pages : 24 cm', '""Playing Minecraft is a lot of fun, but the game is more engaging, entertaining, and educational when kids learn how to build mods -- smal programs that let them modify game elements and add content. This family-friendly guide teaches kids and parents how to create mods of different types, using the Minecraft Forge modding tool. No programming experience is needed."" -- Amazon.com', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
moddingminecraft0000guth,Modding Minecraft : [build your own Minecraft Mods!],G,"['121 pages : 22 cm', ""Modding allows players to customize Minecraft through code. The projects in this book teach your player how to modify the game by using code blocks to create mini games. The projects use LearntoMod (provided as a 60-day trial download with the book), a platform designed specifically to teach young students how to modify Minecraft. Projects include: Create a Spleef Game - get started with a single-player, single-level game, build a Monster Arena - moves readers on to multi-level game playing, capture That Flag - finishes with a multi-level, multi-player game based on the classic capture the flag' game"", 'Project 1: Start Modding -- Project 2: Spleef -- Project 3: Monster Arena -- Project 4: Capture the Flag']","['printdisabled', 'internetarchivebooks']"
murachsbeginning0000mura,Murach's beginning Java with NetBeans ,M,"['xx, 642 pages : 26 cm', 'This book explains Java programming in five sections. Section 1 explains the core concepts and coding needed to create simple object-oriented applications. Sections 2, 3, and 4 expand core Java and OOP skills. Section 5 presents real world applications for the program', 'At head of title: Training & reference', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
objectorientedan0000dath,"Object-oriented analysis, design and implementation : an integrated approach",D,"['1 online resource (xix, 471 pages) :', ""The second edition of this textbook includes revisions based on the feedback on the first edition. In a new chapter the authors provide a concise introduction to the remainder of UML diagrams, adopting the same holistic approach as the first edition. Using a case-study-based approach for providing a comprehensive introduction to the principles of object-oriented design, it includes: A sound footing on object-oriented concepts such as classes, objects, interfaces, inheritance, polymorphism, dynamic linking, etc. A good introduction to the stage of requirements analysis Use of UML to document user requirements and design An extensive treatment of the design process Coverage of implementation issues Appropriate use of design and architectural patterns Introduction to the art and craft of refactoring Pointers to resources that further the reader's knowledge The focus of the book is on implementation aspects, without which the learning is incomplete. This is achieved through the use of case studies for introducing the various concepts of analysis and design, ensuring that the theory is never separate from the implementation aspects. All the main case studies used in this book have been implemented by the authors using Java. An appendix on Java provides a useful short tutorial on the language"", 'Includes bibliographical references and index', ""Preface to the Second Edition -- Preface to the First Edition -- Part I: Basic Object-Oriented Concepts -- Introduction -- Basics of Object-Oriented Programming -- Relationships Between Classes -- Language Features for Object-Oriented Implementation -- Part II: Introduction to Object-Oriented Analysis, Design, Implementation and Refactoring -- Elementary Design Patterns -- Analysing a System -- Design and Implementation -- How 'Object-Oriented' is Our Design? -- Part III: Advanced Concepts in Object-Oriented Design -- Exploring Inheritance -- Modelling with Finite State Machines -- Interactive Systems and the MVC Architecture -- Designing with Distributed Objects -- The Unified Modelling Language -- Appendix A.-Index"", 'Online resource; title from PDF title page (SpringerLink, viewed March 17, 2016)']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
ocaoraclecertifi0000boya,"OCA : Oracle certified associate Java, SE 8 programmer I : study guide, exam 1Z0-808 ",B,"['xlii, 379 pages : 24 cm', 'Focusing 100% on the exam objectives, OCA/OCP: Oracle Certified Java SE 8 Programmer Study Guide is designed to make you fully prepared for these challenging exams. Between Java 7 and Java 8, Oracle has made the biggest changes to the language in a long time. In particular, developers will need to learn functional programming for the first time to pass the certification. This comprehensive study guide covers all of the key topic areas Java programmers will need to be familiar with']","['printdisabled', 'internetarchivebooks']"
opencvwithpython0000beye,OpenCV with Python blueprints : design and develop advanced computer vision projects using OpenCV with Python,B,"['1 online resource :', ""Design and develop advanced computer vision projects using OpenCV with Python About This Book Program advanced computer vision applications in Python using different features of the OpenCV library Practical end-to-end project covering an important computer vision problem All projects in the book include a step-by-step guide to create computer vision applications Who This Book Is For This book is for intermediate users of OpenCV who aim to master their skills by developing advanced practical applications. Readers are expected to be familiar with OpenCV's concepts and Python libraries. Basic knowledge of Python programming is expected and assumed. What You Will Learn Generate real-time visual effects using different filters and image manipulation techniques such as dodging and burning Recognize hand gestures in real time and perform hand-shape analysis based on the output of a Microsoft Kinect sensor Learn feature extraction and feature matching for tracking arbitrary objects of interest Reconstruct a 3D real-world scene from 2D camera motion and common camera reprojection techniques Track visually salient objects by searching for and focusing on important regions of an image Detect faces using a cascade classifier and recognize emotional expressions in human faces using multi-layer peceptrons (MLPs) Recognize street signs using a multi-class adaptation of support vector machines (SVMs) Strengthen your OpenCV2 skills and learn how to use new OpenCV3 features In Detail OpenCV is a native cross platform C++ Library for computer vision, machine learning, and image processing. It is increasingly being adopted in Python for development. OpenCV has C++/C, Python, and Java interfaces with support for Windows, Linux, Mac, iOS, and Android. Developers using OpenCV build applications to process visual data; this can include live streaming data from a device like a camera, such as photographs or videos. OpenCV offers extensive libraries with over 500 functions This book demonstrates how to develop a series of intermediate to advanced projects using OpenCV and Python, rather than teaching the core concepts of OpenCV in theoretical lessons. Instead, the working projects developed in this book teach the reader how to apply their theoretical knowledge to topics such as image manipulation, augmented reality, object tracking, 3D scene reconstruction, statistical learning, and object categorization. By the end of this book, readers will be OpenCV experts whose ne.."", 'Online resource; title from PDF title page (EBSCO, viewed February 6, 2018)', 'Includes index', 'Cover ; Copyright; Credits; About the Author; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Fun with Filters; Planning the app; Creating a black-and-white pencil sketch; Implementing dodging and burning in OpenCV; Pencil sketch transformation; Generating a warming/cooling filter; Color manipulation via curve shifting; Implementing a curve filter by using lookup tables; Designing the warming/cooling effect; Cartoonizing an image; Using a bilateral filter for edge-aware smoothing; Detecting and emphasizing prominent edges', 'Combining colors and outlines to produce a cartoonPutting it all together; Running the app; The GUI base class; The GUI constructor; Handling video streams; A basic GUI layout; A custom filter layout; Summary; Chapter 2: Hand Gesture Recognition Using a Kinect Depth Sensor; Planning the app; Setting up the app; Accessing the Kinect 3D sensor; Running the app; The Kinect GUI; Tracking hand gestures in real time; Hand region segmentation; Finding the most prominent depth of the image center region; Applying morphological closing to smoothen the segmentation mask', 'Finding connected components in a segmentation maskHand shape analysis; Determining the contour of the segmented hand region; Finding the convex hull of a contour area; Finding the convexity defects of a convex hull; Hand gesture recognition; Distinguishing between different causes of convexity defects; Classifying hand gestures based on the number of extended fingers; Summary; Chapter 3: Finding Objects via Feature Matching and Perspective Transforms; Tasks performed by the app; Planning the app; Setting up the app; Running the app; The FeatureMatching GUI; The process flow', 'Feature extractionFeature detection; Detecting features in an image with SURF; Feature matching; Matching features across images with FLANN; The ratio test for outlier removal; Visualizing feature matches; Homography estimation; Warping the image; Feature tracking; Early outlier detection and rejection; Seeing the algorithm in action; Summary; Chapter 4: 3D Scene Reconstruction Using Structure from Motion; Planning the app; Camera calibration; The pinhole camera model; Estimating the intrinsic camera parameters; The camera calibration GUI; Initializing the algorithm', 'Collecting image and object pointsFinding the camera matrix; Setting up the app; The main function routine; The SceneReconstruction3D class; Estimating the camera motion from a pair of images; Point matching using rich feature descriptors; Point matching using optic flow; Finding the camera matrices; Image rectification; Reconstructing the scene; 3D point cloud visualization; Summary; Chapter 5: Tracking Visually Salient Objects; Planning the app; Setting up the app; The main function routine; The Saliency class; The MultiObjectTracker class; Visual saliency; Fourier analysis']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
pivotalcertified0000krna,Pivotal certified Spring enterprise integration specialist exam : a study guide,K,"['1 online resource', 'Exam topics covered include tasks and scheduling, remoting, the Spring Web Services framework, RESTful services with Spring MVC, the Spring JMS module, JMS and JTA transactions with Spring, batch processing with Spring Batch and the Spring Integration framework. Prepare with confidence for the Pivotal Enterprise Integration with Spring Exam. One of the important aspects of this book is a focus on new and modern abstractions provided by Spring. Therefore most of the features are shown with Java annotations alongside established XML configurations. Most of the examples in the book are also based on the Spring Boot framework. Spring Boot adoption is exponential because of its capability to significantly simplify Spring configuration using sensible opinionated defaults. But Spring Boot is not the target of the exam, therefore all the features are also covered with plain Spring configuration examples. How to use Spring to create concurrent applications and schedule tasks How to do remoting to implement client-server applications How to work with Spring Web services to create loosely coupled Web services and clients How to use Spring MVC to create RESTful web services and clients How to integrate JMS for asynchronous messaging-based communication How to use local JMS transactions with Spring How to configure global JTA transactions with Spring How to use Spring Integration to create event-driven pipes-and-filters architectures and integrate with external applications How to use Spring Batch for managed, scalable batch processing that is based on both custom and built-in processing components', 'Online resource; title from PDF title page (EBSCO, viewed November 24, 2015)']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
proandroid50000macl,Pro Android 5 ,M,"['1 online resource :', ""Pro Android 5 shows you how to build real-world and fun mobile apps using the Android 5 SDK. This book updates the best-selling Pro Android and covers everything from the fundamentals of building apps for smartphones, tablets, and embedded devices to advanced concepts such as custom components, multi-tasking, sensors/augmented reality, better accessories support and much more. Using the tutorials and expert advice, you'll quickly be able to build cool mobile apps and run them on dozens of Android-based smartphones. You'll explore and use the Android APIs, including those for media and sensors"", 'Online resource; title from PDF title page (Ebsco, viewed June 19, 2015)', 'Includes index', ""At a Glance; Introduction; Chapter 1: Hello Android; Prerequisites for Android Development; Setting Up Your Eclipse Environment; Downloading JDK; Downloading Eclipse; Downloading the Android SDK; Updating Your PATH Environment Variable; The Tools Window; Installing ADT; Setting Up Your Android Studio Environment; Java requirements for Android Studio; Downloading and Installing Android Studio; Learning Android's Fundamental Components; View; Activity; Fragment; Intent; Content Provider; Service; AndroidManifest.xml; AVDs; Hello World!; AVDs; Running on a Real Device"", 'Exploring the Structure of an Android ApplicationExamining the Application Life Cycle; Simple Debugging; Launching the Emulator; References; Summary; Chapter 2: Introduction to Android Application Architecture; Exploring a Simple Android Application; Defining UI through Layout Files; Specifying Comments in Layout Files; Adding Views and View Groups in Layout Files; Specifying Control Properties in Layout Files; Indicating ViewGroup Properties; Controlling Width and Height of a Control; Introducing Resources and Backgrounds; Working with Text Controls in the Layout File', 'Working with Autogenerated IDs for ControlsImplementing Programming Logic; Loading the Layout File into an Activity; Gathering Controls; Setting Up Buttons; Responding to Button Clicks: Tying It All Together; Updating the AndroidManifest. XML; Placing the Files in the Android Project; Testing the Calculator App on a Real Device; Android Activity Life Cycle; void onStart()); void onRestoreInstanceState (Bundle savedInstanceState); void onResume()); void onPause()); void onStop()); void onSaveInstanceState (Bundle saveStateBundle); void onRestart()); Object onRetainNonConfigurationInstance())', 'Void onDestroy())General Notes on Activity Callbacks; More on Resources; Directory Structure of Resources; Reading Resources from Java Code; Runtime Behavior of Drawable Resources; Using Arbitrary XML Files as Resources; Working with Raw Resource Files; Reading Files from the Assets Directory; Reading Resources and Assets Without an Activity Reference; Understanding Resource Directories, Language, and Locale; More on Intents; Starting Activities for Results; Exercising the GET_CONTENT Action; Relating Intents and Activities; Understanding Explicit and Implicit Intents; Saving State in Android', 'Roadmap for Learning Android and the Rest of the BookTrack 1: UI Essentials for Your Android Applications; Track 2: Saving State; Track 3: Preparing/Taking Your Application to the Market; Track 4: Making Your Application Robust; Track 5: Bringing Finesse to Your Apps; Track 6: Integrating with Other Devices and the Cloud; Final Track: Getting a Helping Hand from Expert Android; As We Leave You Now with the Rest of the Book; References; Summary; Chapter 3: Building Basic User Interfaces and Using Controls; UI Development in Android; Building a UI Completely in Code', 'Includes bibliographical references and index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
programminggoogl0000sand_t5q5,Programming Google App Engine with Java : build & run scalable Java applications on Google's infrastructure ,S,"['1 online resource (1 volume) :', 'Description based on online resource; title from cover (Safari, viewed July 17, 2015)', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
restfuljavawebse0000puru,RESTful Java web services : design scalable and robust RESTful web services with JAX-RS and Jersey extension APIs ,P,"['1 online resource (1 volume) :', ""Design scalable and robust RESTful web services with JAX-RS and Jersey extension APIs About This Book Get to grips with the portable Java APIs used for JSON processing Design solutions to produce, consume, and visualize RESTful web services using WADL, RAML, and Swagger A step-by-step guide packed with many real-life use-cases to help you build efficient and secure RESTful web APIs in Java Who This Book Is For If you are a web developer with a basic understanding of the REST concepts but are new to the idea of designing and developing RESTful web services, this is the book for you. As all the code samples for the book are written in Java, proficiency in Java is a must. What You Will Learn Introduce yourself to the RESTful software architectural style and the REST API design principles Make use of the JSR 353 APIs and Jackson API for JSON processing Build portable RESTful web APIs, making use of the JAX-RS 2.0 API Simplify API development using the Jersey extension APIs Secure your RESTful web services with various authentication and authorization mechanisms Get to grips with the various metadata solutions to describe, produce, and consume RESTful web services Understand the design and coding guidelines to build well-performing RESTful APIs See how the role of RESTful web services changes with emerging technologies and trends In Detail REST (REpresentational State Transfer) is a simple yet powerful software architecture style to create scalable web services and allow them to be simple, lightweight, and fast. The REST API uses HTTP and JSON, so that it can be used with many programming languages such as Ruby, Java, Python, and Scala. Its use in Java seems to be the most popular though, because of the API's reusability. This book is a guide to developing RESTful web services in Java using the popular RESTful framework APIs available today. You will begin with gaining an in-depth knowledge of the RESTful software architectural style and its relevance in modern applications. Further, you will understand the APIs to parse, generate, transform, and query JSON effectively. Then, you will see how to build a simple RESTful service using the popular JAX-RS 2.0 API along with some real-world examples. This book will introduce you to the Jersey framework API, which is used to simplify your web services. You will also see how to secure your services with various authentication mechanisms. You will get to grips with various solutions to describe, produce, co.."", 'Online resource; title from cover page (Safari, viewed October 13, 2015)', 'Includes index', 'Cover; Copyright; Credits; About the Author; Acknowledgments; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Introducing the REST Architectural Style; The REST architectural style; Introducing HTTP; HTTP versions; Understanding the HTTP request-response model; Uniform resource identifier; Understanding the HTTP request methods; Representing content types using HTTP header fields; HTTP status codes; The evolution of RESTful web services; The core architectural elements of a RESTful system; Resources; URI; The representation of resources', 'Generic interaction semantics for REST resourcesThe HTTP GET method; The HTTP POST method; The HTTP PUT method; The HTTP DELETE method; Hypermedia as the engine of application state; Description and discovery of RESTful web services; Java tools and frameworks for building RESTful web services; Summary; Chapter 2: Java APIs for JSON Processing; A brief overview of JSON; Understanding the JSON data syntax; Basic data types available with JSON; A sample JSON file representing employee objects; Processing JSON data; Using JSR 353 -- Java API for processing JSON', 'Processing JSON with JSR 353 object model APIs Generating the object model from the JSON representation; Generating the JSON representation from the object model; Processing JSON with JSR 353 streaming APIs; Using streaming APIs to parse JSON data; Using streaming APIs to generate JSON ; Using the Jackson API for processing JSON; Processing JSON with Jackson tree model APIs; Using Jackson tree model APIs to query and update data; Processing JSON with Jackson data binding APIs; Simple Jackson data binding with generalized objects; Full Jackson data binding with specialized objects', 'Processing JSON with Jackson streaming APIsUsing Jackson streaming APIs to parse JSON data; Using Jackson streaming APIs to generate JSON; Using the Gson API for processing JSON; Processing JSON with object model APIs in Gson; Generating the object model from the JSON representation; Generating the parameterized Java collection from the JSON representation; Generating the JSON representation from the object model ; Processing JSON with Gson streaming APIs; Reading JSON data with Gson streaming APIs; Writing JSON data with Gson streaming APIs; Summary; Chapter 3: Introducing the JAX-RS API', 'An overview of JAX-RSJAX-RS annotations; Specifying the dependency of the JAX-RS API; Using JAX-RS annotations to build RESTful web services; Annotations for defining a RESTful resource; Annotations for specifying request-response media types; Annotations for processing HTTP request methods; Annotations for accessing request parameters; Returning additional metadata with responses; Understanding data binding rules in JAX-RS; Mapping the path variable with Java types; Mapping the request and response entity body with Java types']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
rxjavaessentials0000morg,RxJava essentials : learn reactive programming to create awesome Android and Java apps ,M,"['1 online resource (1 volume) :', 'Includes index', ""Cover; Copyright; Credits; About the Author; About the Reviewer; www.PacktPub.com; Table of Contents; Preface; Chapter 1: RX -- from .NET to RxJava; Microsoft Reactive Extensions; Landing in the Java world -- Netflix RxJava; What's different in RxJava; Summary; Chapter 2: Why Observables?; The Observer pattern; When do you use the Observer pattern?; The RxJava Observer pattern toolkit; Observable; Hot and cold Observables; Creating an Observable; Subject = Observable + Observer; PublishSubject; BehaviorSubject; ReplaySubject; AsyncSubject; Summary; Chapter 3: Hello Reactive World"", ""Start the engine!Dependencies; RxAndroid; Utils; Lombok; Butter Knife; Retrolambda; Our first Observable; Creating an Observable from a list; A few more examples; just(); repeat(); defer(); range(); interval(); timer(); Summary; Chapter 4: Filtering Observables; Filtering a sequence; Let's take what we need; Take; TakeLast; Once and only once; Distinct; DistinctUntilChanged; First and last; Skip and SkipLast; ElementAt; Sampling; Timeout; Debounce; Summary; Chapter 5: Transforming Observables; The *map family; Map; FlatMap; ConcatMap; FlatMapIterable; SwitchMap; Scan; GroupBy; Buffer; Window"", 'CastSummary; Chapter 6: Combining Observables; Merge; Zip; Join; combineLatest; And, Then, and When; Switch; StartWith; Summary; Chapter 7: Schedulers -- Defeating the Android MainThread Issue; StrictMode; Avoiding blocking I/O operations; Schedulers; Schedulers.io(); Schedulers.computation(); Schedulers.immediate(); Schedulers.newThread(); Schedulers.trampoline(); Nonblocking I/O operations; SubscribeOn and ObserveOn; Handling a long task; Executing a network task; Summary; Chapter 8: REST in Peace -- RxJava and Retrofit; The project goal; Retrofit; The app structure', 'Creating the Activity classCreating the RecyclerView adapter; Retrieving the weather forecast; Opening the website; Summary; Index', 'Description based on online resource; title from cover (Safari, viewed June 10, 2015)']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
sparkforpythonde0000nand,Spark for Python developers : a concise guide to implementing Spark big data analytics for Python developers and building a real-time and insightful trend tracker data-intensive app ,N,"['1 online resource :', 'Annotation', 'Online resource; title from PDF title page (EBSCO, viewed May 3, 2016)', 'Includes index', 'Cover ; Copyright; Credits; About the Author; Acknowledgment; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Setting Up a Spark Virtual Environment ; Understanding the architecture of data-intensive applications; Infrastructure layer; Persistence layer; Integration layer; Analytics layer; Engagement layer; Understanding Spark; Spark libraries; PySpark in action; Resilient Distributed Dataset; Understanding Anaconda; Setting up the Spark powered environment; Setting up an Oracle VirtualBox with Ubuntu; Installing Anaconda with Python 2.7; Installing Java 8', 'Installing SparkEnabling IPython Notebook; Building our first app with PySpark; Virtualizing the environment with Vagrant; Moving to the cloud; Deploying apps in Amazon Web Services; Virtualizing the environment with Docker; Summary; Chapter 2: Building Batch and Streaming Apps with Spark ; Architecting data-intensive apps; Processing data at rest; Processing data in motion; Exploring data interactively; Connecting to social networks; Getting Twitter data; Getting GitHub data; Getting Meetup data; Analyzing the data; Discovering the anatomy of tweets; Exploring the GitHub world', 'Understanding the community through MeetupPreviewing our app; Summary; Chapter 3: Juggling Data with Spark ; Revisiting the data-intensive app architecture; Serializing and deserializing data; Harvesting and storing data; Persisting data in CSV; Persisting data in JSON; Setting up MongoDB; Installing the MongoDB server and client; Running the MongoDB server; Running the Mongo client; Installing the PyMongo driver; Creating the Python client for MongoDB; Harvesting data from Twitter; Exploring data using Blaze; Transferring data using Odo; Exploring data using Spark SQL', 'Understanding Spark dataframesUnderstanding the Spark SQL query optimizer; Loading and processing CSV files with Spark SQL; Querying MongoDB from Spark SQL; Summary; Chapter 4: Learning from Data Using Spark ; Contextualizing Spark MLlib in the app architecture; Classifying Spark MLlib algorithms; Supervised and unsupervised learning; Additional learning algorithms; Spark MLlib data types; Machine learning workflows and data flows; Supervised machine learning workflows; Unsupervised machine learning workflows; Clustering the Twitter dataset; Applying SciKit-Learn on the Twitter dataset', 'Preprocessing the datasetRunning the clustering algorithm; Evaluating the model and the results; Building machine learning pipelines; Summary; Chapter 5: Streaming Live Data with Spark ; Laying the foundations of streaming architecture; Spark streaming inner working; Going under the hood of Spark Streaming; Building in fault tolerance; Processing live data with TCP sockets; Setting up TCP sockets; Processing live data; Manipulating Twitter data in real time; Processing Tweets in real time from the Twitter firehose; Building a reliable and scalable streaming app; Setting up Kafka']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
startprogramming0000kell,Start programming with Alice,K,140 pages : 28 cm,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
stripesbyexample0000wats,Stripes by example ,W,"['1 online resource (xvii, 140 pages) :', ""In this 100-page book, you will find that Stripes provides a very simple learning path, where you do not need to understand the entire framework in order to use it. The concept of this book is exactly that? to get you using the framework and writing code immediately. You will be off and running in no time, and adding to your skill set as we progress. This book is written with exactly that learning method in mind. No filler, no empty explanations ... just code. You won't be driving solo, however. Each code example is heavily annotated with comments and tips, so that you not only understand each snippet, but can also dive deeper if you so choose. Stripes is a web framework for the Java programming language. It was initially released in 2005 by Tim Fennell. Despite its growth and maturity, Stripes has always focused on two key principles: simplicity and ease of development. Stripes has also remained a solution for a single application tier: the web-layer. Its purpose is to handle the interaction between a web browser and server-side java code. To tie these concepts together Stripes makes heavy use of Java annotations, which we will see as we learn the various features of Stripes"", 'Includes index', 'Online resource; title from PDF title page (SpringerLink, viewed April 2, 2015)', 'At a Glance; Contents; About the Author; About the Technical Reviewer; Acknowledgments; Preface; Chapter 1: Introduction to Stripes; Stripes Development; ActionBeans; Stripes Tag Library; Additional Features; Where to Go If You Need Help; Review; Chapter 2: Getting Started; Download Java; Start a New Project; Adding Stripes to Your Project; Option 1: Manual File Downloads; Option 2: Maven Setup; Stripes web.xml Setup; Option 1: Manual web.xml Setup; Option 2: Maven Setup; If All Else Fails; Review; Chapter 3: ActionBeans; An Introduction to ActionBeans', 'Refactoring to Remove DuplicationReview; Chapter 4: Mapping URLs to Methods; Using @HandlesEvent and @UrlBinding; Linking to ActionBeans; Review; Chapter 5: JSP Pages; Using JSP Pages with Stripes; Stripes Tags; Stripes Form Tags; Review; Chapter 6: Forms; An Example Application; Using Data Transfer Objects and Nested Properties; Complex Objects; Review; Chapter 7: Working with Data; Database Setup; JDBC DAO; ActionBean-DAO Interaction; Review; Chapter 8: Interaction Between ActionBeans; Login; Application Pages; Review; Chapter 9: Validation; @Validate Annotation', '@ValidateNestedProperties AnnotationReview; Chapter 10: Resolutions; Starting the Resolution Examples; RedirectResolution; ErrorResolution; StreamingResolution; Review; Chapter 11: Other Annotations; @SessionScope Annotation; @Before and @After Annotations; @SpringBean Annotation; Review; Chapter 12: Internationalization; Internationalization in Stripes; Internationalization Setup and Configuration; Using Internationalization Values; Supporting Multiple Languages; JSP Internationalization Value Lookups; Review; Chapter 13: Interceptors; Introduction to Interceptors; Interceptor Configuration', 'Using Interceptor DataReview; Chapter 14: File Uploads; Uploading Files; Uploading Multiple Files; COS vs. Apache Commons FileUpload; Review; Chapter 15: Good Design; Use BaseActionBean.java; Use a base.jsp; Balance Your ActionBeans; Returning Resolutions via Method Calls; Remember Your Tiers; Review; Chapter 16: Next Steps; Index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
DTIC_ADA621804,DTIC ADA621804: Hardware-Assisted Large-Scale Neuroevolution for Multiagent Learning,D,"This DURIP equipment award was used to purchase, install, and bring on-line two Berkeley Emulation Engines (BEEs) and two mini-BEE machines to establish an FPGA-based high-performance multiagent training platform and its associated software. This acquisition of BEE4- W (Berkeley Emulation Engine) hardware platforms has costed $201,500.00 in total. To accelerate both the multiagent software simulation and hardware development, a DELL integrated cluster environment unit was purchased, featuring 192 2.8 GHz processors (on 24 nodes) with 384 GB high- speed RAM on an Infiniband backbone. We also installed cluster control software and licenses for the UBUNTU-based Linux operating system. Soft-ware was installed including JAVA and C/C++ compiler suites (debuggers, performance measurements, etc.), the Xilinx ISE software suite, and the Matlab software. The system was ordered in late 2012 and arrived in early 2013 and was up and running routinely with local users in a few weeks.","['dticarchive', 'additional_collections']"
arxiv-1412.8639,Jif: Language-based Information-flow Security in Java,K,"In this report, we examine Jif, a Java extension which augments the language with features related to security. Jif adds support for security labels to Java's type system such that the developer can specify confidentiality and integrity policies to the various variables used in their program. We list the main features of Jif and discuss the information flow problem that Jif helps to solve. We see how the information flow problem occurs in real-world systems by looking at two examples: Civitas, a ballot/voting system where voters do not necessarily trust voting agents, and SIF, a web application container implemented using Jif. Finally, we implement a small program that simulates information flow in a booking system containing sensitive data and discuss the usefulness of Jif based on this program.","['arxiv', 'journals']"
arxiv-1412.6765,Performance comparison between Java and JNI for optimal implementation of computational micro-kernels,Nassim A. Halli,"General purpose CPUs used in high performance computing (HPC) support a vector instruction set and an out-of-order engine dedicated to increase the instruction level parallelism. Hence, related optimizations are currently critical to improve the performance of applications requiring numerical computation. Moreover, the use of a Java run-time environment such as the HotSpot Java Virtual Machine (JVM) in high performance computing is a promising alternative. It benefits from its programming flexibility, productivity and the performance is ensured by the Just-In-Time (JIT) compiler. Though, the JIT compiler suffers from two main drawbacks. First, the JIT is a black box for developers. We have no control over the generated code nor any feedback from its optimization phases like vectorization. Secondly, the time constraint narrows down the degree of optimization compared to static compilers like GCC or LLVM. So, it is compelling to use statically compiled code since it benefits from additional optimization reducing performance bottlenecks. Java enables to call native code from dynamic libraries through the Java Native Interface (JNI). Nevertheless, JNI methods are not inlined and require an additional cost to be invoked compared to Java ones. Therefore, to benefit from better static optimization, this call overhead must be leveraged by the amount of computation performed at each JNI invocation. In this paper we tackle this problem and we propose to do this analysis for a set of micro-kernels. Our goal is to select the most efficient implementation considering the amount of computation defined by the calling context. We also investigate the impact on performance of several different optimization schemes which are vectorization, out-of-order optimization, data alignment, method inlining and the use of native memory for JNI methods.","['arxiv', 'journals']"
arxiv-1412.5400,Buffer Overflow Analysis for C,U,"Buffer overflow detection and mitigation for C programs has been an important concern for a long time. This paper defines a string buffer overflow analysis for C programs. The key ideas of our formulation are (a) separating buffers from the pointers that point to them, (b) modelling buffers in terms of sizes and sets of positions of null characters, and (c) defining stateless functions to compute the sets of null positions and mappings between buffers and pointers. This exercise has been carried out to test the feasibility of describing such an analysis in terms of lattice valued functions and relations to facilitate automatic construction of an analyser without the user having to write C/C++/Java code. This is facilitated by devising stateless formulations because stateful formulations combine features through side effects in states raising a natural requirement of C/C++/Java code to be written to describe them. Given the above motivation, the focus of this paper is not to build good static approximations for buffer overflow analysis but to show how given static approximations could be formalized in terms of stateless formulations so that they become amenable to automatic construction of analysers.","['arxiv', 'journals']"
DTIC_ADA620794,DTIC ADA620794: Nextgen Navy eLearning Tracking,D,"The Navy's eLearning (NeL) computer-based learning system relies on a Learning Management System (LMS) for content delivery and tracking learning information. One major obstacle with NeL's current LMS implementation is that tracking of learning can only be done while a user is on a desktop computer using an Internet browser to connect to the LMS software. However, not all learning takes place within an Internet browser on a desktop computer. The Experience-API (xAPI), also known as Tin Can API and SCORM 2.0, is a standard maintained by Advanced Distributed Learning (ADL) that decouples the tracking of learning information from the content delivery. Any piece of software implementing the xAPI standard running on any networked device can track learning activity and store that data inside of a Learning Record Store (LRS). A prototype system was developed in a virtual environment to showcase the use of the xAPI/LRS to track quiz data, and the quiz data could then be synced from the LRS to the LMS. The prototype showed that xAPI, along with its LRS, can overcome the NeL's AtlasPro LMS limitation of only tracking learning from a user's desktop computer using an Internet browser.","['dticarchive', 'additional_collections']"
arxiv-1411.5166,Subtyping in Java with Generics and Wildcards is a Fractal,M,"While developing their software, professional object-oriented (OO) software developers keep in their minds an image of the subtyping relation between types in their software. The goal of this paper is to present an observation about the graph of the subtyping relation in Java, namely the observation that, after the addition of generics---and of wildcards, in particular---to Java, the graph of the subtyping relation is no longer a simple directed-acyclic graph (DAG), as in pre-generics Java, but is rather a fractal. Further, this observation equally applies to other mainstream nominally-typed OO languages (such as C#, C++ and Scala) where generics and wildcards (or some other form of 'variance annotations') are standard features. Accordingly, the shape of the subtyping relation in these OO languages is more complex than a tree or a simple DAG, and indeed is also a fractal. Given the popularity of fractals, the fractal observation may help OO software developers keep a useful and intuitive mental image of their software's subtyping relation, even if it is a little more frightening, and more amazing one than before. With proper support from IDEs, the fractal observation can help OO developers in resolving type errors they may find in their code in lesser time, and with more confidence.","['arxiv', 'journals']"
ERIC_EJ1163870,ERIC EJ1163870: Teaching Earth Signals Analysis Using the Java-DSP Earth Systems Edition: Modern and Past Climate Change,E,"Modern data collection in the Earth Sciences has propelled the need for understanding signal processing and time-series analysis techniques. However, there is an educational disconnect in the lack of instruction of time-series analysis techniques in many Earth Science academic departments. Furthermore, there are no platform-independent freeware tools available for teaching Earth signals analysis. In order to address these issues, we developed the ""Java-Digital Signal Processing/Earth Systems Edition"" (""J-DSP/ESE""), a platform-independent software tool that can be integrated with the Earth Science university curriculum for signal processing and analysis instruction. This tool has an intuitive block-based programming environment, and students do not need be familiar with any programming language to use it. In order to demonstrate the utility of this software in an instructional environment, we developed three tutorials related to basic signal processing, and signal analysis of modern and past climate change. The tutorials use published data to examine the relationship between 20th century atmospheric CO[subscript 2] and global temperature, and the relationship between ocean temperature and solar radiation over the past 300,000 y. The tutorials were administered in two workshops with different communities of students in Earth Science and electrical engineering. Our technical assessments show that the students were able to comprehend basic signal processing and analysis of climate signals using ""J-DSP/ESE."" In the subjective assessments, a vast majority of students stated that the software was easy to learn and use, and that it significantly improved their understanding of climate change.","['ericarchive', 'additional_collections']"
arxiv-1410.7763,Reactive Programming of Simulations in Physics,Frédéric Boussinot,"We consider the Reactive Programming (RP) approach to simulate physical systems. The choice of RP is motivated by the fact that RP genuinely offers logical parallelism, instantaneously broadcast events, and dynamic creation/destruction of parallel components and events. To illustrate our approach, we consider the implementation of a system of Molecular Dynamics, in the context of Java with the Java3D library for 3D visualisation.","['arxiv', 'journals']"
arxiv-1410.4956,Transforming while/do/for/foreach-Loops into Recursive Methods,David Insa,"In software engineering, taking a good election between recursion and iteration is essential because their efficiency and maintenance are different. In fact, developers often need to transform iteration into recursion (e.g., in debugging, to decompose the call graph into iterations); thus, it is quite surprising that there does not exist a public transformation from loops to recursion that handles all kinds of loops. This article describes a transformation able to transform iterative loops into equivalent recursive methods. The transformation is described for the programming language Java, but it is general enough as to be adapted to many other languages that allow iteration and recursion. We describe the changes needed to transform loops of types while/do/for/foreach into recursion. Each kind of loop requires a particular treatment that is described and exemplified.","['arxiv', 'journals']"
NASA_NTRS_Archive_20150000565,NASA Technical Reports Server (NTRS) 20150000565: Benefits of a Unified LaSRS++ Simulation for NAS-Wide and High-Fidelity Modeling,N,"The LaSRS++ high-fidelity vehicle simulation was extended in 2012 to support a NAS-wide simulation mode. Since the initial proof-of-concept, the LaSRS++ NAS-wide simulation is maturing into a research-ready tool. A primary benefit of this new capability is the consolidation of the two modeling paradigms under a single framework to save cost, facilitate iterative concept testing between the two tools, and to promote communication and model sharing between user communities at Langley. Specific benefits of each type of modeling are discussed along with the expected benefits of the unified framework. Current capability details of the LaSRS++ NAS-wide simulations are provided, including the visualization tool, live data interface, trajectory generators, terminal routing for arrivals and departures, maneuvering, re-routing, navigation, winds, and turbulence. The plan for future development is also described.","['NASA_NTRS_Archive', 'additional_collections']"
FreeJavaTutorilaCourses,Free Java Tutorila Courses,Unknown Author,"<span style=""font-size:11pt;line-height:115%;font-family:Calibri, 'sans-serif';"">Techguru lab is best portal where we learn java programming courses,C programming courses,C++ programming courses and others.Our
java tutorial courses will cover every single detail of the core java, but
focus on the most commonly used often questions asked in interview. The rest
you can take java quiz test that will help to know about your ability in java programming.
Once you have a good understanding of our core java tutorial with the help of
examples, will not be so hard. click to this link to know more details about our website.<a href=""http://techgurulab.com/course/java-tutorials/"" rel=""nofollow"">Free java tutorial courses</a></span>","['opensource', 'community']"
DTIC_ADA619875,DTIC ADA619875: Develop a Prototype Personal Health Record Application (PHR-A) that Captures Information About Daily Living Important for Diabetes and Provides Decision Support with Actionable Advice for Diabetes Self Care,D,"The overarching vision of this project is to help people with diabetes better manage their condition by providing them with a tool that will make self-management less confusing, less stressful, and less constrained. This is a two-phase project. In phase 1, we designed an Internet-based and mobile application (software) to assist with the following domains pertinent to diabetes self-management: 1) nutrition/diet (healthy eating) 2) physical activity (being active); 3) blood glucose (self-monitoring); 4) medications (tracking and adherence only); 5) outlook and beliefs; and 6) reducing risks through recommended medical visits, lab testing. Although not a primary focus, the application also addresses weight management and loss. The application is called Tracking My Diabetes (TMD). Using information that TMD receives on these self-management domains (from the user's own monitoring/journaling devices that store data in Microsoft HealthVault and/or from the user's manual data entry directly into TMD), TMD analyzes, interprets, provides feedback, and makes recommendations bolstered by educational content on diabetes self-management. All of the feedback and recommendations are focused on lifestyle. Some feedback provides information on the relationships among the various self-care domains. In phase 2, the project is conducting a brief pilot study of the clinical efficacy of the PHR-A in people with diabetes. The main outcome is glycemic control.","['dticarchive', 'additional_collections']"
DTIC_ADA620863,DTIC ADA620863: Adding Big Data Analytics to GCSS-MC,D,"Global Combat Support System - Marine Corp is a large logistics system designed to replace numerous legacy systems used by the Marine Corps. While it has been in existence for a while, its intended potential has not been fully realized. Therefore, various teams are working hard to develop the analytics that will benefit the community. With the growth of data, the only way these analytics (in Structured Query Language [SQL]) will run efficiently will be on proprietary hardware from Oracle. This research looks at running the same analytics on commodity hardware using Hadoop Distributed File System and Java Map Reduce. The results show that while it takes longer to program in Java (over SQL), the analytics are just as, or even more powerful, as SQL, and the potential to save on hardware cost is significant.","['dticarchive', 'additional_collections']"
NASA_NTRS_Archive_20140017407,NASA Technical Reports Server (NTRS) 20140017407: Use of the NetBeans Platform for NASA Robotic Conjunction Assessment Risk Analysis,N,"The latest Java and JavaFX technologies are very attractive software platforms for customers involved in space mission operations such as those of NASA and the US Air Force. For NASA Robotic Conjunction Assessment Risk Analysis (CARA), the NetBeans platform provided an environment in which scalable software solutions could be developed quickly and efficiently. Both Java 8 and the NetBeans platform are in the process of simplifying CARA development in secure environments by providing a significant amount of capability in a single accredited package, where accreditation alone can account for 6-8 months for each library or software application. Capabilities either in use or being investigated by CARA include: 2D and 3D displays with JavaFX, parallelization with the new Streams API, and scalability through the NetBeans plugin architecture.","['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20150000116,NASA Technical Reports Server (NTRS) 20150000116: Exact and Approximate Probabilistic Symbolic Execution,N,"Probabilistic software analysis seeks to quantify the likelihood of reaching a target event under uncertain environments. Recent approaches compute probabilities of execution paths using symbolic execution, but do not support nondeterminism. Nondeterminism arises naturally when no suitable probabilistic model can capture a program behavior, e.g., for multithreading or distributed systems. In this work, we propose a technique, based on symbolic execution, to synthesize schedulers that resolve nondeterminism to maximize the probability of reaching a target event. To scale to large systems, we also introduce approximate algorithms to search for good schedulers, speeding up established random sampling and reinforcement learning results through the quantification of path probabilities based on symbolic execution. We implemented the techniques in Symbolic PathFinder and evaluated them on nondeterministic Java programs. We show that our algorithms significantly improve upon a state-of- the-art statistical model checking algorithm, originally developed for Markov Decision Processes.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1409.3108,"Pruning, Pushdown Exception-Flow Analysis",Shuying Liang,"Statically reasoning in the presence of exceptions and about the effects of exceptions is challenging: exception-flows are mutually determined by traditional control-flow and points-to analyses. We tackle the challenge of analyzing exception-flows from two angles. First, from the angle of pruning control-flows (both normal and exceptional), we derive a pushdown framework for an object-oriented language with full-featured exceptions. Unlike traditional analyses, it allows precise matching of throwers to catchers. Second, from the angle of pruning points-to information, we generalize abstract garbage collection to object-oriented programs and enhance it with liveness analysis. We then seamlessly weave the techniques into enhanced reachability computation, yielding highly precise exception-flow analysis, without becoming intractable, even for large applications. We evaluate our pruned, pushdown exception-flow analysis, comparing it with an established analysis on large scale standard Java benchmarks. The results show that our analysis significantly improves analysis precision over traditional analysis within a reasonable analysis time.","['arxiv', 'journals']"
arxiv-1409.3533,Static Enforcement of Role-Based Access Control,Asad Ali,"We propose a new static approach to Role-Based Access Control (RBAC) policy enforcement. The static approach we advocate includes a new design methodology, for applications involving RBAC, which integrates the security requirements into the system's architecture. We apply this new approach to policies restricting calls to methods in Java applications. We present a language to express RBAC policies on calls to methods in Java, a set of design patterns which Java programs must adhere to for the policy to be enforced statically, and a description of the checks made by our static verifier for static enforcement.","['arxiv', 'journals']"
DTIC_ADA624393,DTIC ADA624393: Ptolemy Coding Style,D,"Collaborative software projects benefit when participants read code created by other participants. The objective of a coding style is to reduce the fatigue induced by unimportant formatting differences and differences in naming conventions. Although individual programmers will undoubtedly have preferences and habits that differ from the recommendations here, the benefits that flow from following these recommendations far outweigh the inconveniences. Published papers in journals are subject to sim lar stylistic and layout constraints, so such constraints are not new to the academic community. This document describes the coding style used in Ptolemy II, a package with 550K lines of Java and 160 contributing programmers that has been under development since 1996.","['dticarchive', 'additional_collections']"
DTIC_ADA617691,DTIC ADA617691: Project Scheduling Tool for Maintaining Capability Interdependencies and Defence Program Investment: A User's Guide,D,"This document is a user guide for the software product, the Project Scheduling Tool (version 1.4). The tool implements various mathematical Integer Linear Programming models, as well as an approach that visualises and compares model solutions. The scheduler is 'packaged' with public software to allow required calculations to be completely automated and results to be captured in both tabular and graphical form.","['dticarchive', 'additional_collections']"
DTIC_ADA619465,DTIC ADA619465: Development of a Web-Based Distributed Interactive Simulation (DIS) Environment Using JavaScript,D,"This thesis investigated the current infrastructure for web-based simulations using the DIS network protocol. The main technologies studied were WebSockets, WebRTC and WebGL. This thesis sought readily available means to establish networks for interchanging DIS message (PDUs), so the WebSocket gateway server from Open-DIS project was used to construct a Client-Server structure and PeerJS API was used to construct a peer-to-peer structure. WebGL was used to create a scene and render 3D models in browsers. A first-person-shooter tank game was used as a test application with both WebSocket and WebRTC infrastructures. Experiments in this thesis included measuring the rate of sending and receiving DIS packets and analysis of the tank game by profiling tools. All the experiments were run on Chrome and Firefox browsers in a closed network. The experimental results showed that both WebSocket and WebRTC infrastructures were competent enough to support web-based DIS simulation. The results also found the significant differences of performance between Chrome and Firefox. Currently, the best performance is provided by the combination of Firefox using the WebRTC framework. The analysis of the tank game showed that most of the browser s computational resources were spent on the WebGL graphics, with only a small percentage of the resources expended on exchanging DIS packets.","['dticarchive', 'additional_collections']"
arxiv-1409.0252,A Comparative Study of Programming Languages in Rosetta Code,Sebastian Nanz,"Sometimes debates on programming languages are more religious than scientific. Questions about which language is more succinct or efficient, or makes developers more productive are discussed with fervor, and their answers are too often based on anecdotes and unsubstantiated beliefs. In this study, we use the largely untapped research potential of Rosetta Code, a code repository of solutions to common programming tasks in various languages, to draw a fair and well-founded comparison. Rosetta Code offers a large data set for analysis. Our study is based on 7087 solution programs corresponding to 745 tasks in 8 widely used languages representing the major programming paradigms (procedural: C and Go; object-oriented: C# and Java; functional: F# and Haskell; scripting: Python and Ruby). Our statistical analysis reveals, most notably, that: functional and scripting languages are more concise than procedural and object-oriented languages; C is hard to beat when it comes to raw speed on large inputs, but performance differences over inputs of moderate size are less pronounced and allow even interpreted languages to be competitive; compiled strongly-typed languages, where more defects can be caught at compile time, are less prone to runtime failures than interpreted or weakly-typed languages. We discuss implications of these results for developers, language designers, and educators.","['arxiv', 'journals']"
arxiv-1410.0373,Teaching Parallel Programming Using Java,Aamir Shafi,"This paper presents an overview of the ""Applied Parallel Computing"" course taught to final year Software Engineering undergraduate students in Spring 2014 at NUST, Pakistan. The main objective of the course was to introduce practical parallel programming tools and techniques for shared and distributed memory concurrent systems. A unique aspect of the course was that Java was used as the principle programming language. The course was divided into three sections. The first section covered parallel programming techniques for shared memory systems that include multicore and Symmetric Multi-Processor (SMP) systems. In this section, Java threads was taught as a viable programming API for such systems. The second section was dedicated to parallel programming tools meant for distributed memory systems including clusters and network of computers. We used MPJ Express-a Java MPI library-for conducting programming assignments and lab work for this section. The third and the final section covered advanced topics including the MapReduce programming model using Hadoop and the General Purpose Computing on Graphics Processing Units (GPGPU).","['arxiv', 'journals']"
NASA_NTRS_Archive_20140010675,NASA Technical Reports Server (NTRS) 20140010675: NASA Summer 2014,N,Create a motion validation system using Google Glass and Microsoft Kinect to provide instantaneous feedback for integration with NASA tutorials and procedures.,"['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1408.0818,ActiveMonitor: Non-blocking Monitor Executions for Increased Parallelism,Weil-Lun Hung,"We present a set of novel ideas on design and implementation of monitor objects for multi-threaded programs. Our approach has two main goals: (a) increase parallelism in monitor objects and thus provide performance gains (shorter runtimes) for multi-threaded programs, and (b) introduce constructs that allow programmers to easily write monitor-based multi-threaded programs that can achieve these performance gains. We describe the concepts of our framework, called ActiveMonitor, and its prototype implementation using futures. We evaluate its performance in terms of runtimes of multi-threaded programs on linked-list, bounded-buffer, and other fundamental problems implemented in Java. We compare the runtimes of our implementation against implementations using Java's reentrant locks, recently proposed automatic signaling framework AutoSynch, and some other techniques from the literature. The results of of the evaluation indicate that monitors based on our framework provide significant gains in runtime performance in comparison to traditional monitors implemented using Java's reentrant locks.","['arxiv', 'journals']"
3-java-script-2014,3日でマスター JavaScript (2014),Unknown Author,programming language,"['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
NASA_NTRS_Archive_20140016827,NASA Technical Reports Server (NTRS) 20140016827: An Interactive Method of Characteristics Java Applet to Design and Analyze Supersonic Aircraft Nozzles,N,"The Method of Characteristics (MOC) is a classic technique for designing supersonic nozzles. An interactive computer program using MOC has been developed to allow engineers to design and analyze supersonic nozzle flow fields. The program calculates the internal flow for many classic designs, such as a supersonic wind tunnel nozzle, an ideal 2D or axisymmetric nozzle, or a variety of plug nozzles. The program also calculates the plume flow produced by the nozzle and the external flow leading to the nozzle exit. The program can be used to assess the interactions between the internal, external and plume flows. By proper design and operation of the nozzle, it may be possible to lessen the strength of the sonic boom produced at the rear of supersonic aircraft. The program can also calculate non-ideal nozzles, such as simple cone flows, to determine flow divergence and nonuniformities at the exit, and its effect on the plume shape. The computer program is written in Java and is provided as free-ware from the NASA Glenn central software server.","['NASA_NTRS_Archive', 'additional_collections']"
rockinjavainterv0000greg,"Rockin the Java Interview: Become an Interview Master, Learn the Secret to Negotiating the Best Salary and a Comprehensive Question and Answer Reference Guide for the Java Programming Language. What You Don't Know, Is Costing You Thousands of Dollars Each Year",G,No Description Available,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
NASA_NTRS_Archive_20140013278,NASA Technical Reports Server (NTRS) 20140013278: Modeling and Simulation of Aviation Environmental Impact,N,No abstract available,"['NASA_NTRS_Archive', 'additional_collections']"
pubmed-PMC4116604,Bringing the MMFF force field to the RDKit: implementation and validation.,"Tosco, Paolo","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Journal%20of%20Cheminformatics%29"" rel=""nofollow"">Journal of Cheminformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Journal%20of%20Cheminformatics%29%20AND%20volume%3A%286%29"" rel=""nofollow"">volume 6</a>.<h2>Abstract</h2>A general purpose force field such as MMFF94/MMFF94s, which can properly deal with a wide range of diverse structures, is very valuable in the context of a cheminformatics toolkit. Herein we present an open-source implementation of this force field within the RDKit. The new MMFF functionality can be accessed through a C++/C#/Python/Java application programming interface (API) developed along the lines of the one already available for UFF in the RDKit. Our implementation was fully validated against the official validation suite provided by the MMFF authors. All energies and gradients were correctly computed; moreover, atom type and force constants were correctly assigned for 3D molecules built from SMILES strings. To provide full flexibility, the available API provides direct access to include/exclude individual terms from the MMFF energy expression and to carry out constrained geometry optimizations. The availability of a MMFF-capable molecular mechanics engine coupled with the rest of the RDKit functionality and covered by the BSD license is appealing to researchers operating in both academia and industry.","['pubmed', 'journals']"
pubmed-PMC4076281,WImpiBLAST: Web Interface for mpiBLAST to Help Biologists Perform Large-Scale Annotation Using High Performance Computing.,"Sharma, Parichit","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28PLoS%20ONE%29"" rel=""nofollow"">PLoS ONE</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28PLoS%20ONE%29%20AND%20volume%3A%289%29"" rel=""nofollow"">volume 9</a>.<h2>Abstract</h2>The function of a newly sequenced gene can be discovered by determining its sequence homology with known proteins. BLAST is the most extensively used sequence analysis program for sequence similarity search in large databases of sequences. With the advent of next generation sequencing technologies it has now become possible to study genes and their expression at a genome-wide scale through RNA-seq and metagenome sequencing experiments. Functional annotation of all the genes is done by sequence similarity search against multiple protein databases. This annotation task is computationally very intensive and can take days to obtain complete results. The program mpiBLAST, an open-source parallelization of BLAST that achieves superlinear speedup, can be used to accelerate large-scale annotation by using supercomputers and high performance computing (HPC) clusters. Although many parallel bioinformatics applications using the Message Passing Interface (MPI) are available in the public domain, researchers are reluctant to use them due to lack of expertise in the Linux command line and relevant programming experience. With these limitations, it becomes difficult for biologists to use mpiBLAST for accelerating annotation. No web interface is available in the open-source domain for mpiBLAST. We have developed WImpiBLAST, a user-friendly open-source web interface for parallel BLAST searches. It is implemented in Struts 1.3 using a Java backbone and runs atop the open-source Apache Tomcat Server. WImpiBLAST supports script creation and job submission features and also provides a robust job management interface for system administrators. It combines script creation and modification features with job monitoring and management through the Torque resource manager on a Linux-based HPC cluster. Use case information highlights the acceleration of annotation analysis achieved by using WImpiBLAST. Here, we describe the WImpiBLAST web interface features and architecture, explain design decisions, describe workflows and provide a detailed analysis.","['pubmed', 'journals']"
arxiv-1406.6631,Clash of the Lambdas,Aggelos Biboudis,"The introduction of lambdas in Java 8 completes the slate of statically-typed, mainstream languages with both object-oriented and functional features. The main motivation for lambdas in Java has been to facilitate stream-based declarative APIs, and, therefore, easier parallelism. In this paper, we evaluate the performance impact of lambda abstraction employed in stream processing, for a variety of high-level languages that run on a virtual machine (C#, F#, Java and Scala) and runtime platforms (JVM on Linux and Windows, .NET CLR for Windows, Mono for Linux). Furthermore, we evaluate the performance gain that two optimizing libraries (ScalaBlitz and LinqOptimizer) can offer for C#, F# and Scala. Our study is based on small-scale throughput-benchmarking, with significant care to isolate different factors, consult experts on the systems involved, and identify causes and opportunities. We find that Java exhibits high implementation maturity, which is a dominant factor in benchmarks. At the same time, optimizing frameworks can be highly effective for common query patterns.","['arxiv', 'journals']"
arxiv-1406.6163,Group Communication Patterns for High Performance Computing in Scala,Felix P. Hargreaves,"We developed a Functional object-oriented Parallel framework (FooPar) for high-level high-performance computing in Scala. Central to this framework are Distributed Memory Parallel Data structures (DPDs), i.e., collections of data distributed in a shared nothing system together with parallel operations on these data. In this paper, we first present FooPar's architecture and the idea of DPDs and group communications. Then, we show how DPDs can be implemented elegantly and efficiently in Scala based on the Traversable/Builder pattern, unifying Functional and Object-Oriented Programming. We prove the correctness and safety of one communication algorithm and show how specification testing (via ScalaCheck) can be used to bridge the gap between proof and implementation. Furthermore, we show that the group communication operations of FooPar outperform those of the MPJ Express open source MPI-bindings for Java, both asymptotically and empirically. FooPar has already been shown to be capable of achieving close-to-optimal performance for dense matrix-matrix multiplication via JNI. In this article, we present results on a parallel implementation of the Floyd-Warshall algorithm in FooPar, achieving more than 94 % efficiency compared to the serial version on a cluster using 100 cores for matrices of dimension 38000 x 38000.","['arxiv', 'journals']"
arxiv-1406.4087,Java Modular Extension for Operator Overloading,A,"The paper introduces a modular extension (plugin) for Java language compilers and Integrated Development Environments (IDE) which adds operator overloading feature to Java language while preserving backward compatibility. The extension use the idea of library-based language extensibility similar to SugarJ. But unlike most language extensions, it works directly inside the compiler and does not have any external preprocessors. This gives much faster compilation, better language compatibility and support of native developer tools (IDE, build tools). The extension plugs into javac and Eclipse Java compilers as well as in all tools whose use the compilers such as IDEs (Netbeans, Eclipse, IntelliJ IDEA), build tools (ant, maven, gradle), etc. No compiler, IDE, build tools modification needed. Just add a jar library to classpath and/or install a plugin to your IDE. The paper also discuss on how to build such Java compiler extensions. The extension source code is open on http://amelentev.github.io/java-oo/","['arxiv', 'journals']"
pubmed-PMC4058794,Natural language processing pipelines to annotate BioC collections with an application to the NCBI disease corpus.,"Comeau, Donald C.","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Database:%20The%20Journal%20of%20Biological%20Databases%20and%20Curation%29"" rel=""nofollow"">Database: The Journal of Biological Databases and Curation</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Database:%20The%20Journal%20of%20Biological%20Databases%20and%20Curation%29%20AND%20volume%3A%282014%29"" rel=""nofollow"">volume 2014</a>.<h2>Abstract</h2>BioC is a new format and associated code libraries for sharing text and annotations. We have implemented BioC natural language preprocessing pipelines in two popular programming languages: C++ and Java. The current implementations interface with the well-known MedPost and Stanford natural language processing tool sets. The pipeline functionality includes sentence segmentation, tokenization, part-of-speech tagging, lemmatization and sentence parsing. These pipelines can be easily integrated along with other BioC programs into any BioC compliant text mining systems. As an application, we converted the NCBI disease corpus to BioC format, and the pipelines have successfully run on this corpus to demonstrate their functionality. Code and data can be downloaded from http://bioc.sourceforge.net.Database URL:http://bioc.sourceforge.net","['pubmed', 'journals']"
pubmed-PMC4094456,FastaValidator: an open-source Java library to parse and validate FASTA formatted sequences.,"Waldmann, Jost","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28BMC%20Research%20Notes%29"" rel=""nofollow"">BMC Research Notes</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28BMC%20Research%20Notes%29%20AND%20volume%3A%287%29"" rel=""nofollow"">volume 7</a>.<h2>Abstract</h2>Background: Advances in sequencing technologies challenge the efficient importing and validation of FASTA formatted sequence data which is still a prerequisite for most bioinformatic tools and pipelines. Comparative analysis of commonly used Bio*-frameworks (BioPerl, BioJava and Biopython) shows that their scalability and accuracy is hampered. Findings: FastaValidator represents a platform-independent, standardized, light-weight software library written in the Java programming language. It targets computer scientists and bioinformaticians writing software which needs to parse quickly and accurately large amounts of sequence data. For end-users FastaValidator includes an interactive out-of-the-box validation of FASTA formatted files, as well as a non-interactive mode designed for high-throughput validation in software pipelines. Conclusions: The accuracy and performance of the FastaValidator library qualifies it for large data sets such as those commonly produced by massive parallel (NGS) technologies. It offers scientists a fast, accurate and standardized method for parsing and validating FASTA formatted sequence data.","['pubmed', 'journals']"
DTIC_ADA603814,DTIC ADA603814: Arabic Natural Language Processing System Code Library,D,"This technical note provides a brief description of a Java library for Arabic natural language processing (NLP) containing code for training and applying the Arabic NLP system described in the paper A Cross-Task Flexible Transition Model for Arabic Tokenization, Affix Detection, Affix Labeling, POS Tagging, and Dependency Parsing by Stephen Tratz presented at the Statistical Parsing of Morphologically Rich Languages (SPMRL) workshop held in Seattle in conjunction with the Empirical Methods in Natural Language Processing (EMNLP) conference of October 2013. The system is capable of clitic separation, inflectional affix identification and labeling, part-of-speech tagging, and dependency parsing for Arabic. The code, which is extended from previously released graduate student code, also supports English part-of-speech tagging, dependency parsing, and semantic disambiguation tasks. In general, the code library is expected to be of most value to natural language processing researchers.","['dticarchive', 'additional_collections']"
DTIC_ADA609855,DTIC ADA609855: Improving the Automated Detection and Analysis of Secure Coding Violations,D,"Coding errors cause the majority of software vulnerabilities. For example, 64% of the nearly 2,500 vulnerabilities in the National Vulnerability Database in 2004 were caused by programming errors. The CERT Division's Source Code Analysis Laboratory (SCALe) offers conformance testing of C language software systems against the CERT C Secure Coding Standard and the CERT Oracle Secure Coding Standard for Java, using various analysis tools available from commercial software vendors. Unfortunately, the current SCALe analysis process and tools do not collect any statistics about the accuracy of the code analysis tools or about the coding violations they flag, such as frequency of occurrence. This paper describes the approach used to add the ability to collect and statistically analyze data regarding coding violations and tool characteristics along with the initial results. The collected data will be used over time to improve the effectiveness of the SCALe analysis.","['dticarchive', 'additional_collections']"
arxiv-1405.2693,Customisable Handling of Java References in Prolog Programs,Sergio Castro,"Integration techniques for combining programs written in distinct language paradigms facilitate the implementation of specialised modules in the best language for their task. In the case of Java-Prolog integration, a known problem is the proper representation of references to Java objects on the Prolog side. To solve it adequately, multiple dimensions should be considered, including reference representation, opacity of the representation, identity preservation, reference life span, and scope of the inter-language conversion policies. This paper presents an approach that addresses all these dimensions, generalising and building on existing representation patterns of foreign references in Prolog, and taking inspiration from similar inter-language representation techniques found in other domains. Our approach maximises portability by making few assumptions about the Prolog engine interacting with Java (e.g., embedded or executed as an external process). We validate our work by extending JPC, an open-source integration library, with features supporting our approach. Our JPC library is currently compatible with three different open source Prolog engines (SWI, YAP} and XSB) by means of drivers. To appear in Theory and Practice of Logic Programming (TPLP).","['arxiv', 'journals']"
biorxiv-10.1101-005033,bíogo: a simple high-performance bioinformatics toolkit for the Go language,R Daniel Kortschak,"bíogo is a framework designed to ease development and maintenance of computationally intensive bioinformatics applications. The library is written in the Go programming language, a garbage-collected, strictly typed compiled language with built in support for concurrent processing, and performance comparable to C and Java. It provides a variety of data types and utility functions to facilitate manipulation and analysis of large scale genomic and other biological data. bíogo uses a concise and expressive syntax, lowering the barriers to entry for researchers needing to process large data sets with custom analyses while retaining computational safety and ease of code review. We believe bíogo provides an excellent environment for training and research in computational biology because of its combination of strict typing, simple and expressive syntax, and high performance.","['biorxiv', 'journals']"
pubmed-PMC4095002,Towards a HPC-oriented parallel implementation of a learning algorithm for bioinformatics applications.,"D'Angelo, Gianni","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28BMC%20Bioinformatics%29"" rel=""nofollow"">BMC Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28BMC%20Bioinformatics%29%20AND%20volume%3A%2815%29"" rel=""nofollow"">volume 15</a>.<h2>Abstract</h2>Background: The huge quantity of data produced in Biomedical research needs sophisticated algorithmic methodologies for its storage, analysis, and processing. High Performance Computing (HPC) appears as a magic bullet in this challenge. However, several hard to solve parallelization and load balancing problems arise in this context. Here we discuss the HPC-oriented implementation of a general purpose learning algorithm, originally conceived for DNA analysis and recently extended to treat uncertainty on data (U-BRAIN). The U-BRAIN algorithm is a learning algorithm that finds a Boolean formula in disjunctive normal form (DNF), of approximately minimum complexity, that is consistent with a set of data (instances) which may have missing bits. The conjunctive terms of the formula are computed in an iterative way by identifying, from the given data, a family of sets of conditions that must be satisfied by all the positive instances and violated by all the negative ones; such conditions allow the computation of a set of coefficients (relevances) for each attribute (literal), that form a probability distribution, allowing the selection of the term literals. The great versatility that characterizes it, makes U-BRAIN applicable in many of the fields in which there are data to be analyzed. However the memory and the execution time required by the running are of O(n3) and of O(n5) order, respectively, and so, the algorithm is unaffordable for huge data sets. Results: We find mathematical and programming solutions able to lead us towards the implementation of the algorithm U-BRAIN on parallel computers. First we give a Dynamic Programming model of the U-BRAIN algorithm, then we minimize the representation of the relevances. When the data are of great size we are forced to use the mass memory, and depending on where the data are actually stored, the access times can be quite different. According to the evaluation of algorithmic efficiency based on the Disk Model, in order to reduce the costs of the communications between different memories (RAM, Cache, Mass, Virtual) and to achieve efficient I/O performance, we design a mass storage structure able to access its data with a high degree of temporal and spatial locality. Then we develop a parallel implementation of the algorithm. We model it as a SPMD system together to a Message-Passing Programming Paradigm. Here, we adopt the high-level message-passing systems MPI (Message Passing Interface) in the version for the Java programming language, MPJ. The parallel processing is organized into four stages: partitioning, communication, agglomeration and mapping. The decomposition of the U-BRAIN algorithm determines the necessity of a communication protocol design among the processors involved. Efficient synchronization design is also discussed. Conclusions: In the context of a collaboration between public and private institutions, the parallel model of U-BRAIN has been implemented and tested on the INTEL XEON E7xxx and E5xxx family of the CRESCO structure of Italian National Agency for New Technologies, Energy and Sustainable Economic Development (ENEA), developed in the framework of the European Grid Infrastructure (EGI), a series of efforts to provide access to high-throughput computing resources across Europe using grid computing techniques. The implementation is able to minimize both the memory space and the execution time. The test data used in this study are IPDATA (Irvine Primate splice- junction DATA set), a subset of HS3D (Homo Sapiens Splice Sites Dataset) and a subset of COSMIC (the Catalogue of Somatic Mutations in Cancer). The execution time and the speed-up on IPDATA reach the best values within about 90 processors. Then the parallelization advantage is balanced by the greater cost of non-local communications between the processors. A similar behaviour is evident on HS3D, but at a greater number of processors, so evidencing the direct relationship between data size and parallelization gain. This behaviour is confirmed on COSMIC. Overall, the results obtained show that the parallel version is up to 30 times faster than the serial one.","['pubmed', 'journals']"
NASA_NTRS_Archive_20140013440,NASA Technical Reports Server (NTRS) 20140013440: Model Checking Degrees of Belief in a System of Agents,N,"Reasoning about degrees of belief has been investigated in the past by a number of authors and has a number of practical applications in real life. In this paper we present a unified framework to model and verify degrees of belief in a system of agents. In particular, we describe an extension of the temporal-epistemic logic CTLK and we introduce a semantics based on interpreted systems for this extension. In this way, degrees of beliefs do not need to be provided externally, but can be derived automatically from the possible executions of the system, thereby providing a computationally grounded formalism. We leverage the semantics to (a) construct a model checking algorithm, (b) investigate its complexity, (c) provide a Java implementation of the model checking algorithm, and (d) evaluate our approach using the standard benchmark of the dining cryptographers. Finally, we provide a detailed case study: using our framework and our implementation, we assess and verify the situational awareness of the pilot of Air France 447 flying in off-nominal conditions.","['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20140010016,NASA Technical Reports Server (NTRS) 20140010016: Property Differencing for Incremental Checking,N,"This paper introduces iProperty, a novel approach that facilitates incremental checking of programs based on a property di erencing technique. Speci cally, iProperty aims to reduce the cost of checking properties as they are initially developed and as they co-evolve with the program. The key novelty of iProperty is to compute the di erences between the new and old versions of expected properties to reduce the number and size of the properties that need to be checked during the initial development of the properties. Furthermore, property di erencing is used in synergy with program behavior di erencing techniques to optimize common regression scenarios, such as detecting regression errors or checking feature additions for conformance to new expected properties. Experimental results in the context of symbolic execution of Java programs annotated with properties written as assertions show the e ectiveness of iProperty in utilizing change information to enable more ecient checking.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1404.6608,"OpenJML: Software verification for Java 7 using JML, OpenJDK, and Eclipse",D,"OpenJML is a tool for checking code and specifications of Java programs. We describe our experience building the tool on the foundation of JML, OpenJDK and Eclipse, as well as on many advances in specification-based software verification. The implementation demonstrates the value of integrating specification tools directly in the software development IDE and in automating as many tasks as possible. The tool, though still in progress, has now been used for several college-level courses on software specification and verification and for small-scale studies on existing Java programs.","['arxiv', 'journals']"
arxiv-1404.6390,JyNI - Using native CPython-Extensions in Jython,S,"Jython is a Java based Python implementation and the most seamless way to integrate Python and Java. However, it does not support native extensions written for CPython like NumPy or SciPy. Since most scientific Python code fundamentally depends on exactly such native extensions directly or indirectly, it usually cannot be run with Jython. JyNI (Jython Native Interface) aims to close this gap. It is a layer that enables Jython users to load native CPython extensions and access them from Jython the same way as they would do in CPython. In order to leverage the JyNI functionality, you just have to put it on the Java classpath when Jython is launched. It neither requires you to recompile the extension code, nor to build a customized Jython fork. That means, it is binary compatible with existing extension builds. At the time of writing, JyNI does not fully implement the Python C-API and it is only capable of loading simple examples that only involve most basic built-in types. The concept is rather complete though and our goal is to provide the C-API needed to load NumPy as soon as possible. After that we will focus on SciPy and others. We expect that our work will also enable Java developers to use CPython extensions like NumPy in their Java code.","['arxiv', 'journals']"
DTIC_ADA600389,DTIC ADA600389: Database Entity Persistence with Hibernate for the Network Connectivity Analysis Model,D,"This report addresses the design and architecture of data persistence for the Network Connectivity Analysis Model application developed in the Java language and using the Hibernate Application Programming Interface as the object-relational mapping library. The report also addresses the database architecture, the Class/Entity domain model design, and the Java design patterns incorporated, such as the Factory and Data Access Object design patterns for the Hibernate implementation.","['dticarchive', 'additional_collections']"
NASA_NTRS_Archive_20150002694,NASA Technical Reports Server (NTRS) 20150002694: State Event Models for the Formal Analysis of Human-Machine Interactions,N,"The work described in this paper was motivated by our experience with applying a framework for formal analysis of human-machine interactions (HMI) to a realistic model of an autopilot. The framework is built around a formally defined conformance relation called ""fullcontrol"" between an actual system and the mental model according to which the system is operated. Systems are well-designed if they can be described by relatively simple, full-control, mental models for their human operators. For this reason, our framework supports automated generation of minimal full-control mental models for HMI systems, where both the system and the mental models are described as labelled transition systems (LTS). The autopilot that we analysed has been developed in the NASA Ames HMI prototyping tool ADEPT. In this paper, we describe how we extended the models that our HMI analysis framework handles to allow adequate representation of ADEPT models. We then provide a property-preserving reduction from these extended models to LTSs, to enable application of our LTS-based formal analysis algorithms. Finally, we briefly discuss the analyses we were able to perform on the autopilot model with our extended framework.","['NASA_NTRS_Archive', 'additional_collections']"
pubmed-PMC4080738,KAnalyze: a fast versatile pipelined K-mer toolkit.,"Audano, Peter","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29"" rel=""nofollow"">Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29%20AND%20volume%3A%2830%29"" rel=""nofollow"">volume 30</a>.<h2>Abstract</h2>Motivation: Converting nucleotide sequences into short overlapping fragments of uniform length, k-mers, is a common step in many bioinformatics applications. While existing software packages count k-mers, few are optimized for speed, offer an application programming interface (API), a graphical interface or contain features that make it extensible and maintainable. We designed KAnalyze to compete with the fastest k-mer counters, to produce reliable output and to support future development efforts through well-architected, documented and testable code. Currently, KAnalyze can output k-mer counts in a sorted tab-delimited file or stream k-mers as they are read. KAnalyze can process large datasets with 2 GB of memory. This project is implemented in Java 7, and the command line interface (CLI) is designed to integrate into pipelines written in any language.Results: As a k-mer counter, KAnalyze outperforms Jellyfish, DSK and a pipeline built on Perl and Linux utilities. Through extensive unit and system testing, we have verified that KAnalyze produces the correct k-mer counts over multiple datasets and k-mer sizes.Availability and implementation: KAnalyze is available on SourceForge:https://sourceforge.net/projects/kanalyze/Contact:fredrik.vannberg@bi ology.gatech.eduSupplementary information: Supplementary data are available at Bioinformatics online.","['pubmed', 'journals']"
NASA_NTRS_Archive_20140013445,NASA Technical Reports Server (NTRS) 20140013445: NASA VERVE: Interactive 3D Visualization Within Eclipse,N,"At NASA, we develop myriad Eclipse RCP applications to provide situational awareness for remote systems. The Intelligent Robotics Group at NASA Ames Research Center has developed VERVE - a high-performance, robot user interface that provides scientists, robot operators, and mission planners with powerful, interactive 3D displays of remote environments.VERVE includes a 3D Eclipse view with an embedded Java Ardor3D scenario, including SWT and mouse controls which interact with the Ardor3D camera and objects in the scene. VERVE also includes Eclipse views for exploring and editing objects in the Ardor3D scene graph, and a HUD (Heads Up Display) framework allows Growl-style notifications and other textual information to be overlayed onto the 3D scene. We use VERVE to listen to telemetry from robots and display the robots and associated scientific data along the terrain they are exploring; VERVE can be used for any interactive 3D display of data.VERVE is now open source. VERVE derives from the prior Viz system, which was developed for Mars Polar Lander (2001) and used for the Mars Exploration Rover (2003) and the Phoenix Lander (2008). It has been used for ongoing research with IRG's K10 and KRex rovers in various locations. VERVE was used on the International Space Station during two experiments in 2013 - Surface Telerobotics, in which astronauts controlled robots on Earth from the ISS, and SPHERES, where astronauts control a free flying robot on board the ISS.We will show in detail how to code with VERVE, how to interact between SWT controls to the Ardor3D scenario, and share example code.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1403.3752,Martta: A C++ Language Workbench,G,"Language-orientated programming promises to elevate programmer productivity through increased abstrac- tion capabilities. Structural programming environments provide apparatus to reduce the difficulties with syntax. The language workbench, a conceptual combination of these two approaches, is a comparatively novel approach to software development and has so far been attempted only in dynamic-dispatch, run-time-compiled languages (e.g. Java). However, it must be remembered that several fields of engineering exist, each having their own priorities. In the video games industry, where large, complex and diverse projects are routinely developed, efficiency is paramount and as such C++, as a development platform, is widely used. I explore the possibility of a language workbench capable of a gradual transition in both skills and code from the traditional C++ development environment. This article is the design for a language workbench. It uses novel techniques including a context-sensitive event- driven input system and a hybrid single/multiple-inherited class model and through a prototype implementation demon- strates that is both concise and practical for C++. I refute the hitherto implicit hypothesis that the language workbench paradigm is not applicable to the C++ language, showing that C++ can be used for creating an effective development framework usable in otherwise pure-C++ programming environments.","['arxiv', 'journals']"
pubmed-PMC3949006,SoyFN: a knowledge database of soybean functional networks.,"Xu, Yungang","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Database:%20The%20Journal%20of%20Biological%20Databases%20and%20Curation%29"" rel=""nofollow"">Database: The Journal of Biological Databases and Curation</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Database:%20The%20Journal%20of%20Biological%20Databases%20and%20Curation%29%20AND%20volume%3A%282014%29"" rel=""nofollow"">volume 2014</a>.<h2>Abstract</h2>Many databases for soybean genomic analysis have been built and made publicly available, but few of them contain knowledge specifically targeting the omics-level gene–gene, gene–microRNA (miRNA) and miRNA–miRNA interactions. Here, we present SoyFN, a knowledge database of soybean functional gene networks and miRNA functional networks. SoyFN provides user-friendly interfaces to retrieve, visualize, analyze and download the functional networks of soybean genes and miRNAs. In addition, it incorporates much information about KEGG pathways, gene ontology annotations and 3′-UTR sequences as well as many useful tools including SoySearch, ID mapping, Genome Browser, eFP Browser and promoter motif scan. SoyFN is a schema-free database that can be accessed as a Web service from any modern programming language using a simple Hypertext Transfer Protocol call. The Web site is implemented in Java, JavaScript, PHP, HTML and Apache, with all major browsers supported. We anticipate that this database will be useful for members of research communities both in soybean experimental science and bioinformatics.Database URL:http://nclab.hit.edu.cn/SoyFN","['pubmed', 'journals']"
pubmed-PMC4016760,The jmzQuantML programming interface and validator for the mzQuantML data standard.,"Qi, Da","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Proteomics%29"" rel=""nofollow"">Proteomics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Proteomics%29%20AND%20volume%3A%2814%29"" rel=""nofollow"">volume 14</a>.<h2>Abstract</h2>The mzQuantML standard from the HUPO Proteomics Standards Initiative has recently been released, capturing quantitative data about peptides and proteins, following analysis of MS data. We present a Java application programming interface (API) for mzQuantML called jmzQuantML. The API provides robust bridges between Java classes and elements in mzQuantML files and allows random access to any part of the file. The API provides read and write capabilities, and is designed to be embedded in other software packages, enabling mzQuantML support to be added to proteomics software tools (http://code.google.com/p/jmzquantml/). The mzQuantML standard is designed around a multilevel validation system to ensure that files are structurally and semantically correct for different proteomics quantitative techniques. In this article, we also describe a Java software tool (http://code.google.com/p/mzquantml-validator/) for validating mzQuantML files, which is a formal part of the data standard.","['pubmed', 'journals']"
arxiv-1401.5292,Non-Termination Analysis of Java Bytecode,Étienne Payet,"We introduce a fully automated static analysis that takes a sequential Java bytecode program P as input and attempts to prove that there exists an infinite execution of P. The technique consists in compiling P into a constraint logic program P_CLP and in proving non-termination of P_CLP; when P consists of instructions that are exactly compiled into constraints, the non-termination of P_CLP entails that of P. Our approach can handle method calls; to the best of our knowledge, it is the first static approach for Java bytecode able to prove the existence of infinite recursions. We have implemented our technique inside the Julia analyser. We have compared the results of Julia on a set of 113 programs with those provided by AProVE and Invel, the only freely usable non-termination analysers comparable to ours that we are aware of. Only Julia could detect non-termination due to infinite recursion.","['arxiv', 'journals']"
arxiv-1401.3145,Bartering integer commodities with exogenous prices,Stefano Nasini,"The analysis of markets with indivisible goods and fixed exogenous prices has played an important role in economic models, especially in relation to wage rigidity and unemployment. This research report provides a mathematical and computational details associated to the mathematical programming based approaches proposed by Nasini et al. (accepted 2014) to study pure exchange economies where discrete amounts of commodities are exchanged at fixed prices. Barter processes, consisting in sequences of elementary reallocations of couple of commodities among couples of agents, are formalized as local searches converging to equilibrium allocations. A direct application of the analyzed processes in the context of computational economics is provided, along with a Java implementation of the approaches described in this research report.","['arxiv', 'journals']"
2014IntroduccionALaProgramacionConPython3,Introducción a la programación con Python 3,Andrés Marzal Varó,"<i>Introducción a la programación con Python 3</i> desarrolla el temario de la asignatura «Programación I» que se imparte durante el primer semestre de primer curso en los grados en Ingeniería Informática y en Matemática Computacional de la Universitat Jaume I. En ella se pretende enseñar a programar y se utiliza Python como primer lenguaje de programación.<br /><br />¿Por qué Python? Python es un lenguaje de muy alto nivel que permite expresar algoritmos de forma casi directa (ha llegado a considerarse «pseudocódigo ejecutable») y hemos comprobado que se trata de un lenguaje particularmente adecuado para la enseñanza de la programación. Esta impresión se ve corroborada por la adopción de Python como lenguaje introductorio en otras universidades. Otros lenguajes, como Java, C o C#, exigen una gran atención a multitud de detalles que dificultan la implementación de algoritmos a un estudiante que se enfrenta por primera vez al desarrollo de programas. No obstante, son lenguajes de programación de referencia y deberían formar parte del currículum de todo informático. Aprender Python como primer lenguaje permite estudiar las estructuras de control y de datos básicas con un alto nivel de abstracción y, así, entender mejor qué supone exactamente la mayor complejidad de la programación en otros lenguajes y hasta qué punto es mayor el grado de control que nos otorgan. Por ejemplo, una vez se han estudiado listas en Python, su implementación en otros lenguajes permite al estudiante no perder de vista el objetivo último: construir una entidad con cierto nivel de abstracción usando las herramientas concretas proporcionadas por el lenguaje. De algún modo, pues, Python ayuda al aprendizaje posterior de otros lenguajes, lo que proporciona al estudiante una visión más rica y completa de la programación. Las similitudes y diferencias entre los distintos lenguajes permiten al estudiante inferir más fácilmente qué es fundamental y qué accesorio o accidental al diseñar programas en un lenguaje de programación cualquiera.<br /><br />¿Y por qué otro libro de texto introductorio a la programación? Ciertamente hay muchos libros que enseñan a programar desde cero. Creemos que este texto se diferencia de ellos en la forma en que se exponen y desarrollan los contenidos. Hemos procurado adoptar siempre el punto de vista del estudiante y presentar los conceptos y estrategias para diseñar programas básicos paso a paso, incrementalmente. La experiencia docente nos ha ido mostrando toda una serie de líneas de razonamiento inapropiadas, errores y vicios en los que caen muchos estudiantes. El texto intenta exponer, con mayor o menor fortuna, esos razonamientos, errores y vicios para que el estudiante los tenga presentes y procure evitarlos. Así, en el desarrollo de algunos programas llegamos a ofrecer versiones erróneas para, acto seguido, estudiar sus defectos y mostrar una versión corregida. El libro está repleto de cuadros que pretenden profundizar en aspectos marginales, llamar la atención sobre algún extremo, ofrecer algunas pinceladas de historia o, sencillamente, desviarse de lo sustancial con alguna digresión que podría resultar motivadora para el estudiante.<br /><br /><br /><a href=""https://openlibrary.org"" rel=""nofollow""><img title=""[Open Library icon]"" alt=""[Open Library icon]"" style=""height:16px;vertical-align:middle;"" src=""https://archive.org/images/open-library-icon.gif"" /></a>This book has an <a href=""https://openlibrary.org/books/OL26384048M/Introducci%C3%B3n_a_la_programaci%C3%B3n_con_Python_3"" rel=""nofollow"">editable web page</a> on <a href=""https://openlibrary.org/"" rel=""nofollow"">Open Library</a>.","['opensource', 'community']"
ERIC_ED558339,"ERIC ED558339: Proceedings of the Seventh International Conference on Educational Data Mining (EDM) (7th, London, United Kingdom, July 4-7, 2014)",E,"The 7th International Conference on Education Data Mining held on July 4th-7th, 2014, at the Institute of Education, London, UK is the leading international forum for high-quality research that mines large data sets in order to answer educational research questions that shed light on the learning process. These data sets may come from the traces that students leave when they interact, either individually or collaboratively, with learning management systems, interactive learning environments, intelligent tutoring systems, educational games or when they participate in a data-rich learning context. The types of data therefore range from raw log files to eyetracking devices and other sensor data. Being hosted in London, UK the theme of the conference is ""Big Data--Big Ben--Education Data Mining for Big Impact in Teaching and Learning"". In this seventh year of EDM conferences, it is clear that the field is continuing to grow at a rapid pace. With renewed focus on education driven by big data learning analytics has put the EDM field in the center of growing interest. Traditional educational technologies, intelligent tutoring systems, educational games, and learning management systems all continue to generate growing amounts of data that are becoming available for analysis. The new interest in MOOCs and their promise to reach thousands or even hundreds of thousands of students per class requires techniques for feedback and grading that are being researched in the EDM domain. The conference submissions this year also continue to grow. A tremendous amount of work has gone into bringing this conference together, and the following are presented: (1) The Field of EDM: Where We Came from and Where We're Going (Joseph Beck); (2) Generative Adaptivity for Optimization of the Learning Ecosystem (Zoran Popovic; (3) 150K+ Online Students at a Time: How to Understand What's Happening in Online 4 Learning (Daniel Russell); (4) Adaptive Practice of Facts in Domains with Varied Prior Knowledge (Jan Papoušek, Radek Pelánek and Vít Stanislav); (5) Alternating Recursive Method for Q-Matrix Learning (Yuan Sun, Shiwei Ye, Shunya Inoue and Yi Sun); (6) Application of Time Decay Functions and the Elo System in Student Modeling (Radek Pelánek); (7) Causal Discovery with Models: Behavior, Affect, and Learning in Cognitive Tutor Algebra (Stephen Fancsali); (8) Choice-Based Assessment: Can Choices Made in Digital Games Predict 6th-Grade Students' Math Test Scores? (Min Chi, Daniel Schwartz, Kristen Pilner Blair and Doris B. Chin); (9) Comparing Expert and Metric-Based Assessments of Association Rule Interestingness (Diego Luna Bazaldua, Ryan Baker and Maria Ofelia San Pedro); (10) Different Parameters - Same Prediction: An Analysis of Learning Curves (Tanja Käser, Kenneth Koedinger and Markus Gross); (11) Discovering Gender-Specific Knowledge from Finnish Basic Education Using PISA Scale Indices (Mirka Saarela and Tommi Kärkkäinen); (12) EduRank: A Collaborative Filtering Approach to Personalization in E-Learning (Avi Segal, Ziv Katzir, Kobi Gal, Guy Shani and Bracha Shapira); (13) Exploring Differences in Problem Solving with Data-Driven Approach Maps (Michael Eagle and Tiffany Barnes); (14) General Features in Knowledge Tracing: Applications to Model Multiple Subskills, Temporal Item Response Theory, and Expert Knowledge (José González-Brenes, Yun Huang and Peter Brusilovsky); (15) Generating Hints for Programming Problems Using Intermediate Output ( Barry Peddycord III, Andrew Hicks and Tiffany Barnes); (16) Integrating Latent-Factor and Knowledge-Tracing Models to Predict Individual Differences in Learning (Mohammad Khajah, Rowan Wing, Robert Lindsey and Michael Mozer); (17) Interpreting Model Discovery and Testing Generalization to a New Dataset (Ran Liu, Elizabeth A. McLaughlin and Kenneth R. Koedinger); (18) Learning Individual Behavior in an Educational Game: A Data-Driven Approach (Seong Jae Lee, Yun-En Liu and Zoran Popovic); (19) Predicting Learning and Affect from Multimodal Data Streams in Task-Oriented Tutorial Dialogue (Joseph Grafsgaard, Joseph Wiggins, Kristy Elizabeth Boyer, Eric Wiebe and James Lester); (20) Sentiment Analysis in MOOC Discussion Forums: What does It Tell Us? (Miaomiao Wen, Diyi Yang and Carolyn Rose); (21) The Effect of Mutual Gaze Perception on Students' Verbal Coordination (Bertrand Schneider and Roy Pea); (22) The Opportunities and Limitations of Scaling Up Sensor-Free Affect Detection (Michael Wixon, Ivon Arroyo, Kasia Muldner, Winslow Burleson, Cecil Lozano and Beverly Woolf); (23) The Problem Solving Genome: Analyzing Sequential Patterns of Student Work with Parameterized Exercises (Julio Guerra, Shaghayegh Sahebi, Peter Brusilovsky and Yu-Ru Lin); (24) Trading Off Scientific Knowledge and User Learning with Multi-Armed Bandits (Yun-En Liu, Travis Mandel, Emma Brunskill and Zoran Popovic); (25) Vertical and Stationary Scales for Progress Maps (Russell Almond, Ilya Goldin, Yuhua Guo and Nan Wang); (26) Visualization and Confirmatory Clustering of Sequence Data from a Simulation- Based Assessment Task (Yoav Bergner, Zhan Shu and Alina von Davier); (27) Who's in Control?: Categorizing Nuanced Patterns of Behaviors within a Game- Based Intelligent Tutoring System (Erica Snow, Laura Allen, Devin Russell and Danielle McNamara); (28) Acquisition of Triples of Knowledge from Lecture Notes: A Natural Language Processing Approach (Thushari Atapattu, Katrina Falkner and Nickolas Falkner); (29) Towards Assessing Students' Prior Knowledge from Tutorial Dialogues (Dan Stefanescu, Vasile Rus and Art Graesser); (30) Assigning Educational Videos at Appropriate Locations in Textbooks (Marios Kokkodis, Anitha Kannan and Krishnaram Kenthapadi) (31) Better Data Beats Big Data (Michael Yudelson, Stephen Fancsali, Steven Ritter, Susan Berman, Tristan Nixon and Ambarish Joshi); (32) Building a Student At-Risk Model: An End-to-End Perspective (Lalitha Agnihotri and Alexander Ott); (33) Can Engagement be Compared? Measuring Academic Engagement for Comparison (Ling Tan, Xiaoxun Sun and Siek Toon Khoo); (34) Comparison of Algorithms for Automatically Building Example-Tracing Tutor Models (Rohit Kumar, Matthew Roy, Bruce Roberts and John Makhoul); (35) Computer-Based Adaptive Speed Tests (Daniel Bengs and Ulf Brefeld); (36) Discovering Students' Complex Problem Solving Strategies in Educational Assessment (Krisztina Tóth, Heiko Rölke, Samuel Greiff and Sascha Wüstenberg); (37) Discovering Theoretically Grounded Predictors of Shallow vs. Deep-Level Learning (Carol Forsyth, Arthur Graesser, Philip I. Pavlik Jr., Keith Millis and Borhan Samei); (38) Domain Independent Assessment of Dialogic Properties of Classroom Discourse (Borhan Samei, Andrew Olney, Sean Kelly, Martin Nystrand, Sidney D'Mello, Nathan Blanchard, Xiaoyi Sun, Marci Glaus and Art Graesser); (39) Empirically Valid Rules for Ill-Defined Domains (Collin Lynch and Kevin Ashley); (40) Entropy: A Stealth Measure of Agency in Learning Environments (Erica Snow, Matthew Jacovina, Laura Allen, Jianmin Dai and Danielle McNamara); (41) Error Analysis as a Validation of Learning Progressions (Brent Morgan, William Baggett and Vasile Rus); (42) Exploration of Student's Use of Rule Application References in a Propositional Logic Tutor (Michael Eagle, Vinaya Polamreddi, Behrooz Mostafavi and Tiffany Barnes); (43) Exploring Real-Time Student Models Based on Natural-Language Tutoring Sessions (Benjamin Nye, Mustafa Hajeer, Carolyn Forsyth, Borhan Samei, Xiangen Hu and Keith Millis); (44) Forum Thread Recommendation for Massive Open Online Courses (Diyi Yang, Mario Piergallini, Iris Howley and Carolyn Rose); (45) Investigating Automated Student Modeling in a Java MOOC (Michael Yudelson, Roya Hosseini, Arto Vihavainen and Peter Brusilovsky); (46) Mining Gap-Fill Questions from Tutorial Dialogues (Nobal B. Niraula, Vasile Rus, Dan Stefanescu and Arthur C. Graesser); (47) Online Optimization of Teaching Sequences with Multi-Armed Bandits (Benjamin Clement, Pierre-Yves Oudeyer, Didier Roy and Manuel Lopes); (48) Predicting MOOC Performance with Week 1 Behavior (Suhang Jiang, Adrienne Williams, Katerina Schenke, Mark Warschauer and Diane O'Dowd); (49) Predicting STEM and Non-STEM College Major Enrollment from Middle School Interaction with Mathematics Educational Software (Maria Ofelia San Pedro, Jaclyn Ocumpaugh, Ryan Baker and Neil Heffernan); (50) Quantized Matrix Completion for Personalized Learning (Andrew Lan, Christoph Studer and Richard Baraniuk); (51) Reengineering the Feature Distillation Process: A Case Study in Detection of Gaming the System (Luc Paquette, Adriana de Carvahlo, Ryan Baker and Jaclyn Ocumpaugh); (52) SKETCHMINER: Mining Learner-Generated Science Drawings with Topological Abstraction (Andy Smith, Eric N. Wiebe, Bradford W. Mott and James C. Lester); (53) Teachers and Students Learn Cyber Security: Comparing Software Quality, Security (Shlomi Boutnaru and Arnon Hershkovitz); (54) Testing the Multimedia Principle in the Real World: A Comparison of Video vs. Text Feedback in Authentic Middle School Math Assignments (Korinn Ostrow and Neil Heffernan); (55) The Importance of Grammar and Mechanics in Writing Assessment and Instruction: Evidence from Data Mining (Scott Crossley, Kris Kyle, Laura Allen and Danielle McNamara); (56) The Long and Winding Road: Investigating the Differential Writing Patterns of High and Low Skilled Writers (Laura Allen, Erica Snow and Danielle McNamara); (57) The Refinement of a Q-Matrix: Assessing Methods to Validate Tasks to Skills Mapping (Michel Desmarais, Behzad Beheshti and Peng Xu); (58) Tracing Knowledge and Engagement in Parallel in an Intelligent Tutoring System (Sarah Schultz and Ivon Arroyo); (59) Tracking Choices: Computational Analysis of Learning Trajectories (Erica Snow, Laura Allen, G.Tanner Jackson and Danielle McNamara); (60) Unraveling Students' Interaction Around a Tangible Interface Using Gesture Recognition (Bertrand Schneider and Paulo Blikstein); (61) A Predictive Model for Video Lectures Classification (Priscylla Silva, Roberth Pinheiro and Evandro Costa); (62) Accepting or Rejecting Students' Self-Grading in their Final Marks by using Data Mining (Javier Fuentes, Cristobal Romero, Carlos García-Martínez and Sebastián Ventura); (63) Analysis and extraction of behaviors by students in lectures 329 Eiji Watanabe, Takashi Ozeki and Takeshi Kohama (64) Analysis of Student Retention and Drop-Out Using Visual Analytics (Jan Géryk and Lubomír Popelínský); (65) Automatic Assessment of Student Reading Comprehension from Short Summaries (Lisa Mintz, Dan Stefanescu, Shi Feng, Sidney D'Mello and Arthur Graesser); (66) Building an Intelligent PAL from the Tutor.com Session Database Phase 1: Data Mining (Donald Morrison, Benjamin Nye, Borhan Samei, Vivek Varma Datla, Craig Kelly and Vasile Rus); (67) Building Automated Detectors of Gameplay Strategies to Measure Implicit Science Learning (Elizabeth Rowe, Ryan Baker, Jodi Asbell-Clarke, Emily Kasman and William Hawkins); (68) Challenges on Applying BKT to Model Student Knowledge in Multi-Context Online Learning Environment (Wolney Mello Neto and Eduardo Barbosa); (69) Combination of Statistical and Semantic Data Sources for the Improvement of Software Engineering Courses (Michael Koch, Markus Ring, Florian Otto and Dieter Landes); (70) Comparing Learning in a MOOC and a Blended On-Campus Course (Kimberly Colvin, John Champaign, Alwina Liu, Colin Fredericks and David Pritchard); (71) Cost-Effective, Actionable Engagement Detection at Scale (Ryan Baker and Jaclyn Ocumpaugh); (72) Data Mining of Undergraduate Course Evaluations (Sohail Javaad Syed, Yuheng Helen Jiang and Lukasz Golab); (73) Data Sharing: Low-Cost Sensors for Affect and Cognition (Keith Brawner) (74) Diagnosing Algebra Understanding via Inverse Planning (Anna Rafferty and Thomas Griffiths); (75) Discovering and Describing Types of Mathematical Errors (Thomas McTavish and Johann Larusson); (76) Discovering Prerequisite Relationships Among Knowledge Components (Richard Scheines, Elizabeth Silver and Ilya Goldin); (77) Dynamic Re-Composition of Learning Groups Using PSO-Based Algorithms (Zhilin Zheng and Niels Pinkwart); (78) Educational Data Mining and Analyzing of Student Learning Outcomes from the Perspective of Learning Experience (Zhongmei Shu, Qiong-Fei Qu and Lu-Qi Feng); (79) Using EEG in Knowledge Tracing (Yanbo Xu, Kai-Min Chang, Yueran Yuan and Jack Mostow); (80) Exploring Engaging Dialogues in Video Discussions (I-Han Hsiao, Hui Soo Chae, Manav Malhotra, Ryan Baker and Gary Natriello); (81) Exploring Indicators from Keyboard and Mouse Interactions to Predict the User Affective State (Sergio Salmeron-Majadas, Olga C. Santos and Jesus G. Boticario); (82) Extracting Latent Skills from Time Series of Asynchronous and Incomplete Examinations (Shinichi Oeda, Yu Ito and Kenji Yamanishi); (83) Generalizing and Extending a Predictive Model for Standardized Test Scores Based On Cognitive Tutor Interactions (Ambarish Joshi, Stephen Fancsali, Steven Ritter, Tristan Nixon and Susan Berman); (84) How Patterns in Source Codes of Students Can Help in Detection of Their Programming Skills? (Štefan Pero and Tomáš Horváth); (85) A Preliminary Investigation of Learner Characteristics for Unsupervised Dialogue Act Classification (Aysu Ezen-Can and Kristy Elizabeth Boyer); (86) Improving Retention Performance Prediction with Prerequisite Skill Features (Xiaolu Xiong, Seth Adjei and Neil Heffernan); (87) Indicator Visualization for Adaptive Exploratory Learning Environments (Sergio Gutierrez Santos, Manolis Mavrikis, Alex Poulovassilis and Zheng Zhu); (88) Learning Aid Use Patterns and Their Impact on Exam Performance in Online Developmental Mathematics (Nicole Forsgren Velasquez, Ilya Goldin, Taylor Martin and Jason Maughan); (89) Learning to Teach like a Bandit (Mykola Pechenizkiy and Pedro A. Toledo); (90) Matching Hypothesis Text in Diagrams and Essays (Collin Lynch, Mohammad Falakmasir and Kevin Ashley); (91) Matrix Factorization Feasibility for Sequencing and Adaptive Support in Intelligent Tutoring Systems (Carlotta Schatten, Ruth Janning, Manolis Mavrikis and Lars Schmidt-Thieme); (92) Microgenetic Designs for Educational Data Mining Research (Taylor Martin, Nicole Forsgren Velasquez, Ani Aghababyan, Jason Maughan and Philip Janisiewicz); (93) Mining and Identifying Relationships among Sequential Patterns in Multi-Feature, Hierarchical Learning Activity Data (Cheng Ye, John Kinnebrew and Gautam Biswas); (94) Mining Coherent Evolution Patterns in Education through Biclustering (André Vale, Sara C. Madeira and Claudia Antunes); (95) Mining Multi-Dimensional Patterns for Student Modelling (Andreia Silva and Claudia Antunes); (96) Mining Reading Comprehension Within Educational Objective Frameworks (Terry Peckham and Gordon McCalla); (97) Mining Students' Strategies to enable Collaborative Learning (Sergio Gutierrez-Santos, Manolis Mavrikis and Alexandra Poulovassilis); (98) Modeling Student Socioaffective Responses to Group Interactions in a Collaborative Online Chat Environment (Whitney Cade, Nia Dowell, Art Graesser, Yla Tausczik and James Pennebaker); (99) Now We're Talkin': Leveraging the Power of Natural Language Processing to Inform ITS Development (Laura Allen, Erica Snow and Danielle McNamara); (100) Peer Assessment in the First French MOOC: Analyzing Assessors' Behavior (Matthieu Cisel, Rémi Bachelet and Eric Bruillard); (101) Peer Influence on Attrition in Massively Open Online Courses (Diyi Yang, Miaomiao Wen and Carolyn Rose); (102) Predicting Students' Learning Achievement by Using Online Learning Patterns in Blended Learning Environments: Comparison of Two Cases on Linear and Non-Linear Model (Jeong Hyun Kim, Yeonjeong Park, Jongwoo Song and Il-Hyun Jo); (103) Predictive Performance of Prevailing Approaches to Skills Assessment Techniques: Insights from Real vs. Synthetic Data Sets (Behzad Beheshti and Michel Desmarais); (104) Recent-Performance Factors Analysis (April Galyardt and Ilya Goldin); (105) Refining Learning Maps with Data Fitting Techniques: Searching for Better Fitting Learning Maps (Seth Adjei, Douglas Selent, Neil Heffernan, Zach Pardos, Angela Broaddus and Neal Kingston); (106) Relevancy Prediction of Micro-Blog Questions in an Educational Setting (Mariheida Cordova-Sanchez, Parameswaran Raman, Luo Si and Jason Fish); (107) Singular Value Decomposition in Education: A Case Study on Recommending Courses (Fábio Carballo and Claudia Antunes); (108) The Predictive Power of SNA Metrics in Education (Diego García-Saiz, Camilo Palazuelos and Marta Zorrilla); (109) Data-Driven Curriculum Design: Mining the Web to Make Better Teaching Decisions (Antonio Moretti, Jose Gonzalez-Brenes and Katherine McKnight); (110) Towards IRT-Based Student Modeling from Problem Solving Steps (Manuel Hernando, Eduardo Guzmán, Sergey Sosnovsky, Eric Andres and Susanne Narciss); (111) Towards Uncovering the Mysterious World of Math Homework (Mingyu Feng); (112) Towards Using Similarity Measure for Automatic Detection of Significant Behaviors from Continuous Data (Ben-Manson Toussaint, Vanda Luengo and Jérôme Tonetti); (113) Using Data Mining to Automate ADDIE (Fritz Ray, Keith Brawner and Robby Robson); (114) Using Multimodal Learning Analytics to Study Learning Mechanisms in Hands-on Environments (Marcelo Worsley and Paulo Blikstein); (115) Using Problem Solving Times and Expert Opinion to Detect Skills (Juraj Nižnan, Radek Pelánek and Jirí Rihák); (116) Toward Collaboration Sensing: Multimodal Detection of the Chameleon Effect in Collaborative Learning Settings (Bertrand Schneider); (117) The Use of Student Confidence for Prediction & Resolving Individual Student Knowledge Structure (Charles Lang); (118) Nonverbal Communication and Teaching Performance (Roghayeh Barmaki); (119) Data-Driven Feedback Beyond Next-Step Hints (Michael Eagle and Tiffany Barnes); (120) E3: Emotions, Engagement and Educational Games (Ani Aghababyan); (121) MOOC Leaner Motivation and Learning Pattern Discovery--A Research Prospectus Paper (Yuan Wang); and (122) Personalization and Incentive Design in E-learning Systems (Avi Segal). Workshops presented include: (1) Graph-based Educational Data Mining (G-EDM) (Collin F. Lynch, Tiffany Barnes); (2) Non-Cognitive Factors & Personalization for Adaptive Learning (NCFPAL@EDM) (Steven Ritter, Stephen E. Fancsali); (3) Approaching Twenty Years of Knowledge Tracing: Lessons Learned, Open Challenges, and Promising Developments (Michael Yudelson, José P. González-Brenes, Michael Mozer); and (4) Feedback from Multimodal Interaction in Learning Management Systems (Lars Schmidt-Thieme, Arvid Kappas, Carles Sierra, Emanuele Ruffaldi). References are included in each presentation.","['ericarchive', 'additional_collections']"
EloquentJavaScript2ndEd,"Eloquent Java Script, 2nd Ed.",M,"<span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">JavaScript lies at the heart of almost every modern web application, from social apps to the newest browser-based games. Though simple for beginners to pick up and play with, JavaScript is a flexible, complex language that you can use to build full-scale applications. </span><br style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"" /><br style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"" /><span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">Eloquent JavaScript, 2nd Edition dives deep into the JavaScript language to show you how to write beautiful, effective code. Author Marijn Haverbeke immerses you in example code from the start, while exercises and full-chapter projects give you hands-on experience with writing your own programs. As you build projects such as an artificial life simulation, a simple programming language, and a paint program, you’ll learn:</span><ul style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;""><li>The essential elements of programming, including syntax, control, and data</li><li>How to organize and clarify your code with object-oriented and functional programming techniques</li><li>How to script the browser and make basic web applications</li><li>How to use the DOM effectively to interact with browsers</li><li>How to harness Node.js to build servers and utilities</li></ul><span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">This edition is thoroughly revised and modernized to reflect the current state of Java­Script and web browsers, with brand-new material, such as a chapter on code performance in Java­Script, and expanded coverage of recursion and closures. All source code is available online in an inter­active sandbox, where you can edit the code, run it, and see its output instantly. </span><br style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"" /><br style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"" /><span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">Isn’t it time you became fluent in the language of the Web? </span><br style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"" /><br style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"" /><span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">There is an online </span><a href=""http://eloquentjavascript.net/"" style=""font-weight:bold;font-size:13px;text-decoration:none;color:rgb(105,148,163);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;line-height:16.8999996185303px;"" rel=""nofollow"">version and sandbox</a><span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">. A paper version of Eloquent JavaScript, including a bonus chapter, is available from </span><a href=""http://www.nostarch.com/ejs2"" style=""font-weight:bold;font-size:13px;text-decoration:none;color:rgb(105,148,163);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;line-height:16.8999996185303px;"" rel=""nofollow"">No Starch Press</a><span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">. They also sell a ""more polished"" ebook version.</span><div><span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;""><br /></span></div><div><span style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">Archived by <a href=""https://unglue.it/work/141410/"" rel=""nofollow"">Unglue.it</a></span></div>","['folkscanomy_miscellaneous', 'folkscanomy', 'additional_collections']"
ExamHandbookM250ObjectOrientedJavaOU2014,Exam Handbook M250 Object-oriented Java programming by The Open University [2014] {005.133--oclc},T,"<div>Scan of booklet</div><div><br /></div><div>Exam Handbook M250 Object-oriented Java programming by The Open University [2014] {005.133--oclc}</div><div><br /></div><div>Classification taken from 'Java, the complete reference ' by Herbert Schidt.<br /></div>","['opensource', 'community']"
androidappsforab0000jack_q1e7,Android apps for absolute beginners,J,"['1 online resource (378 pages) :', 'Updated to include both Android 4.4 and the new Android L, this edition takes you through the process of getting your first Android apps up and running using plain English and practical examples. It will teach you how to: download, install, and configure the latest software needed for Android app development; work efficiently using an integrated development environment (IDE); build useful, attractive applications and get them working immediately; develop apps for both Android 4.4 and Android L; create apps with ease using XML markup and drag-and-drop graphical layout editors; use new media and graphics to skin your app so that it has maximum appeal; create advanced apps combining XML, Java and new media content. --', 'Includes index', 'Online resource; title from PDF title page (SpringerLink, viewed Sep. 5, 2014)']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
androidprogrammi0000hell,Android programming : pushing the limits ,H,"['xvi, 416 p. : 24 cm', 'Pt. 1. Building a better foundation. Fine-tuning your development environment -- Efficient Java code for Android -- Pt. 2. Getting the most out of componets. Componets, manifests, and resources - Android user experience and interface design -- Android user interface operations -- Services and background tasks -- Android IPC -- Mastering broadcast receivers and configuration changes -- Data storage and serialization techniques -- Writing automated tests -- Pt. 3. Pushing the limits. Advanced audio, video, and camera applications -- Secure Android applications -- Maps, location, and activity APIs -- Native code and JNI -- The hidden Android APIs -- Hacking the Android platform -- Networking, web service, and remote APIs -- Communicating with remote devices -- Google Play Services -- Distributing applications on Google Play Store']","['printdisabled', 'internetarchivebooks']"
beginnersguideto0000choj,The beginner's guide to Android game development,C,"['iv, 424 pages : 25 cm', 'The fundamentals of programming -- Beginning Java -- Designing better objects -- Laying the foundation -- Keeping it simple -- The next level -- Beginning Android development -- The Android game framework -- Building the game -- Releasing your game -- Continuing your journey']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningcobolfo0000coug,Beginning COBOL for programmers ,C,"['xxviii, 556 pages : 23 cm', ""Beginning COBOL for Programmersis a comprehensive,sophisticated tutorial and modular skills referenceon the COBOL programming language for established programmers. This book is for you if you are a developer who would like to - or must - add COBOL to your repertoire. Perhaps you recognize the opportunities presented by the current COBOL skills crisis, or you may be working in a mission critical enterprise which retains legacy COBOL applications. Whatever your situation,Beginning COBOL for Programmers meets your needs as an established programmer moving to COBOL. Beginning COBOL for Programmersincludes coverage of the latest COBOL featuresand techniques, including control structures, tabular data, sequential files, procedure divisions, string handling, decimal arithmetic, report writer, object-orientedCOBOL, and more.You'll receive extensive introductions to the core features of the COBOL language, and then find solutions about how to effectively deploy COBOL to build robust mission critical enterprise applications that talk to legacy enterprise applications or aspects of those applications. If you've inherited some legacy COBOL, you'll be able to grasp the COBOL idioms and recognize what's happening in the code you're working with. The death of COBOL has been predicted time and time again, yet COBOL still remains a dominant force at the heart of enterprise computing.In 1997, the Gartner group estimated that of the 300 billion lines of code in the world, 240 billion (80%) were written in COBOL, and that dominance is not greatly changed today.But there is a crisis on the horizon.While the number of COBOL programmers reaching retirement age has created a growing shortage, attempts to rewrite COBOL legacy systems in a more fashionable language have oftennot been successful or put aside for a number of reasons. Therefore, today's enterprise application developers - mostly skilled at C++, C# and Java - can find COBOL skills open new - or old - doors, and this handy reliable reference is a book that you can turn to for your COBOL skills--"", '""A tutorial and modular reference on COBOL for established programmers""--Cover', 'Includes index', 'Introduction to COBOL -- COBOL foundation -- Data declaration in COBOL -- Procedure division basics -- Control structures : selection -- Control structures : iteration -- Introduction to sequential files -- Advanced sequential files -- Edited pictures -- Processing sequential files -- Creating tabular data -- Advanced data declaration -- Searching tabular data -- Sorting and merging -- String manipulation -- Creating large systems -- Direct access files -- The COBOL report writer -- OO-COBOL']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningjava8ga0000jack,Beginning Java 8 games development,J,"['1 online resource (xxvii, 461 pages) :', ""Beginning Java 8 Games Development, written by Java expert and author Wallace Jackson, teaches you the fundamentals of building a highly illustrative game using the Java 8 programming language. In this book, you'll employ open source software as tools to help you quickly and efficiently build your Java game applications. You'll learn how to utilize vector and bit-wise graphics; create sprites and sprite animations; handle events; process inputs; create and insert multimedia and audio files; and more. Furthermore, you'll learn about JavaFX 8, now integrated into Java 8 and which gives you additional APIs that will make your game application more fun and dynamic as well as give it a smaller foot-print; so, your game application can run on your PC, mobile and embedded devices. After reading and using this tutorial, you'll come away with a cool Java-based 2D game application template that you can re-use and apply to your own game making ambitions or for fun"", 'Includes index', 'Online resource; title from PDF title page (EBSCO, viewed December 18, 2014)']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningprogram0004edburd,Beginning programming with Java for dummies,B,"['1 online resource (xiv, 453 pages) :', ""Beginning Programming with Java For Dummies, 4th Edition is a comprehensive guide to learning one of the most popular programming languages worldwide. This book covers basic development concepts and techniques through a Java lens. You'll learn what goes into a program, how to put the pieces together, how to deal with challenges, and how to make it work. The new Fourth Edition has been updated to align with Java 8, and includes new options for the latest tools and techniques. Java is the predominant language used to program Android and cloud apps, and its popularity is surging as app demand rises. Whether you're just tooling around, or embarking on a career, Beginning Programming with Java For Dummies, 4th Edition is a great place to start. Step-by-step instruction, easy-to-read language, and quick navigation make this book the perfect resource for new programmers. You'll begin with the basics before moving into code, with simple, yet detailed explanations every step of the way. Topics include: Learn the language with sample programs and the Java toolkit; Familiarize yourself with decisions, conditions, statements, and information overload; Differentiate between loops and arrays, objects and classes, methods and variables. The book also contains links to additional resources, other programming languages, and guidance as to the most useful classes in the Java API. If you're new to programming languages, Beginning Programming with Java For Dummies, 4th Edition provides the instruction and practice you need to become a confident Java programmer.--Publisher description"", 'Includes index', 'Print version record', 'Getting started with Java programming. Getting started ; Setting up your computer ; Running programs -- Writing your own Java programs. Exploring the parts of a program ; Composing a program ; Using the building blocks : variables, values, and types ; Numbers and types ; Numbers? Who needs numbers? -- Controlling the flow. Forks in the road ; Which way did he go? ; How to flick a virtual switch ; Around and around it goes ; Piles of files : dealing with information overload ; Creating loops within loops ; The old runaround -- Using program unites. Using lops and arrays ; Programming with objects and classes ; Using methods and variables from a Java class ; Creating new Java methods ; Oooey GUI was a worm -- The part of tens. Ten sets of web links ; Ten useful classes in the Java API', 'Includes bibliographical references and index']","['printdisabled', 'internetarchivebooks']"
bigjavaearlyobje0005hors,Big Java : early objects,H,"['1 volume (various pagings) : 26 cm', ""Cay Horstmann's fifth edition of Big Java, Early Objects provides a comprehensive and approachable introduction to fundamental programming techniques and design skills, helping students master basic concepts. The inclusion of advanced chapters makes the text suitable for a 2-semester course sequence, or as a comprehensive reference to programming in Java. The fifth edition includes new exercises from science and business which engages students with real world applications of Java in different industries -- BACK COVER"", 'Includes bibliographical references and index', 'Using objects -- Implementing classes -- Fundamental data types -- Decisions -- Loops -- Arrays and array lists -- Designing classes -- Inheritance -- Interfaces -- Input/output and exception handling -- Object-oriented design -- Recursion -- Sorting and searching -- The Java collections framework -- Basic data structures -- Tree structures -- Generic classes -- Graphical user interfaces -- Streams and binary input/output -- Multithreading (Web only) -- Internet networking (Web only) -- Relational databases (Web only) -- XML (Web only)']","['printdisabled', 'internetarchivebooks']"
bringingartsinto0000unse,Bringing the arts into the library,Unknown Author,"['xi, 233 pages : 23 cm', 'Is your library so engaged in keeping current with technology that it has overlooked bringing the arts into the community? Collaboration with community arts organizations can be a key factor in the success of cultural programming in libraries. Learn about noteworthy and successful programs serving diverse communities and populations, to get ideas for your own environment', 'Includes bibliographical references (pages 209-214) and index', ""The Big Write-In : a collaborative outreach event for writers during National Novel Writing Month / Stacey R. Ewing -- Librarian as teacher : teaching a creative writing class in the school library / Robert Craig Bunch -- Poetry corner : collaboration among us / Sue Samson -- Adult literacy programs and art / Sarah Naumann -- Displaying and promoting visual art at the Nashua Public Library / Carol Luers Eyman -- Utilizing student talent to create appealing library posters / Heather Payne -- Visual arts in the academic library / Jennifer Mayer -- Developing regional heritage music collections / Sandra M. Himel and Lance R. Chance -- Making music collections come alive / Greg MacAyeal -- PLM Players : theater arts at the Patchogue-Medford Library / Jeri Weinkrantz Cohen -- A.R.T. : Art Revolution for Teens / Heather Pippin Zabriskie, Natalie Houston, and Vera Gubnitskaia -- Children in a research library? : creative projects for K-12 students at the Rakow Research Library of the Corning Museum of Glass / Regan Brumagen and Beth Hylen -- Gilpin County Public Library arts programs / Larry Grieco -- The library as canvas : Library Larry's Big Day / Kerol Harrod -- Art works : strengthening downtown with library-arts partnerships / Elizabeth Goldman and Sara Wedell -- Behind the scenes : the legal and contractual aspects of booking exhibits and presenters in a library / Nora Quinlan and Sarah Cisse -- Collaboration as outreach in the 21st century academic library / Allan Cho -- Java City : developing a successful cultural center / Jack G. Montgomery -- Raising money to support the arts in your public library / Florence F. Caddell -- Where to find programming ideas, resources for the arts online / ALA Public Programs Office""]","['printdisabled', 'internetarchivebooks', 'inlibrary']"
centurypsycholo0000unse,The Java virtual machine specification,Unknown Author,"['1 online resource (1 volume) :', 'Annotation', 'Online resource; title from title page (Safari, viewed May 30, 2014)', 'Includes index', 'Print version record']","['printdisabled', 'internetarchivebooks']"
clojureformachin0000wali,Clojure for machine learning : successfully leverage advanced machine learning techniques using the Clojure ecosystem,W,"['1 online resource (292 pages) :', 'A book that brings out the strengths of Clojure programming that have to facilitate machine learning. Each topic is described in substantial detail, and examples and libraries in Clojure are also demonstrated. This book is intended for Clojure developers who want to explore the area of machine learning. Basic understanding of the Clojure programming language is required, but thorough acquaintance with the standard Clojure library or any libraries are not required. Familiarity with theoretical concepts and notation of mathematics and statistics would be an added advantage', 'Includes bibliographical references and index', 'Online resource; title from PDF title page (EBSCO, viewed July 10, 2017)', 'Cover; Copyright; Credits; About the Author; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Working with Matrices; Introducing Leiningen; Representing matrices; Generating matrices; Adding matrices; Multiplying matrices; Transposing and inverting matrices; Interpolating using matrices; Summary; Chapter 2: Understanding Linear Regression; Understanding single-variable linear regression; Understanding gradient descent; Understanding multivariable linear regression; Gradient descent with multiple variables; Understanding ordinary least squares', 'Using linear regression for predictionUnderstanding regularization; Summary; Chapter 3: Categorizing Data; Understanding binary and multiclass classification; Understanding the Bayesian classification; Using the k-nearest neighbors algorithm; Using decision trees; Summary; Chapter 4: Building Neural Networks; Understanding nonlinear regression; Representing neural networks; Understanding multilayer perceptron ANNs; Understanding the backpropagation algorithm; Understanding recurrent neural networks; Building SOMs; Summary; Chapter 5: Selecting and Evaluating Data', 'Understanding underfitting and overfittingEvaluating a model; Understanding feature selection; Varying the regularization parameter; Understanding learning curves; Improving a model; Using cross-validation; Building a spam classifier; Summary; Chapter 6: Building Support Vector Machines; Understanding large margin classification; Alternative forms of SVMs; Linear classification using SVMs; Using kernel SVMs; Sequential minimal optimization; Using kernel functions; Summary; Chapter 7: Clustering Data; Using K-means clustering; Clustering data using clj-ml; Using hierarchical clustering', 'Using Expectation-MaximizationUsing SOMs; Reducing dimensions in the data; Summary; Chapter 8: Anomaly Detection and Recommendation; Detecting anomalies; Building recommendation systems; Content-based filtering; Collaborative filtering; Using the Slope One algorithm; Summary; Chapter 9: Large-scale Machine Learning; Using MapReduce; Querying and storing datasets; Machine learning in the cloud; Summary; Appendix: References; Index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
efficientandroid0000gora,Efficient Android threading ,G,"['1 online resource (1 volume) :', 'Multithreading is essential if you want to create an Android app with a great user experience, but how do you know which techniques can help solve your problem? This practical book describes many asynchronous mechanisms available in the Android SDK, and provides guidelines for selecting the ones most appropriate for the app you?re building. Author Anders Goransson demonstrates the advantages and disadvantages of each technique, with sample code and detailed explanations for using it efficiently. The first part of the book describes the building blocks of asynchronous processing, and the second part covers Android libraries and constructs for developing fast, responsive, and well-structured apps. Understand multithreading basics in Java and on the Android platformLearn how threads communicate within and between processesUse strategies to reduce the risk of memory leaksManage the lifecycle of a basic threadRun tasks sequentially in the background with HandlerThreadUse Java?s Executor Framework to control or cancel threadsHandle background task execution with AsyncTask and IntentServiceAccess content providers with AsyncQueryHandlerUse loaders to update the UI with new data', 'Online resource; title from title page (Safari, viewed May 29, 2014)', 'Includes bibliographical references and index', 'Part I. Fundamentals -- Part II. Asynchronous techniques']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
guidetojavaconci0000stre,Guide to Java : a concise introduction to programming ,S,358 pages : 24 cm,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
introductiontopr0000dean,Introduction to programming with Java : a problem solving approach ,D,"['xxxvii, 922 pages : 24 cm', 'Includes bibliographical references and index', 'Introduction to computers and programming -- Algorithms and design -- Java basics -- Control statements -- Using prebuilt methods -- Object-oriented programming -- Object-oriented programming-additional details -- Software engineering -- Classes with class members -- Arrays -- Arraylists and an introduction to the Java collections framework -- Recursion -- Type details and alternate coding mechanisms -- Aggregation, composition, and inheritance -- Inheritance and polymorphism -- Exception handling -- Files, buffers, channels, and paths -- GUI programming basics -- GUI programming-component layout, additional GUI components']","['printdisabled', 'internetarchivebooks']"
isbn_9781305035607,Acp for Profit Institutional : java Programming I: Java Programming I,Unknown Author,No Description Available,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
isbn_9789351197430,Java 8 In Action: Lambdas Streams And Functional Style Programming,Unknown Author,No Description Available,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
java8pocketguide0000ligu,Java 8 pocket guide ,L,"['xv, 223 pages : 18 cm', ""When you need quick answers for developing or debugging Java programs, this pocket guide provides a handy reference to standard features of the Java programming language and its platform. You'll find helpful programming examples, tables, figures, and lists, as well as Java 8 features such as Lambda Expressions and the Date and Time API. It's an ideal companion, whether you're in the office, in the lab, or on the road"", 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
java8recipes0000june,Java 8 recipes,J,"['1 online resource (xliv, 800 pages) :', 'Java 8 Recipes offers solutions to common programming problems encountered while developing Java-based applications. Fully updated with the newest features and techniques available, Java 8 Recipes provides code examples involving Lambdas, embedded scripting with Nashorn, the new date-time API, stream support, functional interfaces, and much more. Especial emphasis is given to features such as lambdas that are newly introduced in Java 8. Content is presented in the popular problem-solution format: Look up the programming problem that you want to solve. Read the solution. Apply the solution directly in your own code. Problem solved! The problem-solution approach sets Java 8 Recipes apart. Java 8 Recipes is focused less on the language itself and more on what you can do with it that is useful. The book respects your time by always focusing on a task that you might want to perform using the language. Solutions come first. Explanations come later. You are free to crib from the book and apply the code examples directly to your own projects. Covers the newly-released Java 8, including a brand new chapter on lambdas Focuses especially on up-and-coming technologies such as Project Nashorn and Java FX 2.0 Respects your time by focusing on practical solutions you can implement in your own code', 'Online resource; title from PDF title page (EBSCO, viewed November 28, 2017)', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javacompleterefe0009schi,Java : the complete reference,S,"['xxxiv, 1274 pages : 23 cm', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javafordummies0000burd,Java for dummies,B,"['xii, 414 pages : 24 cm', 'As an unstoppably platform independent, object oriented programming language, Java is used for developing web and mobile applications. In this up to date bestselling book, veteran author Barry Burd shows you how to create basic Java objects and clearly explains when you should simply reuse existing code. It explores how the new version of Java offers more robust functionality and new features such as closures to keep Java competitive with more syntax friendly languages like Python and Ruby, it covers object oriented programming basics with Java, code reuse, the essentials of creating a Java program using the new JDK 7, creating basic Java objects, and new Eclipse features and it features a companion website that offers all code from the book and bonus chapters. -Provided by Publisher', 'Previous edition: 2011', 'Includes index', 'Introduction -- Getting started with Java -- Writing your own Java programs -- Working with the big picture: object-oriented programming -- Savvy Java techniques -- The part of tens']","['printdisabled', 'internetarchivebooks']"
javaprogramming0000farr_z1w1,Java programming ,F,"['xxx, 1084 pages : 24 cm', 'Includes index', 'Creating Java programs -- Using data -- Using methods, classes, and objects -- More object concepts -- Making decisions -- Looping -- Characters, strings, and the StringBuilder -- Arrays -- Advanced array concepts -- Introduction to inheritance -- Advanced inheritance concepts -- Exception handling -- File input and output -- Introduction to Swing components -- Advanced GUI topics -- Graphics -- Applets, images, and sound -- Appendixes. Working with the Java platform -- Learning about data representation -- Formatting output -- Generating random numbers -- Javadoc -- Glossary']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javawebsocketpro0000cowa,Java WebSocket programming ,C,"['xxii, 230 pages ; 24 cm', '""Oracle Press.""', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
learningjqueryde0000jone,Learning jQuery deferreds ,J,"['xiii, 114 pages ; 23 cm', 'Cover subtitle', 'Includes bibliographical references']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
learningopenshif0000ship,"Learning OpenShift : leverage the power of cloud computing using OpenShift Online to design, build, and deploy scalable applications ",S,"['1 online resource (1 volume) :', ""This book is ideal for you if you're a developer experienced with the PHP or Java programming languages and have a basic understanding of using the command line"", 'Online resource; title from cover page (Safari, viewed Nov. 17, 2014)', 'Online resource; title from PDF title page (EBSCO, viewed July 10, 2017)', 'Includes index', 'Cover; Copyright; Credits; About the Author; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Creating Your First OpenShift Application; Creating your OpenShift Online account; Installing and configuring the Red Hat Cloud command-line tools; Installing the RHC command-line tools for Microsoft Windows; Installing the RHC command-line tools for OS X; Installing the RHC command-line tools for Linux; Configuring the RHC command-line tools; Creating your first OpenShift Online application; What just happened?; Placement of your gear; Creating your application account', 'Configuring your applicationCloning the remote Git repository; Adding the source code to your application; Using the web console; Summary; Chapter 2: Creating and Managing Applications; Learning the essential RHC commands; Displaying information about an application; Deleting applications; Understanding cartridges; Web cartridges; Add-on cartridges; Using cartridges; Adding cartridges; Using databases with your application; Adding the phpMyAdmin add-on cartridge; Developing the application; Understanding the code; The cron cartridge; Adding the cron cartridge; Adding a cron job; Summary', 'Chapter 3: Application MaintenanceStopping and starting applications; Viewing application logfiles; Creating your own logfiles; Viewing a single logfile; Backing up and restoring applications; Creating a snapshot; Restoring a snapshot; Secure shell and your application; Understanding and viewing the /etc/passwd file; Understanding and viewing cgroup information; Setting the timeout parameter and viewing logfiles; Understanding environment variables; Setting your own environment variables; Summary; Chapter 4: Using an Integrated Development Environment', ""To use an IDE or not to use an IDE is the questionInstalling and configuring Eclipse; Downloading and installing Eclipse; Downloading and installing the OpenShift plugin; Importing an existing OpenShift application; Creating and managing a new OpenShift application; Deploying changes; Viewing your application's logfiles; Embedding add-on cartridges; Viewing your application's environment variables; Viewing the details of an application; Deleting an application; Integrating OpenShift with other IDEs; Summary; Chapter 5: Creating and Deploying Java EE Applications; Evolution of Java EE"", 'Introducing the sample applicationCreating a JBoss EAP application; Adding database support to the application; Importing the MLB stadiums into the database; Adding database support to our Java application; Creating the database access class; Creating the beans.xml file; Creating the domain model; Creating the REST services; Verifying the REST web services; Creating the user interface; Creating the map using Leaflet and OpenStreetMap; Verifying that the map was deployed and is responsive; Getting the stadiums from our REST services; Adding the stadiums to the map']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
learningstormcre0000jain,Learning storm : create real-time stream processing applications with apache storm ,J,"['1 online resource (252 pages) :', 'If you are a Java developer who wants to enter into the world of real-time stream processing applications using Apache Storm, then this book is for you. No previous experience in Storm is required as this book starts from the basics. After finishing this book, you will be able to develop not-so-complex Storm applications', 'Includes index', 'Online resource; title from PDF title page (ebrary, viewed September 4, 2014)', 'Cover; Copyright; Credits; About the Authors; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Setting Up Storm on a Single Machine; Features of Storm; Storm components; Nimbus; Supervisor nodes; The ZooKeeper cluster; The Storm data model; Definition of a Storm topology; Operation modes; Setting up your development environment; Installing Java SDK 6; Installing Maven; Installing Git -- distributed version control; Installing the STS IDE; Developing a sample topology; Setting up ZooKeeper; Setting up Storm on a single development machine', 'Deploying the sample topology on a single-node clusterSummary; Chapter 2: Setting Up a Storm Cluster; Setting up a ZooKeeper cluster; Setting up a distributed Storm cluster; Deploying a topology on a remote Storm cluster; Deploying the sample topology on the remote cluster; Configuring the parallelism of a topology; The worker process; The executor; Tasks; Configuring parallelism at the code level; Distributing worker processes, executors, and tasks in the sample topology; Rebalancing the parallelism of a topology; Rebalancing the parallelism of the sample topology; Stream grouping', 'Shuffle groupingFields grouping; All grouping; Global grouping; Direct grouping; Local or shuffle grouping; Custom grouping; Guaranteed message processing; Summary; Chapter 3: Monitoring the Storm Cluster; Starting to use the Storm UI; Monitoring a topology using the Storm UI; Cluster statistics using the Nimbus thrift client; Fetching information with the Nimbus thrift client; Summary; Chapter 4: Storm and Kafka Integration; The Kafka architecture; The producer; Replication; Consumers; Brokers; Data retention; Setting up Kafka; Setting up a single-node Kafka cluster', ""Setting up a three-node Kafka clusterRunning multiple Kafka brokers on a single node; A sample Kafka producer; Integrating Kafka with Storm; Summary; Chapter 5: Exploring High-level Abstraction in Storm with Trident; Introducing Trident; Understanding Trident''s data model; Writing Trident functions, filters, and projections; Trident functions; Trident filters; Trident projections; Trident repartitioning operations; The shuffle operation; The partitionBy operation; The global operation; The broadcast operation; The batchGlobal operation; The partition operation; Trident aggregators"", 'The partition aggregateThe aggregate; The ReducerAggregator interface; The Aggregator interface; The CombinerAggregator interface; The persistent aggregate; Aggregator chaining; Utilizing the groupBy operation; A non-transactional topology; A sample Trident topology; Maintaining the topology state with Trident; A transactional topology; The opaque transactional topology; Distributed RPC; When to use Trident; Summary; Chapter 6: Integration of Storm with Batch Processing Tools; Exploring Apache Hadoop; Understanding HDFS; Understanding YARN; Installing Apache Hadoop']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
learntoprogramwi0000hunt,Learn to program with Minecraft plugins. Create flaming cows in Java using CanaryMod ,H,"['xiv, 263 pages : 24 cm', 'Includes bibliographical references and index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
learntoprogramwi0000hunt_p1y9,Learn to program with Minecraft plugins : create flying creepers and flaming cows in Java ,H,"['xiv, 263 p. : 24 cm', 'Includes bibliographical references (p. [255]) and index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
mavenbuildcustom0000unse,Maven build customization : discover the real power of Maven 3 to manage your Java projects more effectively than ever ,Unknown Author,"['1 online resource (1 volume) :', 'Includes index', 'Online resource; title from cover (Safari, viewed Nov. 17, 2014)']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
oracledatabase120000pric,Oracle database 12c SQL ,P,"['xxiv, 660 pages ; 23 cm', '""This Oracle Press guide shows you how to retrieve and modify database information, use SQL Plus and SQL Developer, work with database objects, write PL/SQL programs, and much more. In-depth coverage of the latest SQL features and tools, performance optimization techniques, advanced queries, Java support, and XML is included. Carefully revised to cover SQL Plus, SQL Developer, and more ""--', 'Includes index', 'Retrieving information from database tables -- Using SQL*Plus -- Using simple functions -- Storing and processing dates and times -- Subqueries -- Advanced queries -- Analyzing data -- Changing table contents -- Users, privileges, and roles -- Creating tables, sequences, indexes, and views -- Introducing PL/SQL programming -- Database objects -- Collections -- Large objects -- SQL Tuning -- XML and the Oracle database']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
oracleplsqlprogr0000feue_q3v0,Oracle PL/SQL programming ,F,"['xxxviii, 1340 pages : 24 cm', 'Includes index', '""Covers versions through Oracle database 12c""--Cover', 'Introduction to PL/SQL -- Creating and running PL/SQL code -- Language fundamentals -- Conditional and sequential control -- Iterative processing with loops -- Exception handlers -- Working with program data -- Strings -- Numbers -- Dates and timestamps -- Records -- Collections -- Miscellaneous datatypes -- DML and transaction management -- Data retrieval -- Dynamic SQL and dynamic PL/SQL -- Procedures, functions, and parameters -- Packages -- Triggers -- Managing PL/SQL code -- Optimizing PL/SQL performance -- I/O and PL/SQL -- Application security and PL/SQL -- PL/SQL architecture -- Globalization and localization in PL/SQL -- Object-oriented aspects of PL/SQL -- Calling Java from PL/SQL -- External procedures']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
pigdesignpattern0000pasu,Pig design patterns : simplify Hadoop programming to create complex end-to-end enterprise big data solutions with Pig ,P,"['1 online resource (1 volume) :', 'Pig makes Hadoop programming simple, intuitive, and fun to work with. It removes the complexity from Map Reduce programming by giving the programmer immense power through its flexibility. What used to be extremely lengthy and intricate code written in other high level languages can now be written in almost one tenth of the size using its easy to understand constructs. Pig has proven to be the easiest way to learn how to program Hadoop clusters, as evidenced by its widespread adoption. This comprehensive guide enables readers to readily use design patterns to simplify the creation of complex da', 'Online resource; title from cover (Safari, viewed May 7, 2014)', 'Includes index', 'Cover; Copyright; Credits; Foreword; About the Author; Acknowledgments; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Setting the Context for Design Patterns in Pig; Understanding design patterns; The scope of design patterns in Pig; Chapter 2: Hadoop demystified -- a quick reckoner; The enterprise context; Common challenges of distributed systems; The advent of Hadoop; Hadoop under the covers; Understanding the Hadoop Distributed File System; HDFS design goals; Working of HDFS; Understanding MapReduce; Understanding how MapReduce works; The MapReduce internals', ""Pig -- a quick introUnderstanding the rationale of Pig; Understanding the relevance of Pig in the enterprise; Working of Pig -- an overview; Firing up Pig; The use case; Code listing; The dataset; Understanding Pig through the code; Pig's extensibility; Operators used in code; The EXPLAIN operator; Understanding Pig's data model; Primitive types; Complex types; Summary; Chapter 2: Data Ingest and Egress Patterns; The context of data ingest and egress; Types of data in the enterprise; Ingest and egress patterns for multistructured data; Considerations for log ingestion"", 'The Apache log ingestion patternBackground; Motivation; Use cases; Pattern implementation; Code snippets; Results; Additional information; The Custom log ingestion pattern; Background; Motivation; Use cases; Pattern implementation; Code snippets; Results; Additional information; The image ingress and egress pattern; Background; Motivation; Use cases; Pattern implementation; Code snippets; Results; Additional information; The ingress and egress patterns for the NoSQL data; MongoDB ingress and egress patterns; Background; Motivation; Use cases; Pattern implementation; Code snippets; Results', 'Additional informationThe HBase ingress and egress pattern; Background; Motivation; Use cases; Pattern implementation; Code snippets; Results; Additional information; The ingress and egress patterns for structured data; The Hive ingress and egress patterns; Background; Motivation; Use cases; Pattern implementation; Code snippets; Results; Additional information; The ingress and egress patterns for semi-structured data; The mainframe ingestion pattern; Background; Motivation; Use cases; Pattern implementation; Code snippets; Results; Additional information; XML ingest and egress patterns', 'BackgroundMotivation; Use cases; Pattern implementation; Code snippets; Results; Additional information; JSON ingress and egress patterns; Background; Motivation; Use cases; Pattern implementation; Code snippets; Results; Additional information; Summary; Chapter 3: Data Profiling Patterns; Data profiling for Big Data; Big Data profiling dimensions; Sampling considerations for profiling Big Data; Sampling support in Pig; Rationale for using Pig in data profiling; The data type inference pattern; Background; Motivation; Use cases; Pattern implementation; Code snippets; Pig script; Java UDF']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
programmingbusin0000sheu,Programming business applications for the Android® tablet,S,"['1 online resource (xv, 282 pages) :', 'This guide provides a quick start for prototyping applications on the mobile platform for the business applications programmer--focusing on such common business uses as database management, web-based user interfaces, and graphic representation of data', 'Print version record', 'Chapter 1. Installing Eclipse, Java, and the Android SDK -- chapter 2. Migrating to Android 3.0 and above -- chapter 3. Databases in the application -- chapter 4. Forms and graphics -- chapter 5. Content providers -- chapter 6. Client-server applications -- chapter 7. Using external data -- chapter 8. The camera as a data source -- chapter 9. Deployment and versioning']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
programminginjav0000malh,Programming in Java,M,"['1 online resource (680 pages) :', 'Annotation', 'Print version record']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
samsteachyoursel0000cade_z6z7,Sams teach yourself Java in 24 hours ,C,"['v, 477 pages : 24 cm', 'Includes index', '""Full Color""--Spine', '""Free bonus chapter on creating MINECRAFT mods with Java""--Cover', ""Getting started. Becoming a programmer ; Writing your first program ; Vacationing in Java ; Understanding how Java programs work -- Learning the basics of programming. Storing and changing information in a program ; Using strings to communicate ; Using conditional tests to make decisions ; Repeating an action with loops -- Working with information in new ways. Storing information with Arrays ; Creating your first object ; Describing what your object is like ; Making the most of existing objects -- Programming a graphical user interface. Building a simple user interface ; Laying out a user interface ; Responding to user input ; Building a complex user interface -- Moving into advanced topics. Storing objects in data structures ; Handling errors in a program ; Creating a threaded program ; Using inner classes and closures -- Writing internet applications. Reading and writing files ; Creating web services with JAX-WS ; Creating Java2D graphics ; Writing Android apps ; Creating Minecraft Mods with Java -- Appendixes. Using the NetBeans Integrated Development Environment ; Where to go from here: Java resources ; This book's website ; Setting up an Android development environment""]","['printdisabled', 'internetarchivebooks']"
samsteachyoursel0000perr_q7q0,Sams teach yourself beginning programming in 24 hours,P,"['xiii, 476 pages : 23 cm', ""Sams Teach Yourself Beginning Programming in 24 Hours assumes the reader has no knowledge of technology and starts from the absolute beginning, explains everything you need to know before you start programming, and then presents simple programming techniques. Greg Perry teaches JavaScript, one of the world's easiest languages - and the #1 programming language used on modern web sites. Once the reader has learned how to code the right way in JavaScript, Perry shows how to apply those techniques in several of today's other leading programming environments. The book contains step-by-step instructions, Q and As, Quizzes, Exercises, and insider advice"", 'Includes index', ""Start programming today. Hands-on programming ; Process and techniques ; Designing a program ; Getting input and displaying output ; Data processing with numbers and words ; Controlling your programs ; Debugging tools -- Programming fundamentals. Structured techniques ; Programming algorithms ; Having fun with programming ; Advanced programming -- Object-oriented programming with Java. Programming with Java ; Java's details ; Java has class ; Applets and web pages -- Other programming languages. HTML5 and CSS3 ; JavaScript and AJAX ; Scripting with PHP ; Programming wtih C and C++ ; Programming with Visual Basic 2012 ; C♯ and the .NET framework -- The business of programming. How companies program ; Distributing applications ; The future of programming -- Creating mobile apps with HTML5, iOS, and Android. Building a mobile web application ; Converting HTML5 apps to iOS and Android apps""]","['printdisabled', 'internetarchivebooks']"
springmvctutoria0000deck,Spring MVC : a tutorial ,D,"['1 online resource', 'Annotation', '""April 2014.""', 'Title from title screen', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
springrecipespro0000dein,Spring recipes : a problem-solution approach ,D,"['1 online resource (xi, 828 pages) :', 'Spring Recipes: A Problem-Solution Approach, Third Edition builds upon the best-selling success of the previous editions and focuses on the latest Spring Framework features for building enterprise Java applications. This book provides code recipes for the following, found in the latest Spring: Spring fundamentals: Spring IoC container, Spring AOP/ AspectJ, and more Spring enterprise: Spring Java EE integration, Spring Integration, Spring Batch, Spring Remoting, messaging, transactions, and working with big data and the cloud using Hadoop and MongoDB Spring web: Spring MVC, other dynamic scripting, integration with the popular Grails Framework (and Groovy), REST/web services, and more This book guides you step-by-step through topics using complete and real-world code examples. When you start a new project, you can consider copying the code and configuration files from this book, and then modifying them for your needs. This can save you a great deal of work over creating a project from scratch!', 'Includes index', 'Online resource; title from PDF title page (SpringerLink, viewed December 19, 2014)', 'At a Glance; Introduction; Chapter 1: Spring Development Tools; 1-1. Build a Spring application with the Spring Tool Suite; Problem; Solution; How It Works; 1-2. Build a Spring applica tion with the Eclipse IDE; Problem; Solution; How It Works; 1-3. Build a Spring application with the IntelliJ IDE; Problem; Solution; How It Works; 1-4. Build a Spring application with the Maven command line interface; Problem; Solution; How It Works; 1-5. Build a Spring application with the Gradle command line interface; Problem; Solution; How It Works', '1.6 Build a Spring application with the Gradle WrapperProblem; Solution; How It Works; Summary; Chapter 2: Spring Core Tasks; 2-1. Manage and Configure POJOs with the Spring IoC Container; Problem; Solution; How It Works; Create the POJO Class; Create a XML Configuration for your POJO; Instantiate the Spring IoC Container; Get POJO Instances or Beans from the IoC Container; 2-2. Create POJOs by Invoking a Constructor; Problem; Solution; How It Works; Create the POJO Classes with Constructors; Create XML Configuration to Create POJOs via Constructor; Resolve Constructor Ambiguity', '2-3. Use POJO References, Auto-Wiring, and Imports to Interact with Other POJOsProblem; Solution; How It Works; Create Multiple POJO Classes that Reference One Another; Specify POJO References for Setter Methods; Specify POJO References for Constructor Arguments; Declare Inner or Anonymous POJO References; Auto-Wire POJOs; Resolve Auto-Wire Ambiguity with the Primary Attribute; Resolve Auto-Wire Ambiguity with the ByName Attribute; Resolve POJO References from Multiple Locations; 2-4. Configure POJOs with Java Collection Attributes; Problem; Solution; How It Works; Lists, Arrays, and Sets', 'Maps and PropertiesSpecify the Data Type for Collection Elements; Specify Concrete Classes for Collections; 2-5. Set a POJOs Scope; Problem; Solution; How It Works; 2-6. Use Data from External Resources (Text Files, XML Files, Properties Files, or Image Files); Problem; Solution; How It Works; Use Properties File data to Setup POJO Instantiation Values; Use Data from any External Resource File for use in a POJO; 2-7. Resolve I18N Text Messages for Different Locales in Properties Files; Problem; Solution; How It Works; 2-8. Customize POJO Initialization and Destruction; Problem; Solution', ""How It WorksDefine Methods to Run Before POJO Initialization and Destruction; Define Lazy Initialization for POJOs; Define Initialization of POJOs Before Other POJOs; 2-9. Create Post Processors to Validate and Modify POJOs; Problem; Solution; How It Works; Create POJO to Process Every Bean Instance; Create POJO to Process Selected Bean Instances; 2-10. Create POJOs with a Factory (Static Method, Instance Method, Spring's FactoryBean); Problem; Solution; How It Works; Create POJOs by Invoking a Static Factory Method; Create POJOs by Invoking an Instance Factory Method""]","['inlibrary', 'printdisabled', 'internetarchivebooks']"
transactionsonas0000unse_q3h8,Transactions on aspect-oriented software development XI,Unknown Author,"['1 online resource (183 pages) :', 'The LNCS journal Transactions on Aspect-Oriented Software Development is devoted to all facets of aspect-oriented software development (AOSD) techniques in the context of all phases of the software life cycle, from requirements and design to implementation, maintenance and evolution. The focus of the journal is on approaches for systematic identification, modularization, representation and composition of crosscutting concerns, i.e., the aspects and evaluation of such approaches and their impact on improving quality attributes of software systems. This volume, the 11th in the Transactions on Aspect-Oriented Software Development series, consists of two parts. The first part focuses on runtime verification and analysis, highlighting runtime verification as a ""killer"" application of aspect-orientation. The second part contains revised and extended versions of the five best papers submitted to Modularity:aosd 2013, presenting current research related to modularity and covering topics such as formal methods and type systems, static analysis approaches for software architectures, model-driven engineering and model composition, aspect-oriented programming, event-driven programming and reactive programming', 'Includes bibliographical references and author index', 'Online resource; title from PDF title page (SpringerLink, viewed Apr. 11, 2014)', 'Run-Time Assertion Checking of Data- and Protocol-Oriented Properties of Java Programs: An Industrial Case Study -- Event Modules: Modularizing Domain-Specific Crosscutting RV Concerns -- Method Slots: Supporting Methods, Events and Advices by a Single Language Construct -- Modularity and Dynamic Adaptation of Flexibly Secure Systems: Model-Driven Adaptive Delegation in Access Control Management -- Effective Aspects: A Typed Monadic Embedding of Point cuts and Advice -- Modular Specification and Checking of Structural Dependencies -- Towards Reactive Programming for Object-Oriented Applications']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
webcartographyma0000mueh,Web cartography : map design for interactive and mobile devices ,M,"['xxi, 240 pages : 24 cm', '""Written for those with a basic understanding of map making, but without knowledge of Web design, this textbook explains how to create effective interaction, animation, and layouts for maps to put online or into a mobile platform. Concept driven and product free, this reference emphasizes cartographic principles for Web and mobile map design over specific software techniques. The first of its kind to address map design and layout styles for Web and mobile mapping, this book includes many examples from the real world. Labs introduce students to software used by and freely available at most universities""--', '""Not a book about scripting, application programming interfaces, or designing exploratory tools, this book provides approachable, comprehensive and non-technical text about map design for the Web.It examines map communication best practices and is based on spatial data visualization and graphic design theory. It is approachable enough for desktop GIS users, print cartographers, and university students who have little to no experience in Web programming and is written so that anyone who wants to design effective Web maps can learn about the core concepts of cartography. Essentially, this is a book that was written by a cartographer about Web map design inlanguage that anyone with even a slight interest in Web mapping could easily understand""--', 'Includes bibliographical references and index', ""Machine generated contents note: 1.Introduction -- The Purpose of This Book -- Qualifier: This Is Not a Book about Coding (That Is, No JavaScript Required) -- The Intended Audience -- Contemporary Mapmaking: A Quarter Century of Rapid Evolution -- Web Cartography: A Brief History -- Thematic Cartography: The Precursor to Multimedia Cartography -- The Rise of Multimedia Mapmaking -- What Happened to Paper? -- Early Hypermedia -- Why Hypermedia Evolved into Web Mapping -- How Google Maps Revolutionized (or Was It Euthanized?) Mapmaking -- The Future of Web Cartography May Be Browser-less -- The Goals of Map Communication Remain the Same -- Establishing a Communicative Purpose for Your Map -- Who Is the Intended Audience? -- What Data Need to Be Communicated? -- How Do I Design My Map So Information Is Easily Recalled? -- How Do I Determine Which, and How Much, Data to Include? -- Designing Your Message -- The Rest of This Book -- Key Concepts -- Further Reading -- References -- 2.Human-Map Interactivity -- Introduction -- Of Mice and Touch Screens -- New Interactive Map Elements -- Key Concepts -- Further Reading and Resources -- Online Resource -- Further Reading -- 3.Map Elements -- Introduction -- Title/Splash Screen -- The Argument for Splash Screens -- Mapped Area -- Pan User Interfaces -- Panning Arrows Should Be Banned -- Arrow Keys -- Click and Drag and Touch Pan -- Zoom User Interfaces -- Zoom Bars -- Plus and Minus Zoom Buttons -- Double Click and Tap -- Scroll Wheel and Pinch to Zoom -- Keyboard Shortcuts -- Rectangle Zoom -- Zoom User Interfaces Conclusion -- Map Rotation Interfaces -- Two Types of Rotation -- Information Window Design -- Locator Maps -- Menu Design -- The Three-Click Rule Is Wrong But It Remains a Useful Axiom -- Organize, Test, and Confirm -- Step One Organize Your Menus -- Step Two Design Your Menus -- Step Three Conduct User Tests -- Step Four Reorganize Your Menus -- Supplemental Information -- Help Menu -- Neat Lines and Frame Lines -- Designing Smart Legends -- The Purpose of a Legend Remains the Same -- How to Avoid Creating Ineffective Web Map Legends -- How Interactivity Makes Legends More Powerful -- Having Options = Feeling in Control -- Layer Interactivity -- Map and Data Generalization -- Symbol and Thematic Modification -- Temporal Legends for Animations -- Other Web Map Elements -- Multimedia Graphics -- Images -- Videos -- Graphs and Highlighting -- Tips for Effective Map-Chart Graphic Highlighting -- Key Concepts -- Further Reading and Resources -- Web Sites -- Further Reading -- 4.Map Composition and Layout -- Introduction -- Map Composition and Visual Hierarchy -- Techniques of Emphasizing Map Elements in the Visual Hierarchy -- New Visual Hierarchies for Web Map Elements -- Reference/General-Interest Web Map Visual Hierarchy -- Thematic Web Maps -- Temporal Animated Web Maps -- Map Layout and Organization -- Screen Real Estate, Resolution, and the Pixel Problem -- Screen Real Estate -- Screen Resolution -- Pixels Per Inch -- PPI Advancement = Big Mess -- Two Types of Web Map Layouts -- Fluid Map Layout -- Compartmentalized Map Layout -- Web Map Layouts -- Compartmentalized Map Layouts -- Fluid Map Layouts -- How to Design an Effective Web Map Layout -- Conclusion -- Key Concepts -- Further Reading and Resources -- Resolution Testers -- Tutorial Resources -- Further Reading -- 5.Color -- Introduction -- Defining and Understanding Color -- Three Properties of Color -- Hue -- Value -- Saturation -- Making Sense of the Color Wheel -- Warm and Cold Colors -- Primary Colors -- Secondary Colors -- Tertiary Colors -- Monochromatic Colors -- Achromatic Colors -- Complementary Colors -- Split Complementary Colors -- Analogous -- Neutral -- Incongruous -- Simultaneous Contrast: It Happens -- Color Rules That Remain Unchanged from Print -- Less Color Variation Is More Powerful -- Different Colors Have Different Meanings to Different People -- Colors and Feelings -- The Meaning of Color Varies by Culture -- Color Preferences Change over Time -- Color Models for the Web -- RGB (Red, Green, and Blue) -- RGB Decimal -- RGB Hexadecimal -- Hue, Saturation, and Lightness -- RGB Colors Will Look Different Depending on the Screen -- Never Design Web Maps with CMYK -- Coloring Your Base Map -- Solid-Color Base Maps -- Shaded Relief -- Aerial Photography -- Reference Map Color Schemes -- When to Ignore Color Conventions -- Novelty Equals Attention -- Does the Color Scheme Match the Message? -- Resources for Finding Colors -- Choosing Thematic Map Colors -- Beware of Color Blindness -- Key Concepts -- Further Reading and Resources -- Online Color Resources -- Color Meanings and Emotions -- Color Pickers -- Color Style Tools for Different Map Services -- Hexadecimal Color Creator -- Further Reading -- 6.Typography -- Introduction -- All in the Family: Explaining Typeface and Font -- Typographic Rules That Stand Firm -- No More Than Two Fonts per Map -- Font Styles and Properties Indicate Different Things -- Text as a Core Map Element -- Labeling Norms -- Typographic Rules That Have Changed -- When Possible, Ditch Serif Fonts -- Size Does Matter -- Font Size Is Now Voodoo Science -- Not Everyone Has Access to the Fonts You Do -- Will Your Map Have Interactive Text? -- Fonts That Play Well with Web Maps -- Verdana -- Century Gothic -- Arial and Helvetica -- Trebuchet MS -- Tahoma -- Corbel -- Myriad Pro and Myriad Web -- Georgia -- Palatino -- Comparing Type on Your Web Map -- Font Myths, Realities, and Web Maps -- Conclusion -- Key Concepts -- Further Reading and Resources -- Web Sites on Web Typography -- Further Reading -- 7.Core Visual Variables -- Introduction -- Defining the Visual Variables -- Shape -- Hue -- Orientation -- Texture -- Size -- Perspective Height -- Value -- Saturation -- When to Use the Different Visual Variables -- Visual Variables for Mapping Qualitative Data -- Visual Variables for Mapping Quantitative Data -- Combining Visual Variables -- Key Concepts -- Further Reading -- 8.Symbolization -- Introduction -- Designing Effective Web Map Symbols -- Keep Symbols Simple -- Generic Caricatures Are Best -- Symbols Are Era and Audience Dependent -- Symbols Are Context Dependent -- How Do You Represent a Stadium? -- Key Concepts -- Further Reading -- 9.Thematic Visualization -- Introduction -- Data and Technology Limitations -- The Nature of the Mapped Data -- Technological Limitations -- Mercator's Apparition -- Different Thematic Representations -- Choropleth Maps -- Data Classification -- Natural Breaks -- Quantiles -- Equal Intervals -- Standard Deviations -- Unclassed Choropleth Maps -- Benefits of Choropleth Maps -- Drawbacks of Choropleth Maps -- Dot Maps -- Heat Maps -- Benefits of Dot Maps -- Drawbacks of Dot Maps -- Proportional and Graduated Symbol Maps -- Benefits of Proportional and Graduated Symbol Maps -- Drawback of Proportional and Graduated Symbol Maps -- Isarithmic Maps -- Isarithmic Map Design -- Benefits and Drawbacks of Isarithmic Maps -- Flow Maps -- Benefits and Drawbacks of Flow Maps -- Cartograms -- Benefits and Drawbacks of Cartograms -- Multivariate Maps -- Thematic Combinations -- Colored Dots -- Chart Maps -- Chernoff Faces -- Bivariate Choropleth Maps -- The Role of Interactivity in Thematic Representations -- Conclusion -- Key Concepts -- Further Reading and Resources -- Resource -- Further Reading -- 10.Animation -- Introduction -- To Tween or Not to Tween? -- Stop-Frame Animation -- Tweening -- The Visual Variables of Animation -- DiBiase's Visual Variables for Animation -- Duration -- Rate of Change -- Order -- Additional Visual Variables of Map Animation -- Display Date -- Frequency -- Synchronization -- Types of Map Animation -- Designing Temporal Animations -- Keep the Animations Short -- Simplify the Data -- Give the Map User Some Control -- Temporal Legends -- Temporal Legend Styles -- Temporal Legend Enhancements -- Other Types of Map Animation -- Zoom Animations -- Fly-Through Animations -- Path Animations -- Summary -- Key Concepts -- Further Reading and Online Resources -- Online Resources -- Example Animations -- Further Reading -- 11.Sound and Touch -- Introduction -- Sound Variables -- Krygier's Sound Variables -- Loudness -- Pitch -- Duration -- Attack and Decay -- Sound Decay? -- Tactile Variables -- Key Concepts -- Further Reading and Resource -- Resource -- Further Reading -- 12.Web Map Production -- Introduction -- The Gist on Coding -- What Was Flash? -- What Is HTML5? -- HTML -- Cascading Style Sheets -- JavaScript -- Application Programming Interfaces -- Prepping Spatial Data for the Web -- Choosing a Projection -- Common Web Map Data Formats -- Keyhole Markup Language -- GeoJSON -- Scalable Vector Graphics -- Map Tiles -- Geospatial PDFs -- How Do I Create These Data Types? -- Geographic Information Systems -- Non-GIS Data Creation Applications -- A Web Cartographer's Tool Box -- HTML5 and SVGs -- Avenza MAPublisher -- Adobe Flash and Adobe AIR -- Oracle Java -- ESRI ArcGIS Online and API -- TileMill Application and MapBox API -- CartoDB Web Site and API -- Google Maps API -- CloudMade Leaflet API -- Other APIs -- Closing Advice -- Key Concepts -- Further Reading and Resources -- Online Resources and Tutorials -- Web Cartography Companion Web Site (http://www.muehlenhaus.com/webcartography) -- Flowing Data (http://www.flowingdata.com) -- Lynda.com (http://www.lynda.com) -- W3Schools (http://www.w3schools.com) -- Recommended Tutorial Guides and Books -- The Missing Manual Series by O'Reilly -- From Print to Mobile mApps Tutorial -- Visualize This by Nathan Yau -- Wisconsin State Cartographer Web Site (http://www.sco.wisc.edu) -- Further Reading -- Cartographic Perspectives Journal (http://www.cartographicperspectives.org) -- Cartography and Geographic Information Science Journal (CaGIS) -- Online Maps with APIs and Web Services, Edited / Michael P. Peterson""]","['printdisabled', 'internetarchivebooks']"
TheJavaDevelopmentCompanyMakesPremiumApplications,The Java Development Company Makes Premium Applications,Unknown Author,"
<table border=""0"" cellspacing=""0""><colgroup width=""238""></colgroup><tbody><tr><td align=""left"" height=""17"">Java programming language was developed with the aim of providing a cross platform environment,</td>
	</tr></tbody></table>","['opensource', 'community']"
DTIC_ADA598225,DTIC ADA598225: Protocol Programmability,D,"Application Programming Interfaces (APIs) often define protocols-- restrictions on the order of client calls to API methods. API protocols are common and difficult to follow, which has generated tremendous research into the specification and verification of protocols. However, verification techniques do little to alleviate several major challenges programmers face when using API protocols: fixing protocol violations, learning protocol rules, and finding state transitions. To understand these challenges better, I mined developer forums to identify problems that developers have with protocols. Then, I performed a think-aloud observational study, in which I systematically observed professional programmers struggle with these same problems to get more detail on the nature of their struggles and how they used available resources. In my observations, programmer time was spent primarily on four types of searches of the protocol state space. To alleviate the protocol programmability challenges, I embed state modeling techniques directly into code and developer documentation. I design and formalize a programming language, Plaid, in which objects are modeled not just in terms of classes, but in terms of changing abstract states. Each state may have its own fields and methods, as well as methods that transition the object into a new state. I also developed a documentation tool called Plaiddoc, which is like Javadoc except it organizes methods by state instead of by class and it includes explicit state transitions, state-based type specifications, and rich state relationships. I evaluate Plaid through a series of examples taken from the Plaid compiler and standard libraries of Smalltalk and Java. These examples show how Plaid can more closely model state-based designs, enhancing understandability, automating error checking, and providing reuse benefits.","['dticarchive', 'additional_collections']"
pubmed-PMC3853073,Random forests on Hadoop for genome-wide association studies of multivariate neuroimaging phenotypes.,"Wang, Yue","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28BMC%20Bioinformatics%29"" rel=""nofollow"">BMC Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28BMC%20Bioinformatics%29%20AND%20volume%3A%2814%29"" rel=""nofollow"">volume 14</a>.<h2>Abstract</h2>Motivation: Multivariate quantitative traits arise naturally in recent neuroimaging genetics studies, in which both structural and functional variability of the human brain is measured non-invasively through techniques such as magnetic resonance imaging (MRI). There is growing interest in detecting genetic variants associated with such multivariate traits, especially in genome-wide studies. Random forests (RFs) classifiers, which are ensembles of decision trees, are amongst the best performing machine learning algorithms and have been successfully employed for the prioritisation of genetic variants in case-control studies. RFs can also be applied to produce gene rankings in association studies with multivariate quantitative traits, and to estimate genetic similarities measures that are predictive of the trait. However, in studies involving hundreds of thousands of SNPs and high-dimensional traits, a very large ensemble of trees must be inferred from the data in order to obtain reliable rankings, which makes the application of these algorithms computationally prohibitive. Results: We have developed a parallel version of the RF algorithm for regression and genetic similarity learning tasks in large-scale population genetic association studies involving multivariate traits, called PaRFR (Parallel Random Forest Regression). Our implementation takes advantage of the MapReduce programming model and is deployed on Hadoop, an open-source software framework that supports data-intensive distributed applications. Notable speed-ups are obtained by introducing a distance-based criterion for node splitting in the tree estimation process. PaRFR has been applied to a genome-wide association study on Alzheimer's disease (AD) in which the quantitative trait consists of a high-dimensional neuroimaging phenotype describing longitudinal changes in the human brain structure. PaRFR provides a ranking of SNPs associated to this trait, and produces pair-wise measures of genetic proximity that can be directly compared to pair-wise measures of phenotypic proximity. Several known AD-related variants have been identified, including APOE4 and TOMM40. We also present experimental evidence supporting the hypothesis of a linear relationship between the number of top-ranked mutated states, or frequent mutation patterns, and an indicator of disease severity. Availability: The Java codes are freely available at http://www2.imperial.ac.uk/~gmontana.","['pubmed', 'journals']"
NASA_NTRS_Archive_20140009122,NASA Technical Reports Server (NTRS) 20140009122: A Cryogenic Fluid System Simulation in Support of Integrated Systems Health Management,N,"Simulations serve as important tools throughout the design and operation of engineering systems. In the context of sys-tems health management, simulations serve many uses. For one, the underlying physical models can be used by model-based health management tools to develop diagnostic and prognostic models. These simulations should incorporate both nominal and faulty behavior with the ability to inject various faults into the system. Such simulations can there-fore be used for operator training, for both nominal and faulty situations, as well as for developing and prototyping health management algorithms. In this paper, we describe a methodology for building such simulations. We discuss the design decisions and tools used to build a simulation of a cryogenic fluid test bed, and how it serves as a core technology for systems health management development and maturation.","['NASA_NTRS_Archive', 'additional_collections']"
Pocorgtfo01,PoC || GTFO 01, ,"This is issue 0x01 of PoC || GTFO.<br />A description of what is contained in this issue is copied below.<br /><br />In Section 2, Dan Kaminsky presents of all strange things a defensive PoC! His four lines<br />of Javascript seem to produce random bytes, but that can’t possibly be right. If you disagree<br />with him, POC||STFU.<br />This issue’s devotional is in Section 3, where Travis Goodspeed shares a thought experiment<br />in which Ada Lovelace and Serena Butler fight on opposite sides of the Second War on General<br />Purpose Computing using Don Lancaster’s TV Typewriter as ammunition.<br />In the grand tradition of backfiring parse tree differentials, Ange Albertini shares in Section 4<br />a nifty trick for creating a PE file that is interpreted differently by Windows XP, 7, and 8.<br />Perhaps you’ll use this as an anti-reversing trick, or perhaps you’ll finally learn why TinyPE<br />doesn’t work after XP. Either way, neighborliness abounds.<br />In Section 5, Julia Wolf demonstrates on four napkins how to make a PDF that is also a<br />ZIP. Perhaps, dear reader, if you are reading this from a PDF you might find a file or two to<br />be attached?<br />In Section 6, Josh Thomas will teach you a how to permanently brick an Android phone by<br />screwing around with its voltage regulators in quick kernel patch. We the editors remind readers to send only<br />quality, technical correspondence to Josh; any rubbish that merely advocates your chosen brand of cellphone<br />should be sent to jobs@paper.li.<br />Today’s sermon, to be found in Section 7, concerns the divinity of programming languages, from PHP to<br />BASIC. Following along with a little scripture and a lot of liquor, we’ll see that every language has a little<br />something special to make it worth learning and teaching. Except Java.<br />Finally, in Section 8, we pass the collection plate and beg that you contribute some PoC of your own.<br />Articles should be short and sweet, written such that a reader will be inspired to build something clever.<br /><br />","['pocgtfo', 'zines']"
NASA_NTRS_Archive_20140001466,NASA Technical Reports Server (NTRS) 20140001466: Real-Time Multimission Event Notification System for Mars Relay,N,"As the Mars Relay Network is in constant flux (missions and teams going through their daily workflow), it is imperative that users are aware of such state changes. For example, a change by an orbiter team can affect operations on a lander team. This software provides an ambient view of the real-time status of the Mars network. The Mars Relay Operations Service (MaROS) comprises a number of tools to coordinate, plan, and visualize various aspects of the Mars Relay Network. As part of MaROS, a feature set was developed that operates on several levels of the software architecture. These levels include a Web-based user interface, a back-end ""ReSTlet"" built in Java, and databases that store the data as it is received from the network. The result is a real-time event notification and management system, so mission teams can track and act upon events on a moment-by-moment basis. This software retrieves events from MaROS and displays them to the end user. Updates happen in real time, i.e., messages are pushed to the user while logged into the system, and queued when the user is not online for later viewing. The software does not do away with the email notifications, but augments them with in-line notifications. Further, this software expands the events that can generate a notification, and allows user-generated notifications. Existing software sends a smaller subset of mission-generated notifications via email. A common complaint of users was that the system-generated e-mails often ""get lost"" with other e-mail that comes in. This software allows for an expanded set (including user-generated) of notifications displayed in-line of the program. By separating notifications, this can improve a user's workflow.","['NASA_NTRS_Archive', 'additional_collections']"
magpi16,The MagPi - Issue 16,T,"<br />Issue 16<br /><br />September 2013<br />Editorial<br /><br />Welcome to issue 16 of The MagPi.<br /><br />It’s back… Skutter returns to the pages of The MagPi and this time it’s more sensitive!  Stephen takes you in detail through expanding the number of inputs and outputs which can be controlled from your Raspberry Pi using I2C.  This will allow you to add more sensors to your bot while driving the base unit.<br /><br />In this issue we have some great hardware projects like Jorge’s PATOSS for monitoring his injured bird and we learn how to scroll text on the Pi Matrix.<br /><br />We have more on connecting your Raspberry Pi to an Arduino in Tony’s great article on driving a liquid crystal display plus an amazing look into connecting your Raspberry Pi to Logi-Pi by Michael Jones.<br /><br />After all that, we supplement the above with some fantastic software articles.<br /><br />We are pleased to provide more on programming in Java by looking at control flow sentences, numbers, strings and booleans with Vladimir.  For the cherry on the cake we have more from Bash gaffer tape and building and parsing XML in Python.<br /><br />Hope you enjoy the biggest issue of The MagPi to date.<br /><br />Ash Stone<br /><br />","['magpimagazine', 'computermagazines', 'magazine_rack']"
DedicatedJavaProgramerDemandsOfGrowingSoftwareBusiness,Dedicated Java Programer Demands Of Growing Software Business,Unknown Author,"
<table border=""0"" cellspacing=""0""><colgroup width=""344""></colgroup><tbody><tr><td style=""border-top:1px solid #000000;border-bottom:1px solid #000000;border-left:1px solid #000000;border-right:1px solid #000000;"" height=""20"" align=""left"" valign=""bottom""><font color=""#000000"" face=""Arial"">Java has become the most popular and useable programming language amongst all other available programming language in the business of Information Technology</font></td>
	</tr></tbody></table>","['opensource', 'community']"
NASA_NTRS_Archive_20130014449,NASA Technical Reports Server (NTRS) 20130014449: Access Control of Web- and Java-Based Applications,N,"Cybersecurity has become a great concern as threats of service interruption, unauthorized access, stealing and altering of information, and spreading of viruses have become more prevalent and serious. Application layer access control of applications is a critical component in the overall security solution that also includes encryption, firewalls, virtual private networks, antivirus, and intrusion detection. An access control solution, based on an open-source access manager augmented with custom software components, was developed to provide protection to both Web-based and Javabased client and server applications. The DISA Security Service (DISA-SS) provides common access control capabilities for AMMOS software applications through a set of application programming interfaces (APIs) and network- accessible security services for authentication, single sign-on, authorization checking, and authorization policy management. The OpenAM access management technology designed for Web applications can be extended to meet the needs of Java thick clients and stand alone servers that are commonly used in the JPL AMMOS environment. The DISA-SS reusable components have greatly reduced the effort for each AMMOS subsystem to develop its own access control strategy. The novelty of this work is that it leverages an open-source access management product that was designed for Webbased applications to provide access control for Java thick clients and Java standalone servers. Thick clients and standalone servers are still commonly used in businesses and government, especially for applications that require rich graphical user interfaces and high-performance visualization that cannot be met by thin clients running on Web browsers","['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20140001006,NASA Technical Reports Server (NTRS) 20140001006: The Chorus Conflict and Loss of Separation Resolution Algorithms,N,"The Chorus software is designed to investigate near-term, tactical conflict and loss of separation detection and resolution concepts for air traffic management. This software is currently being used in two different problem domains: en-route self- separation and sense and avoid for unmanned aircraft systems. This paper describes the core resolution algorithms that are part of Chorus. The combination of several features of the Chorus program distinguish this software from other approaches to conflict and loss of separation resolution. First, the program stores a history of state information over time which enables it to handle communication dropouts and take advantage of previous input data. Second, the underlying conflict algorithms find resolutions that solve the most urgent conflict, but also seek to prevent secondary conflicts with the other aircraft. Third, if the program is run on multiple aircraft, and the two aircraft maneuver at the same time, the result will be implicitly co-ordinated. This implicit coordination property is established by ensuring that a resolution produced by Chorus will comply with a mathematically-defined criteria whose correctness has been formally verified. Fourth, the program produces both instantaneous solutions and kinematic solutions, which are based on simple accel- eration models. Finally, the program provides resolutions for recovery from loss of separation. Different versions of this software are implemented as Java and C++ software programs, respectively.","['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20140004915,"NASA Technical Reports Server (NTRS) 20140004915: V and V of Lexical, Syntactic and Semantic Properties for Interactive Systems Through Model Checking of Formal Description of Dialog",N,"During early phases of the development of an interactive system, future system properties are identified (through interaction with end users in the brainstorming and prototyping phase of the application, or by other stakehold-ers) imposing requirements on the final system. They can be specific to the application under development or generic to all applications such as usability principles. Instances of specific properties include visibility of the aircraft altitude, speed… in the cockpit and the continuous possibility of disengaging the autopilot in whatever state the aircraft is. Instances of generic properties include availability of undo (for undoable functions) and availability of a progression bar for functions lasting more than four seconds. While behavioral models of interactive systems using formal description techniques provide complete and unambiguous descriptions of states and state changes, it does not provide explicit representation of the absence or presence of properties. Assessing that the system that has been built is the right system remains a challenge usually met through extensive use and acceptance tests. By the explicit representation of properties and the availability of tools to support checking these properties, it becomes possible to provide developers with means for systematic exploration of the behavioral models and assessment of the presence or absence of these properties. This paper proposes the synergistic use two tools for checking both generic and specific properties of interactive applications: Petshop and Java PathFinder. Petshop is dedicated to the description of interactive system behavior. Java PathFinder is dedicated to the runtime verification of Java applications and as an extension dedicated to User Interfaces. This approach is exemplified on a safety critical application in the area of interactive cockpits for large civil aircrafts.","['NASA_NTRS_Archive', 'additional_collections']"
etsi_ts_131_213_v11.01.00,TS 131 213 - V11.1.0 - Universal Mobile Telecommunications System (UMTS); LTE; Test specification for (U)SIM; Application Programming Interface (API) for Java Card™  (3GPP TS 31.213 version 11.1.0 Release 11),E,No Description Available,"['etsi_standards', 'additional_collections']"
RoleOfAjaxAndJavaScriptDevelopmentInSocialNetworking,Role Of Ajax And Java Script Development In Social Networking,Unknown Author,"
<table border=""0"" cellspacing=""0""><colgroup width=""312""></colgroup><tbody><tr><td style=""border-top:1px solid #000000;border-bottom:1px solid #000000;border-left:1px solid #000000;border-right:1px solid #000000;"" height=""20"" align=""left"" valign=""bottom""><font color=""#000000"">At this age when the social network websites like Facebook, Linkedin , Twitter, Google + etc have become immensily popular.</font></td>
	</tr></tbody></table>","['opensource', 'community']"
etsi_ts_103_115_v09.01.00,TS 103 115 - V9.1.0 - Smart Cards; Test specification for UICC Application Programming Interface for Java Card™ for Contactless Applications; Test Environment and Annexes (Release 9),E,No Description Available,"['etsi_standards', 'additional_collections']"
JavaDevelopmentAnIdealSolutionForWebBasedDocumentManagementSystem,Java Development An Ideal Solution For Web Based Document Management System,Unknown Author,"
<table border=""0"" cellspacing=""0""><colgroup width=""312""></colgroup><tbody><tr><td align=""left"" height=""20"" valign=""bottom""><font color=""#000000"">Java is basically a programming language and a computing platform which was originally developed by James Gosling released by Sun Micro systems</font></td>
	</tr></tbody></table>","['opensource', 'community']"
magpi14,The MagPi - Issue 14,T,"<br />Issue 14<br /><br />July 2013<br />Editorial<br /><br />Welcome to the 14th issue of The MagPi – another fully loaded guide to all things Raspberry Pi!<br /><br />This month we begin our journey in introducing the newest module in the Raspberry Pi world, the camera, with a great guide written by James Hughes on setup and basic operation.  The conclusion of this article will be found in next month’s edition where James builds on these foundations with hints and tips on advanced usage.<br /><br />We reload the Matrix with part two of the interesting Pi Matrix article, take a look at the Guzunty board and review the ever popular South West Raspberry Pi Boot Camps.<br /><br />We bring you more on the programming languages Charm, Scratch and Python plus bring you the first MagPi article on the popular language, Java.<br /><br />I am pleased to report that all pre-order Volume 1 MagPi bundles ordered via Kickstarter or themagpi.com have now shipped. We will soon have individual issues coming to print.  We hope you enjoy the printed editions and thank you again for your support and patience in helping make the dream a reality.<br /><br />Ash Stone<br /><br />","['magpimagazine', 'computermagazines', 'magazine_rack']"
UnlimitedPossibilitiesWithJavaDevelopment,Unlimited Possibilities With Java Development,Unknown Author,Java is a programming language developed by the Sun Micro system. It is a object oriented dynamic language.,"['opensource', 'community']"
pubmed-PMC3662632,JSME: a free molecule editor in JavaScript.,"Bienfait, Bruno","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Journal%20of%20Cheminformatics%29"" rel=""nofollow"">Journal of Cheminformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Journal%20of%20Cheminformatics%29%20AND%20volume%3A%285%29"" rel=""nofollow"">volume 5</a>.<h2>Abstract</h2>Background: A molecule editor, i.e. a program facilitating graphical input and interactive editing of molecules, is an indispensable part of every cheminformatics or molecular processing system. Today, when a web browser has become the universal scientific user interface, a tool to edit molecules directly within the web browser is essential. One of the most popular tools for molecular structure input on the web is the JME applet. Since its release nearly 15 years ago, however the web environment has changed and Java applets are facing increasing implementation hurdles due to their maintenance and support requirements, as well as security issues. This prompted us to update the JME editor and port it to a modern Internet programming language - JavaScript. Summary: The actual molecule editing Java code of the JME editor was translated into JavaScript with help of the Google Web Toolkit compiler and a custom library that emulates a subset of the GUI features of the Java runtime environment. In this process, the editor was enhanced by additional functionalities including a substituent menu, copy/paste, drag and drop and undo/redo capabilities and an integrated help. In addition to desktop computers, the editor supports molecule editing on touch devices, including iPhone, iPad and Android phones and tablets. In analogy to JME the new editor is named JSME. This new molecule editor is compact, easy to use and easy to incorporate into web pages. Conclusions: A free molecule editor written in JavaScript was developed and is released under the terms of permissive BSD license. The editor is compatible with JME, has practically the same user interface as well as the web application programming interface. The JSME editor is available for download from the project web page http://peter-ertl.com/jsme/","['pubmed', 'journals']"
pubmed-PMC3661054,RegaDB: community-driven data management and analysis for infectious diseases.,"Libin, Pieter","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29"" rel=""nofollow"">Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29%20AND%20volume%3A%2829%29"" rel=""nofollow"">volume 29</a>.<h2>Abstract</h2>Summary: RegaDB is a free and open source data management and analysis environment for infectious diseases. RegaDB allows clinicians to store, manage and analyse patient data, including viral genetic sequences. Moreover, RegaDB provides researchers with a mechanism to collect data in a uniform format and offers them a canvas to make newly developed bioinformatics tools available to clinicians and virologists through a user friendly interface.Availability and implementation: Source code, binaries and documentation are available on http://rega.kuleuven.be/cev/regadb. RegaDB is written in the Java programming language, using a web-service-oriented architecture.Contact:pieter.libin@rega.kuleuven.be","['pubmed', 'journals']"
etsi_ts_131_130_v11.00.00,TS 131 130 - V11.0.0 - Digital cellular telecommunications system (Phase 2+); Universal Mobile Telecommunications System (UMTS); LTE; (U)SIM Application Programming Interface (API); (U)SIM API for Java™ Card  (3GPP TS 31.130 version 11.0.0 Release 11),E,No Description Available,"['etsi_standards', 'additional_collections']"
tiered-130425114459-phpapp01,tiered-130425114459-phpapp01,I,<div>Tiered Compilation in Hotspot JVM (PowerPoint presentation)</div><div><br /></div>,opensource
etsi_ts_103_115_v09.00.00,TS 103 115 - V9.0.0 - Smart Cards; Test specification for UICC Application Programming Interface for Java Card™ for Contactless Applications; Test Environment and Annexes; (Release 9),E,No Description Available,"['etsi_standards', 'additional_collections']"
pubmed-PMC3661052,LibSBMLSim: a reference implementation of fully functional SBML simulator.,"Takizawa, Hiromu","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29"" rel=""nofollow"">Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29%20AND%20volume%3A%2829%29"" rel=""nofollow"">volume 29</a>.<h2>Abstract</h2>Motivation: The Systems Biology Markup Language (SBML) is currently supported by >230 software tools, among which 160 support numerical integration of ordinary differential equation (ODE) models. Although SBML is a widely accepted standard within this field, there is still no language-neutral library that supports all features of SBML for simulating ODE models. Therefore, a demand exists for a simple portable implementation of a numerical integrator that supports SBML to enhance the development of a computational platform for systems biology.Results: We implemented a library called libSBMLSim, which supports all the features of SBML and confirmed that the library passes all tests in the SBML test suite including those for SBML Events, AlgebraicRules, ‘fast’ attribute on Reactions and Delay. LibSBMLSim is implemented in the C programming language and does not depend on any third-party library except libSBML, which is a library to handle SBML documents. For the numerical integrator, both explicit and implicit methods are written from scratch to support all the functionality of SBML features in a straightforward implementation. We succeeded in implementing libSBMLSim as a platform-independent library that can run on most common operating systems (Windows, MacOSX and Linux) and also provides several language bindings (Java, C#, Python and Ruby).Availability: The source code of libSBMLSim is available from http://fun.bio.keio.ac.jp/software/libsbmlsim/. LibSBMLSim is distributed under the terms of LGPL.Contact:funa@bio.keio.ac.jpSupplementary information:Supplementary data are available at Bioinformatics online.","['pubmed', 'journals']"
pubmed-PMC4008935,A tutorial for software development in quantitative proteomics using PSI standard formats☆.,"Gonzalez-Galarza, Faviel F.","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Biochimica%20et%20Biophysica%20Acta%29"" rel=""nofollow"">Biochimica et Biophysica Acta</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Biochimica%20et%20Biophysica%20Acta%29%20AND%20volume%3A%281844%29"" rel=""nofollow"">volume 1844</a>.<h2>Abstract</h2>The Human Proteome Organisation — Proteomics Standards Initiative (HUPO-PSI) has been working for ten years on the development of standardised formats that facilitate data sharing and public database deposition. In this article, we review three HUPO-PSI data standards — mzML, mzIdentML and mzQuantML, which can be used to design a complete quantitative analysis pipeline in mass spectrometry (MS)-based proteomics. In this tutorial, we briefly describe the content of each data model, sufficient for bioinformaticians to devise proteomics software. We also provide guidance on the use of recently released application programming interfaces (APIs) developed in Java for each of these standards, which makes it straightforward to read and write files of any size. We have produced a set of example Java classes and a basic graphical user interface to demonstrate how to use the most important parts of the PSI standards, available from http://code.google.com/p/psi-standard-formats-tutorial. This article is part of a Special Issue entitled: Computational Proteomics in the Post-Identification Era. Guest Editors: Martin Eisenacher and Christian Stephan.","['pubmed', 'journals']"
DTIC_ADA586384,DTIC ADA586384: Modeling and Simulation in Support of MALSP II Report of Findings,D,"This project employs modeling and simulation analysis in an effort to assess various aspects of the Marine Aviation Logistics Support Program II (MALSP II) doctrine currently in development. MALSP II leverages recent innovations in information technology, logistics chain management, and continuous process improvement in order to improve logistical support to deployed Marine air assets. The model develop in this project is a Discrete Event Simulation, implemented in Java using the SimKit programming libraries. It is employed to specifically analyze aspects of MALSP II doctrine; however, it is sufficiently flexible to analyze various aspects of Legacy MALSP concepts as well. The model is relatively straightforward and has a small number of inputs. In most cases, sufficient data exist to confirm the suitability of modeling a given empirical distribution in a particular manner. In some instances where data are more difficult to obtain, compelling theoretical reasons exist as justification for selecting a particular distribution or algorithm.","['dticarchive', 'additional_collections']"
NASA_NTRS_Archive_20130011238,NASA Technical Reports Server (NTRS) 20130011238: Monitoring and Acquisition Real-time System (MARS),N,"MARS is a graphical user interface (GUI) written in MATLAB and Java, allowing the user to configure and control the Scalable Parallel Architecture for Real-Time Acquisition and Analysis (SPARTAA) data acquisition system. SPARTAA not only acquires data, but also allows for complex algorithms to be applied to the acquired data in real time. The MARS client allows the user to set up and configure all settings regarding the data channels attached to the system, as well as have complete control over starting and stopping data acquisition. It provides a unique ""Test"" programming environment, allowing the user to create tests consisting of a series of alarms, each of which contains any number of data channels. Each alarm is configured with a particular algorithm, determining the type of processing that will be applied on each data channel and tested against a defined threshold. Tests can be uploaded to SPARTAA, thereby teaching it how to process the data. The uniqueness of MARS is in its capability to be adaptable easily to many test configurations. MARS sends and receives protocols via TCP/IP, which allows for quick integration into almost any test environment. The use of MATLAB and Java as the programming languages allows for developers to integrate the software across multiple operating platforms.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1303.0276,AutoSynch: An Automatic-Signal Monitor Based on Predicate Tagging,Wei-Lun Hung,"Most programming languages use monitors with explicit signals for synchronization in shared-memory programs. Requiring program- mers to signal threads explicitly results in many concurrency bugs due to missed notifications, or notifications on wrong condition variables. In this paper, we describe an implementation of an au- tomatic signaling monitor in Java called AutoSynch that eliminates such concurrency bugs by removing the burden of signaling from the programmer. We show that the belief that automatic signaling monitors are prohibitively expensive is wrong. For most problems, programs based on AutoSynch are almost as fast as those based on explicit signaling. For some, AutoSynch is even faster than explicit signaling because it never uses signalAll, whereas the programmers end up using signalAll with the explicit signal mechanism. AutoSynch achieves efficiency in synchronization based on three novel ideas. We introduce an operation called globalization that enables the predicate evaluation in every thread, thereby reducing context switches during the execution of the program. Secondly, AutoSynch avoids signalAll by using a property called relay invari- ance that guarantees that whenever possible there is always at least one thread whose condition is true which has been signaled. Finally, AutoSynch uses a technique called predicate tagging to efficiently determine a thread that should be signaled. To evaluate the effi- ciency of AutoSynch, we have implemented many different well- known synchronization problems such as the producers/consumers problem, the readers/writers problems, and the dining philosophers problem. The results show that AutoSynch is almost as efficient as the explicit-signal monitor and even more efficient for some cases.","['arxiv', 'additional_collections', 'journals']"
the-java-language-specification-java-se-7-edition,"The Java Language Specification, Java SE 7 Edition",O,"The Java Language Specification, Java SE 7 Edition <br />",opensource
NASA_NTRS_Archive_20130010395,NASA Technical Reports Server (NTRS) 20130010395: Application Programming in AWIPS II,N,No abstract available,"['NASA_NTRS_Archive', 'additional_collections']"
Apress.Beginning.C.5th.Edition.2013,"Beginning C, 5th Edition",I,"<p><em>Beginning C, 5th Edition</em> teaches you how to program using 
the widely-available C language. You'll begin from first-principles and 
progress through step-by-step examples to become a competent, C-language
 programmer. All you need are this book and any of the widely available 
free or commercial C or C++ compilers, and you'll soon be writing real C
 programs. </p><p>C is a foundational language that every programmer 
ought to know. C is the basis for C# used in Microsoft .NET programming.
 It is the basis for Objective-C used in programming for the iPhone, the
 iPad, and other Apple devices. It is the basis for the C++ that is 
widely used in a great many contexts, including the GNU Project. It 
underlies the Linux operating system and many of its utilities. Learning
 C provides a strong foundation for any programming care, and will even 
help you better understand more modern languages such as Java. </p><p><em>Beginning C</em>
 is written by renowned author Ivor Horton. The book increases your 
programming expertise by guiding you through the development of fully 
working C applications that use what you've learned in a practical 
context. You’ll also be able to strike out on your own by trying the 
exercises included at the end of each chapter. At the end of the book 
you'll be confident in your skills with all facets of the widely-used 
and powerful C language.</p><ul><li class=""active"">The only beginning-level book to cover the latest ANSI standard in C </li><li>Revised to cover C99 features newly-supported by language compilers </li><li>Emphasizes writing code after the first chapter </li><li>Includes substantial examples relevant to intermediate users </li></ul>","['programming_books', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
ERIC_EJ1064349,"ERIC EJ1064349: Java across Different Curricula, Courses and Countries Using a Common Pool of Teaching Material",E,"Under the auspices of a DAAD funded educational project, a subproject devoted to different aspects of teaching the Java programming language started several years ago. The initial intention of the subproject was to attract members of the subproject to prepare some teaching materials for teaching essentials of the Java programming language. During the last two years, some advanced Java topics have been selected and appropriate teaching materials have been produced. The available pool of common teaching materials can be used in a wide range of university courses in participating countries. In this paper we share some of the results and experiences collected during the subproject that come from intensive use of the prepared teaching materials for a variety of Java topics in different countries and universities.","['ericarchive', 'additional_collections']"
ERIC_EJ1076755,ERIC EJ1076755: Framework for the Development of OER-Based Learning Materials in ODL Environment,E,"This paper describes the framework for the development of OER-based learning materials ""TCC121/05 Programming Fundamentals with Java"" for ODL learners in Wawasan Open University (WOU) using three main development phases mainly: creation, evaluation and production phases. The proposed framework has further been tested on ODL learners to promote greater use of OER [Open Educational Resources] repositories and further the acceptance of a wider range of learning resources. By using collective feedback sessions, the walkthrough of available OER resources to be integrated or assembled into the learning materials is illustrated in the course development cycle and the interaction among students and instructors and learning experiences of courses units' content are evaluated at the end of each of the courses with the production of external course assessor's reports (Quality Assurance). The learners' interactions with OER materials in LMS have demonstrated the development of a model for effective knowledge transfer using OER.","['ericarchive', 'additional_collections']"
NASA_NTRS_Archive_20130003349,NASA Technical Reports Server (NTRS) 20130003349: Adoption of Test Driven Development and Continuous Integration for the Development of the Trick Simulation Toolkit,N,"This paper describes the adoption of a Test Driven Development approach and a Continuous Integration System in the development of the Trick Simulation Toolkit, a generic simulation development environment for creating high fidelity training and engineering simulations at the NASA/Johnson Space Center and many other NASA facilities. It describes what was learned and the significant benefits seen, such as fast, thorough, and clear test feedback every time code is checked-in to the code repository. It also describes a system that encourages development of code that is much more flexible, maintainable, and reliable. The Trick Simulation Toolkit development environment provides a common architecture for user-defined simulations. Trick builds executable simulations using user-supplied simulation-definition files (S_define) and user supplied ""model code"". For each Trick-based simulation, Trick automatically provides job scheduling, checkpoint / restore, data-recording, interactive variable manipulation (variable server), and an input-processor. Also included are tools for plotting recorded data and various other supporting tools and libraries. Trick is written in C/C++ and Java and supports both Linux and MacOSX. Prior to adopting this new development approach, Trick testing consisted primarily of running a few large simulations, with the hope that their complexity and scale would exercise most of Trick's code and expose any recently introduced bugs. Unsurprising, this approach yielded inconsistent results. It was obvious that a more systematic, thorough approach was required. After seeing examples of some Java-based projects that used the JUnit test framework, similar test frameworks for C and C++ were sought. Several were found, all clearly inspired by JUnit. Googletest, a freely available Open source testing framework, was selected as the most appropriate and capable. The new approach was implemented while rewriting the Trick memory management component, to eliminate a fundamental design flaw. The benefits became obvious almost immediately, not just in the correctness of the individual functions and classes but also in the correctness and flexibility being added to the overall design. Creating code to be testable, and testing as it was created resulted not only in better working code, but also in better-organized, flexible, and readable (i.e., articulate) code. This was, in essence the Test-driven development (TDD) methodology created by Kent Beck. Seeing the benefits of Test Driven Development, other Trick components were refactored to make them more testable and tests were designed and implemented for them.","['NASA_NTRS_Archive', 'additional_collections']"
ada-for-the-c-or-java-developer,Ada For The C++ Or Java Developer,O,A short primer on the basics of coding in ADA for C++ or Java developers from AdaCore.,"['folkscanomy_computer_inbox', 'folkscanomy_computer', 'folkscanomy', 'additional_collections']"
androidbootcampf0000hois,"Android Boot Camp for developers using Java, comprehensive : a beginner's guide to creating your first Android Apps",H,"['xl, 471 pages : 25 cm', 'This title helps you prepare students with a thorough introduction to Java and the keys to creating effective mobile applications. Designed for a first-semester course in programming, the book is ideal for students who have some programming experience or are new to Java', 'Includes index', 'Machine generated contents note: Meet the Android -- Android Phone Device -- Features of the Android -- Writing Android Apps -- Android Emulator -- Getting Oriented with Market Deployment -- First Venture into the Android World -- Opening Eclipse to Create a New Project -- Creating the Hello World Project -- Building the User Interface -- Taking a Tour of the Package Explorer -- Designing the User Interface Layout -- Adding a Form Widget to the User Interface Layout -- Testing the Application in the Emulator -- Opening a Saved App in Eclipse -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Quote of the Day App -- Case Project Android Terminology App -- Case Project Business Card App -- Designing an Android App -- The Big Picture -- Using the Android User Interface -- Linear Layouts and Relative Layouts -- Designing the Healthy Recipes Opening User Interface -- Android Text Properties', 'Contents note continued: Adding a File to the Resources Folder -- Adding an ImageView Control -- Adding a Button Control -- Planning a Program -- Creating Activities -- Creating an XML Layout File -- Adding a Class File -- The Android Manifest File -- Adding an Activity to the Android Manifest -- Coding the Java Activity -- Coding an onCreate Method -- Displaying the User Interface -- Creating a Button Event Handler -- Coding a Button Event Handler -- Correcting Errors in Code -- Saving and Running the Application -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Rental Property App -- Case Project Star Constellation App -- Case Project Your School App -- Case Project Hostel App for Travel -- Case Project Your Contacts App -- Address Book -- Case Project Latest News App -- Android Themes -- Previewing a Theme -- Coding a Theme in the Android Manifest File -- Simplifying User Input -- Android Text Fields', ""Contents note continued: Adding a Text Field -- Setting the Hint Property for the Text Field -- Coding the EditText Class for the Text Field -- Android Spinner Control -- Adding a Spinner Control with String Array Entries -- Coding the Spinner Control -- Adding the Button, TextView, and ImageView Controls -- Declaring Variables -- Primitive Data Types -- String Data Type -- Declaring the Variables -- GetText() Method -- Working with Mathematical Operations -- Arithmetic Operators -- Formatting Numbers -- Displaying Android Output -- GetSelectedItem() Method -- SetText() Method -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Study Abroad App -- Case Project Tuition App -- Case Project New York City Cab Fare App -- Case Project Paint Calculator App -- Case Project Split the Bill App -- Case Project Piggy Bank Children's App -- The Launcher Icon -- Customizing a Launcher Icon"", 'Contents note continued: RadioButton and RadioGroup Controls -- Changing the Text Color of Android Controls -- Changing the Layout Gravity -- Changing the Margins -- Adding the RadioButton Group -- Coding a RadioButton Control -- Completing the User Interface -- Making Decisions with Conditional Statements -- Using an If Statement -- Using If Else Statements -- Relational Operators -- Logical Operators -- Data Validation -- Toast Notification -- Using the isChecked() Method of RadioButton Controls -- Nested If Statements -- Coding the Button Event -- Coding the Nested If Statements -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Temperature Conversion App -- Case Project Movie Time App -- Case Project Floor Tiling App -- Case Project Math Flash Cards App -- Case Project Currency Conversion App -- Case Project Average Income Tax by Country App -- Creating a List -- Extending a ListActivity', 'Contents note continued: Creating an Array -- Declaring an Array -- Using a setListAdapter and Array Adapter -- Adding the Images to the Resources Folder -- Creating a Custom XML Layout for ListView -- Changing the Title Bar Text -- Coding a setListAdapter with a Custom XML Layout -- Using the onListItemClick Method -- Decision Structure-Switch Statement -- Android Intents -- Launching the Browser from an Android Device -- Designing XML Layout Files -- Adding Multiple Class Files -- Opening the Class Files -- Running and Testing the Application -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Italian Restaurant App -- Case Project Box Office App -- Case Project Rent a Car App -- Case Project Coffee Finder App -- Case Project Tech Gadgets App -- Case Project Create Your Own App -- Creating a Splash Screen -- Adding a Background Image to a TextView Widget -- Creating a Timer -- Scheduling a Timer', 'Contents note continued: Life and Death of an Activity -- Launching the Next Activity -- Designing the main.xml File -- Class Variables -- Playing Music -- Creating a Raw Folder for Music Files -- Using the MediaPlayer Class -- The MediaPlayer State -- Changing the Text Property Using Code -- Changing the Visibility Property Using Code -- Running and Testing the Application -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Rhythm of the Strings App -- Case Project Guitar Solo App -- Case Project Serenity Sounds App -- Case Project Sleep Machine App -- Case Project Ring Tones App -- Case Project Your Personal Playlist App -- Adding a Gallery Control -- Adding the ImageView Control and Image Files -- Creating an Array for the Images -- Instantiating the Gallery and ImageView Controls -- Using a setAdapter with an ImageAdapter -- Coding the OnItemClickListener -- Coding a Custom Toast Notification', 'Contents note continued: Displaying the Selected Image -- Customizing the ImageAdapter Class -- Defining the Context of the ImageAdapter Class -- Calculating the Length of an Array -- Coding the getView Method -- Running and Testing the Application -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Power Tools App -- Case Project S.P.C.A. Rescue Shelter App -- Case Project Four Seasons App -- Case Project Car Rental App -- Case Project Anthology Wedding Photography App -- Case Project Personal Photo App -- Designing a Tablet Application -- Design Tips for Tablets -- Adding an Android Virtual Device for the Tablet -- Creating a Tablet App -- Setting the Launcher Icon of a Tablet App -- Setting a Custom Theme of a Tablet -- Designing a Tablet Table Layout -- Date, Time, and Clocks -- Determining the Current Time -- Initializing the Button and TextView Controls -- ShowDialog Method', 'Contents note continued: Using the Calendar Class -- Adding the OnCreateDialog Method -- Coding the onDateSetListener Method -- Running and Testing the Application -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Oasis Day Spa Tablet App -- Case Project Washington D.C. Walking Tour Tablet App -- Case Project Country Cabin Rental Tablet App -- Case Project Final Touch Auto Detailing Tablet App -- Case Project Wild Ginger Dinner Delivery Tablet App -- Case Project Create Your Own Tablet App -- Creating a Tab Layout for a Tablet -- The TabHost Layout -- Extending the TabActivity Class -- Adding the Tab and GridView Images -- Creating a GridView XML Layout for the First Tab -- Creating a TextView XML Layout for the Second Tab -- Creating the XML Layout for the Third Tab -- Coding the GridView Activity for the First Tab -- Using a setAdapter with an ImageAdapter -- Customizing the ImageAdapter Class', 'Contents note continued: Coding the getView Method -- Coding the Second Tab Java File -- Coding the Third Tab Java File to Display a Web Site -- Coding the TabHost -- Adding the TabSpec to TabHost -- Updating the Android Manifest File -- Running and Testing the Application -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Sushi 101 Tablet App -- Case Project Golf Course Tablet App -- Case Project Famous Artist Tablet App -- Case Project Snap Fitness Tablet App -- Case Project Go Web 2.0 Tablet App -- Case Project Pick Your Topic Tablet App -- Android Animation -- Adding the Layout for the Frame Image and Button Controls -- Creating Frame-by-frame Animation -- Coding the AnimationDrawable Object -- Setting the Background Resource -- Adding Two Button Controls -- Using the Start and Stop Methods -- Adding the Layout for the Tween Image -- Creating Tween Animation -- Coding a Tween Rotation XML File', 'Contents note continued: Coding a Second Activity to Launch the Tween Animation -- Coding a StartAnimation -- Updating the Android Manifest File -- Changing the Emulator to Landscape Orientation -- Running and Testing the Application -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Learn How to Make Biscuits App -- Case Project Improve Your Golf Stroke App -- Case Project Droid Rotation App -- Case Project Cartoon Animation App -- Case Project Flags of the World App -- Case Project Frame and Tween Animation Game App -- Using Google Maps -- Installing the Google API -- Adding the AVD to Target the Google API -- Obtaining a Maps API Key from Google -- Troubleshooting -- Registering the MD5 Fingerprint with the Google Maps Service -- Adding the MapView Element in the XML Code -- Adding Permissions to the Android Manifest File -- Understanding MapView -- Adding Overlay Items', ""Contents note continued: Adding Overlay Objects to an ArrayList -- Coding the onTap Method -- Coding the Drawable Overlay -- Locating a GeoPoint -- Coding the GeoPoint Location -- Running and Testing the Application -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book -- Case Programming Projects -- Case Project Largest U.S. Cities App -- Case Project New Year's Eve Celebrations App -- Case Project Olympic Cities App -- Case Project Personal Map App -- Understanding Google Play -- Targeting Different Device Configurations and Languages -- Testing Your App on an Android Device -- Creating an APK Package -- Preparing Promotional Materials to Upload -- Providing Images -- Providing a Description -- Including App Information -- Registering for a Google Play Account -- Uploading an App to Google Play -- Wrap It Up-Chapter Summary -- Key Terms -- Developer FAQs -- Beyond the Book""]","['printdisabled', 'internetarchivebooks', 'inlibrary']"
androidbootcampf0000hois_z6c8,"Android boot camp for developers using Java, introductory : a beginner's guide to creating your first Android apps ",H,"['xxiv, 232 pages :', 'Prepares readers for mobile application success with a concise introduction to both Java programming and the secrets to creating effective mobile applications. This book offers a hands-on tutorial approach with clear, step-by-step instruction and numerous screen shots to guide readers through completing tasks', 'Voilà! Meet the Android -- Simplify! The Android user interface -- Engage! Android user input, variables, and operations -- Explore! Icons and decision-making controls -- Investigate! Android lists, arrays, and web browsers -- Jam! Implementing audio in Android apps']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
androidgameprogr0000jame,Android game programming for dummies ,J,"['xviii, 362 p. : 26 cm', ""Get your head in the game and start developing engaging Android apps that game gurus will love! A bit of Java knowledge is helpful, but even if you lack that, this book will walk you through creating two Android games and getting them into Google Play. Once you've got the basics down, let your imagination lead the way!"", 'Includes Internet access', 'Includes index', 'Introduction -- Adopting the Android gaming mindset -- Starting to program -- Making your first game: Crazy eights -- Moving on to your second game: Whack-a-mole -- Managing your game in the market -- The part of tens']","['printdisabled', 'internetarchivebooks']"
androidhowtoprog0000deit,Android how to program,D,"['xxxviii, 862 pages : 23 cm', 'The Deitels\' App-Driven, Live Code Approach is simply the best way to master Android programming! The Deitels teach Android programming through sixteen complete, working Android Apps. Each chapter presents new concepts through a single App. The authors first discuss what the App does, show screen shots, test drive the App, and present an overview of the technologies and architecture used to build it. Next, the authors walk through building the App, presenting complete code and providing a detailed ""Live Code"" walkthrough. As part of the code walkthrough, they discuss essential programming concepts, and demonstrate the functionality of relevant Android 2.x APIs. Readers will gain hands-on experience with a wide spectrum of essential Android APIs. The book also has an extensive introduction to programming using the Java language, making this book appropriate for Java courses that want to add an app-programming flavor', 'Includes index']","['printdisabled', 'internetarchivebooks']"
apachesolrbeginn0000sera,Apache Solr Beginner's Guide,S,"['1 online resource (324 pages)', 'Written in a friendly, example-driven format, the book includes plenty of step-by-step instructions and examples that are designed to help you get started with Apache Solr. This book is an entry level text into the wonderful world of Apache Solr. The book will center around a couple of simple projects such as setting up Solr and all the stuff that comes with customizing the Solr schema and configuration. This book is for developers looking to start using Apache Solr who are stuck or intimidated by the difficulty of setting it up and using it. For anyone wanting to embed a search engine in their', 'Cover; Copyright; Credits; About the Author; Acknowledgments; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Getting Ready with the Essentials; Understanding Solr; Learning the powerful aspects of Solr; Working with Java installation; Downloading and installing Java; Configuring CLASSPATH and PATH variables for Java; Installing and testing Solr; Time for action -- starting Solr for the first time; Taking a glance at the Solr interface; Time for action -- posting some example data; Time for action -- testing Solr with cURL; Who uses Solr?; Resources on Solr', 'How will we use Solr?Summary; Chapter 2 Indexing with Local PDF Files; Understanding and using an index; Posting example documents to the first Solr core; Analyzing the elements we need in Solr core; Time for action -- configuring Solr Home and Solr core discovery; Knowing the legacy solr.xml format; Time for action -- writing a simple solrconfig.xml file; Time for action -- writing a simple schema.xml file; Time for action -- starting the new core; Time for action -- defining an example document; Time for action -- indexing an example document with cURL; Executing the first search on the new core', 'Adding documents to the index from the web UITime for action -- updating an existing document; Time for action -- cleaning an index; Creating an index prototype from PDF files; Time for action -- defining the schema.xml file with only dynamic fields and tokenization; Time for action -- writing a simple solrconfig.xml file with an update handler; Testing the PDF file core with dummy data and an example query; Defining a new tokenized field for fulltext; Time for action -- using Tika and cURL to extract text from PDFs; Using cURL to index some PDF data', ""Time for action -- finding copies of the same files with deduplicationTime for action -- looking inside an index with SimpleTextCodec; Understanding the structure of an inverted index; Understanding how optimization affects the segments of an index; Writing the full configuration for our PDF index example; Writing the solrconfig.xml file; Writing the schema.xml file; Summarizing some easy recipes for the maintenance of an index; Summary; Chapter 3: Indexing Example Data from DBPedia -- Paintings; Harvesting paintings' data from DBPedia; Analyzing the entities that we want to index"", 'Analyzing the first entity -- PaintingWriting Solr core configurations for the first tests; Time for action -- defining the basic solrconfig.xml file; Looking at the differences between commits and soft commits; Time for action -- defining the simple schema.xml file; Introducing analyzers, tokenizers, and filters; Thinking fields for atomic updates; Indexing a test entity with JSON; Understanding the update chain; Using the atomic update; Understanding how optimistic concurrency works; Time for action -- listing all the fields with the CSV output; Defining a new Solr core for our Painting entity', 'Time for action -- refactoring the schema.xml file for the paintings core by introducing tokenization and stop words', 'Print version record']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningjavaee70000gonc,Beginning Java EE 7 ,G,"['xxxiv, 573 pages : 24 cm', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
beginningjavapro0000vohr,Beginning java programming : the object oriented approach ,V,pages cm,"['printdisabled', 'internetarchivebooks']"
bigjavalateobjec0000hors,Big Java : late objects ,H,"['xxxiii, 1018 p. : 26 cm', '""The introductory programming course is difficult. Many students fail to succeed or have trouble in the course because they don\'t understand the material and do not practice programming sufficiently. Big Java for Everyone will provide an authoritative but accessible introduction to the fundamentals of Java Programming using a fundamentals first/late objects approach and providing extensive opportunities for programming practice""--Provided by publisher', 'Includes index', 'Machine generated contents note: 1. Introduction 1.1 Computer Programs 1.2 The Anatomy of a Computer 1.3 The Java Programming Language 1.4 Becoming Familiar with Your Programming Environment 1.5 Analyzing Your First Program 1.6 Errors 1.7 Problem Solving: Algorithm Design 2. Fundamental Data Types 2.1 Variables 2.2 Arithmetic 2.3 Input and Output 2.4 Problem Solving: First Do it By Hand 2.6 Strings 3. Decisions 3.1 The if Statement 3.2 Comparing Numbers and Strings 3.3 Multiple Alternatives 3.4 Nested Branches 3.5 Problem Solving: Flowcharts 3.6 Problem Solving: Test Cases 3.7 Boolean Variables and Operators 3.8 Application: Input Validation 4. Loops 4.1 The while Loop 4.2 Problem Solving: Hand-Tracing 4.3 The for Loop 4.4 The do Loop 4.5 Application: Processing Sentinel Values 4.6 Problem Solving: Storyboards 4.7 Common Loop Algorithms 4.8 Nested Loops 4.9 Application: Random Numbers and Simulations 5. Methods 5.1 Methods as Black Boxes 5.2 Implementing Methods 5.3 Parameter Passing 5.4 Return Values 5.5 Methods Without Return Values 5.6 Problem Solving: Reusable Methods 5.7 Problem Solving: Stepwise Refinement 5.8 Variable Scope 5.9 Recursive Methods (Optional) 6. Arrays and Array Lists 6.1 Arrays 6.2 The Enhanced for Loop 6.3 Common Array Algorithms 6.4 Using Arrays with Methods 6.5 Problem Solving: Adapting Algorithms 6.6 Problem Solving: Discovering Algorithms by Manipulating Physical Objects 6.7 Two-Dimensional Arrays 6.8 Array Lists 7. Input/Output and Exception Handling 7.1 Reading and Writing Text Files 7.2 Text Input and Output 7.3 Command Line Arguments 7.4 Exception Handling 7.5 Application: Handling Input Errors 8. Objects and Classes 8.1 Object-Oriented Programming 8.2 Implementing a Simple Class 8.3 Specifying the Public Interface of a Class 8.4 Designing the Data Representation 8.5 Implementing Instance Methods 8.6 Constructors 8.7 Testing a Class 8.8 Problem Solving: Tracing Objects 8.8 Problem Solving: Patterns for Object Data 8.10 Object References 8.11 Static Variables and Methods 9. Inheritance and Interfaces 9.1 Inheritance Hierarchies 9.2 Implementing Subclasses 9.3 Overriding Methods 9.4 Polymorphism 9.5 Object: The Cosmic Superclass 9.6 Interface Types 10. Graphical User Interfaces 10.1 Frame Windows 10.2 Events and Event Handling 10.3 Processing Text Input 10.4 Creating Drawings 11. Advanced User Interfaces 11.1 Layout Management 11.2 Choices 11.3 Menus 11.4 Exploring the Swing Documentation 11.5 Using Timer Events for Animations 11.6 Mouse Events 12. Object-Oriented Design 12.1 Classes and Their Responsibilities 12.2 Relationships Between Classes 12.3 Application: Printing an Invoice 12.4 Packages 13. Recursion 13.1 Triangle Numbers Revisited 13.2. Problem Solving: Thinking Recursively 13.3 Recursive Helper Methods 13.4 The Efficiency of Recursion 13.5 Permutations 13.6 Mutual Recursions 13.7 Backtracking 14. Sorting and Searching 14.1 Selection Sort 14.2 Profiling the Selection Sort Algorithm 14.3 Analyzing the Performance of the Selection Sort Algorithm 14.4 Merge Sort 14.5 Analyzing the Merge Sort Algorithm 14.6 Searching 14.7 Problem Solving: Estimating The Running Time Of An Algorithm 14.8 Sorting and Searching in the Java Library 15. The Java Collections Framework 15.1 An Overview of the Collections Framework 15.2 Linked Lists 15.3 Stacks, Queues, and Priority Queues 15.4 Sets 15.5 Maps 16. Basic Data Structures 16.1 Implementing Linked Lists 16.2 Implementing Array Lists 16.3 Implementing Stacks and Queues 16.4 Stack and Queue Applications 16.5 Implementing A Hash Table 17. Tree Structures 17.1 Basic Tree Concepts 17.2 Binary Trees 17.3 Binary Search Trees 17.4 Tree Traversal 17.5 Red-Black Trees 17.6 Heaps 17.7 The Heapsort Algorithm 18. Generic Classes 18.1 Generic Classes and Type Parameters 18.2 Implementing Generic Types 18.3 Generic Methods 18.4 Constraining Type Parameters 18.5 Type Erasure 19. Streams and Binary Input/Output 19.1 Readers, Writers, and Streams 19.2 Binary Input and Output 19.3 Random Access 19.4 Object Streams ===== Web chapters ========================================== 20. Multithreading (Online only) 20.1 Running Threads 20.2 Terminating Threads 20.3 Race Conditions 20.4 Synchronizing Object Access 20.5 Avoiding Deadlocks 21. Internet Networking (Online only) 21.1 The Internet Protocol 21.2 Application Level Protocols 21.3 A Client Program 21.4 A Server Program 21.5 URL Connections 22. Database Programming (Online only) 22.1 Organizing Database Information 22.2 Queries 22.3 Installing a Database 22.4 Database Programming in Java 22.5 Application: Entering An Invoice 23. XML (Online only) 23.1 XML Tags and Documents 23.2 Parsing XML Documents 23.3 Creating XML Documents 23.4 Validating XML Documents 24. Web Applications (Online only) 24.1 The Architecture of a Web Application 24.2 The Architecture of a JSF Application 24.3 JavaBeans Components 24.4 Navigation Between Pages 24.5 JSF Components 24.6 A Three-Tier Application ==== Appendices ========================================== APPENDIX A THE BASIC LATIN AND LATIN-1 SUBSETS OF UNICODE APPENDIX B JAVA OPERATOR SUMMARY APPENDIX C JAVA RESERVED WORD SUMMARY APPENDIX D THE JAVA LIBRARY APPENDIX E JAVA SYNTAX SUMMARY APPENDIX F HTML SUMMARY APPENDIX G TOOL SUMMARY APPENDIX H JAVADOC SUMMARY APPENDIX I NUMBER SYSTEMS APPENDIX J BIT AND SHIFT OPERATIONS APPENDIX K UML SUMMARY APPENDIX L JAVA LANGUAGE CODING GUIDELINES ']","['printdisabled', 'internetarchivebooks']"
boostcapplicatio0000anto,Boost C++ application development cookbook,P,"['1 online resource (348 pages)', 'Includes index', 'Table of Contents; Boost C++ Application Development Cookbook; Boost C++ Application Development Cookbook; Credits; About the Author; About the Reviewers; www.PacktPub.com; Support files, eBooks, discount offers and more; Why Subscribe?; Free Access for Packt account holders; Preface; What this book covers; What you need for this book; Who this book is for; Conventions; Reader feedback; Customer support; Downloading the example code; Errata; Piracy; Questions; 1. Starting to Write Your Application; Introduction; Getting configuration options; Getting ready; How to do it ... ; How it works ..', ""There's more ... See also; Storing any value in a container/variable; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Storing multiple chosen types in a variable/container; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Using a safer way to work with a container that stores multiple chosen types; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Returning a value or flag where there is no value; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Returning an array from a function"", ""Getting readyHow to do it ... ; How it works ... ; There's more ... ; See also; Combining multiple values into one; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Reordering the parameters of function; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Binding a value as a function parameter; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Using the C++11 move emulation; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Making a noncopyable class; Getting ready; How to do it .."", ""How it works ... See also; Making a noncopyable but movable class; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; 2. Converting Data; Introduction; Converting strings to numbers; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Converting numbers to strings; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Converting numbers to numbers; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Converting user-defined types to/from strings; How to do it ... ; How it works ... ; There's more .."", ""See alsoCasting polymorphic objects; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Parsing simple input; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Parsing input; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; 3. Managing Resources; Introduction; Managing pointers to classes that do not leave scope; Getting ready; How to do it ... ; How it works ... ; There's more ... ; See also; Reference counting of pointers to classes used across methods; Getting ready; How to do it ... ; How it works ... ; There's more .."", 'Online resource; title from PDF title page (ebrary, viewed September 24, 2013)', 'Print version record']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
buildingminecraf0000somm,Building Minecraft server modifications : discover how to program your own server plugins and augment your Minecraft server with Bukkit ,S,"['1 online resource (142 pages) :', 'Includes index', 'Description based on online resource; title from PDF title page (ebrary, viewed October 17, 2013)']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
buildyourownteam0000unse,Build your own teams of robots with Lego Mindstorms NXT and Bluetooth ,Unknown Author,"['xvii, 365 p. : 23 cm', 'Includes index', 'It takes two to tango -- Bluetooth for Mindstorms NXT : a closer look -- One fro all and all for one -- Creating a team of movers and shakers -- Bluetooth programming in NXT-G and LabVIEW -- Robot environments, teamwork strategies, and goals -- Give your team of robots Java power with leJOS -- Got Linux and Darwin on your team of robots? -- Advanced teamwork : one for all! -- Together we stand : the robot convoy -- The CSI project']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
chowtoprogram0000deit_j0g8,C : how to program,D,"['xxviii, 947 pages : 24 cm', 'Includes index', 'Introduction to computers, the Internet and the Web -- Introduction to C programming -- Structured program development in C -- C program control -- C functions -- C arrays -- C pointers -- C characters and strings -- C formatted input/output -- C structures, unions, bit manipulation and enumerations -- C file processing -- C data structures -- C preprocessor -- Other C topics -- C++ as a better C: introducing object technology -- Introduction to classes, objects and strings -- Classes: a deeper look -- Operator overloading; class string -- Object-oriented programming: inheritance -- Object-oriented programming: polymorphism -- Templates -- Stream input/output -- Exception handling: a deeper look -- A. Operator precedence charts -- B. ASCII character set -- C. Number systems -- D. Game programming: solving sudoku']","['printdisabled', 'internetarchivebooks']"
distributedprogr0000shan,Distributed programming : theory and practice ,S,"['1 online resource', 'Distributed Programming: Theory and Practice presents a practical and rigorous method to develop distributed programs that correctly implement their specifications. The method also covers how to write specifications and how to use them. Numerous examples such as bounded buffers, distributed locks, message-passing services, and distributed termination detection illustrate the method. Larger examples include data transfer protocols, distributed shared memory, and TCP network sockets. Distributed Programming: Theory and Practice bridges the gap between books that focus on specific concurrent programming languages and books that focus on distributed algorithms. Programs are written in a ""real-life"" programming notation, along the lines of Java and Python with explicit instantiation of threads and programs. Students and programmers will see these as programs and not ""merely"" algorithms in pseudo-code. The programs implement interesting algorithms and solve problems that are large enough to serve as projects in programming classes and software engineering classes. Exercises and examples are included at the end of each chapter with on-line access to the solutions. Distributed Programming: Theory and Practice is designed as an advanced-level text book for students in computer science and electrical engineering. Programmers, software engineers and researchers working in this field will also find this book useful', 'Includes bibliographical references and index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
findingsourcecod0000unse,Finding source code on the web for remix and reuse ,Unknown Author,"['xxi, 323 pages : 24 cm', ""Programmers and Practices. Unweaving Code Search Toward Remixing-Centered Programming Support / Kumiyo Nakakoji, Yasuhiro Yamamoto, Yoshiyuki Nishinaka -- Archetypal Internet-Scale Source Code Searching / Medha Umarji, Susan Elliott Sim -- A Controlled Experiment on the Process Used by Developers During Internet-Scale Code Search / Susan Elliott Sim, Megha Agarwala, Medha Umarji -- From Data Structures to Infrastructure. Artifact Representation Techniques for Large-Scale Software Search Engines / Oliver Hummel, Colin Atkinson, Marcus Schumacher -- Krugle Code Search Architecture / Ken Krugler -- Experiences and Lessons Learned with the Development of a Source Code Search Engine / Eduardo Santana de Almeida -- Infrastructure for Building Code Search Applications for Developers / Sushil Krishna Bajracharya -- Reuse: Components and Projects. Developing Software with Open Source Software Components / Claudia Ayala, Xavier Franch, Reidar Conradi, Jingyue Li, Daniela Cruzes -- Open Source Reuse and Strategic Imperatives / Rahul De', Ravi A. Rao -- Applying Program Analysis to Code Retrieval / Joel Ossher, Cristina Lopes -- Test-Driven Reuse: Key to Improving Precision of Search Engines for Software Reuse / Oliver Hummel, Werner Janjic -- Remix: Snippets and Answers. Software Problems That Motivate Web Searches / Rosalva E. Gallardo-Valencia, Susan Elliott Sim -- Novel and Applied Algorithms in a Search Engine for Java Code Snippets / Phitchayaphong Tantikul, C. Albert Thompson, Rosalva E. Gallardo-Valencia -- Facilitating Crowd Sourced Software Engineering via Stack Overflow / Ohad Barzilay, Christoph Treude, Alexey Zagalsky -- Looking Ahead. Intellectual Property Law in Source Code Reuse and Remix / Susan Elliott Sim, Erik B. Stenberg -- Richie Boss: Private Investigator Manager / Micah Joel -- Introduction: Remixing Snippets and Reusing Components / Susan Elliott Sim"", 'Includes bibliographical references']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
giantsofcomputin0000oreg,"Giants of computing : a compendium of select, pivotal pioneers ",O,"['xxi, 306 pages : 25 cm', 'It has been upon the shoulders of giants that the modern world has been forged. This accessible compendium presents an insight into the great minds responsible for the technology which has transformed our lives. Each pioneer is introduced with a brief biography, followed by a concise account of their key contributions to their discipline. The selection covers a broad spread of historical and contemporary figures from theoreticians to entrepreneurs, highlighting the richness of the field of computing. Presents a selection of computer entrepreneurs. Suitable for the general reader, this concise and easy-to-read reference will be of interest to anyone curious about the inspiring men and women who have shaped the field of computer science.""--Back cover', 'Includes bibliographical references (pages 299-302) and index', ""1. Background -- Digital computers -- Hardware and software -- Giants of computing -- 2. Howard Aiken -- Harvard Mark I -- 3. Gene Amdahl -- Amdahl Corporation -- Amdahl's Law -- 4. Archimedes -- 5. John Atanasoff -- Controversy (Mauchly and Atanasoff) -- 6. Charles Babbage -- Difference engine -- Finite differences -- Analytic engine -- 7. John Backus -- FORTRAN -- Backus-Naur Form -- 8. Gordon Bell -- Bell's Law of Computer Classes -- PDP and VAX series of minicomputers -- Computer History Museum -- 9. Tim Berners-Lee -- Applications of the World Wide Web -- 10. Dines Bj©ırner -- Formal methods -- Vienna Development Method -- RAISE -- 11. George Boole -- Modern Boolean Algebra -- Switching circuits and Boolean Algebra -- 12. Fred Brooks -- Mythical Man-month -- No silver bullet -- 13. Vannevar Bush -- The differential analyzer -- Bush's influence on scientific research -- The Memex -- 14. Vint Cerf -- TCP/IP -- 15. Alonzo Church -- Lambda calculus -- Decidability -- Computability -- 16. Noam Chomsky -- Chomsky hierarchy -- Computational linguistics -- 17. Edgar Codd -- The relational model -- Structured Query Language (SQL) -- 18. Rene Descartes -- Cartesian Dualism and AI -- Cartesian Geometry -- 19. Tom DeMarco -- Structured analysis and data flow diagrams -- Management and organization development -- 20. Edsger Dijkstra -- Calculus of weakest preconditions -- 21. George Devol -- Robotics -- 22. Larry Ellison -- Oracle Corporation -- Oracle database -- 23. Don Estridge -- IBM personal PC -- 24. Michael Fagan -- Fagan inspection process -- 25. Tommy Flowers -- Colossus -- Vernam cipher -- 26. Robert Floyd -- 27. Bill Gates -- Microsoft -- Microsoft Windows and Apple GUI -- The browser wars -- Bill and Melinda Gates Foundation -- 28. James Gosling -- Java -- Java programming language -- Java virtual machine -- 29. C.A.R Hoare -- Hoare logic -- Axiomatic definition of programming languages -- Communicating sequential processes -- 30. Heman Hollerith"", ""31. Watts Humphrey -- Software process improvement -- Capability Maturity Model Integrated (CMMI) -- PSP and TSP -- 32. Kenneth Iverson -- Turing Award (notation as a tool of thought) -- APL -- 33. Ivar Jacobson -- Specification and Description Language (SDL) -- Object-Oriented Software Engineering (OOSE) -- Unified modeling language -- Rational unified process -- 34. Steve Jobs -- Apple computers -- NeXT and Pixar -- Apple (return of Jobs) -- 35. Gary Kildall -- Licensing CP/M to IBM -- Computer chronicles -- 36. Donald Knuth -- Art of computer programming -- TeX -- 37. Gottfried Wilhelm Leibniz -- Step reckoner calculating machine -- Binary numbers -- Differential and integral calculus -- Philosophy -- 38. Ada Lovelace -- Applications of analytic engine -- 39. John McCarthy -- Artificial intelligence -- 40. John Mauchly -- ENIAC -- EDVAC -- Controversy : ABC and ENIAC -- 41. Marvin Minsky -- Artificial intelligence -- 42. Gordon Moore -- Intel -- Moore's Law -- 43. Grace Murray Hopper -- COBOL -- 44. John von Neumann -- von Neumann architecture -- 45. Ken Olsen -- Digital Equipment Corporation -- 46. David Parnas -- Tabular expressions -- Classical engineering education"", ""47. Dennis Ritchie -- C Programming Language -- UNIX -- 48. Dana Scott -- Automata Theory -- Scott-Strachey approach -- Domain Theory -- 49. John Searle -- Searle's Chinese room -- Strong AI -- Weak AI -- The Thought Experiment -- 50. Claude Shannon -- Boolean Algebra and switching circuits -- Information Theory -- Cryptography -- 51. William Shockley -- Invention of transistor -- Shockley Semiconductor Laboratory -- 52. Richard Stallman -- Free Software Foundation -- GNU -- 53. Bjarne Stroustrup -- C++ Programming Language -- Object-oriented languages -- 54. Alan Turing -- Turing machines and computability -- Bletchley Park -- National Physical Laboratory -- Turing test in AI -- 55. Thomas Watson Sr. -- Thomas Watson Jr. -- 56. Joseph Weizenbaum -- Eliza -- Ethics of Artificial Intelligence -- 57. Frederick Williams -- William Tube -- Manchester Baby -- Manchester Mark I -- Ferranti Mark I -- 58. Niklaus Wirth -- Pascal Programming Language -- Program development by Stepwise Refinement -- 59. Ed Yourdon -- Yourdon Structured Method -- 60. Konrad Zuse -- Zuse's machines -- Zuse and Plankalkul -- 61. Epilogue -- Quo vadimus? -- Glossary""]","['inlibrary', 'printdisabled', 'internetarchivebooks']"
grails2quickstar0000klei,Grails 2 : a quick-start guide ,K,"['1 online resource (1 volume) :', ""Grails is a full-stack web development framework that enables you to build complete web applications in a fraction of the time and with less code than other frameworks. Grails uses the principle of convention over configuration and the dynamic Groovy programming language. This revised and updated new edition shows you how to use Grails by iteratively building a unique, working application. By the time you're done, you'll have built and deployed a real, functioning website. Using this hands-on, pragmatic approach, you'll explore topics such as Ajax in Grails, custom tags, and plugins. You'll dig into Grails' powerful view technology, Groovy Server Pages, and see how you can easily leverage the help offered by scaffolding to create custom user interfaces faster than you would have thought possible. Along the way, you'll learn about domain classes, controllers, and GSP views. And you'll see how Grails enables you to use powerful frameworks such as Spring and Hibernate. With Grails, you can get a lot done with little effort. With this book, you'll get a lot done as well. Get started with Grails today. What You Need:Grails 2 will run on any machine that supports Java. Grails applications can be deployed on any Java Servlet container, including Tomcat, Jetty, WebLogic, JBoss, and Websphere"", 'Online resource; title from title page (Safari, viewed Oct. 15, 2014)', ""Place of publication from publisher's Web site"", 'Includes bibliographical references']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
introducingjavae0000june,Introducing Java EE 7 : a look at what's new ,J,"['xxiii, 214 pages : 24 cm', 'Includes index', '""Get up and running quickly with the new Java enterprise edition 7""--Cover']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
introductiontoco00unse,Introduction to compiler construction in a Java world,C,"['1 online resource (xxv, 349 pages) :', 'Print version record', 'Includes bibliographical references (pages 345-349)', 'Compilation; Compilers; Why Should We Study Compilers?; How Does a Compiler Work? The Phases of Compilation; An Overview of the j -- to JVM Compiler; The j -- Compiler Source Tree; The Organization of This Book Lexical Analysis; Introduction; Scanning Tokens; Regular Expressions; Finite State Automata; Nondeterministic Finite-State Automata (NFA) vs. Deterministic Finite-State Automata (DFA); Regular Expressions to NFA; NFA to DFA; A Minimal DFA; JavaCC: A Tool for Generating Scanners Parsing; Introduction; Context-Free Grammars and Languages; Top-down Deterministic Parsing; Bottom-up Deterministic Parsing; Parser Generation Using JavaCC Type Checking; Introduction; The j -- Types; j -- Symbol Tables; Pre-Analysis of j -- Programs; Analysis of j', 'Programs; The Visitor Pattern and the AST Traversal Mechanism; Programming Language Design and Symbol Table Structure; Attribute Grammars JVM Code Generation; Introduction; Generating Code for Classes and Their Members; Generating Code for Control and Logical Expressions; Generating Code for Message Expressions', 'Field Selection and Array Expressions; Generating Code for Assignment and Similar Operations; Generating Code for String Concatenation; Generating Code for Casts Translating JVM Code to MIPS Code; Introduction; SPIM and the MIPS Architecture; Our Translator Register Allocation; Introduction; Naïve Register Allocation; Local Register Allocation; Global Register Allocation Celebrity Compilers; Introduction; The Java HotSpot Compiler; The Eclipse Compiler for Java (ECJ); The GNU Java Compiler (GCJ); Microsoft C# Compiler for .NET Framework Appendix A: Setting Up and Running j -- ; Appendix B: The j', 'Language; Appendix C: Java Syntax; Appendix D: The JVM, Class Files and the CLEmitter; Appendix E: MIPS and the SPIM Simulator Bibliography Index Further Readings and Exercises appear at the end of each chapter']","['printdisabled', 'booksforukraine', 'americana']"
introductiontopr0000dean_n1c0,Introduction to Programming with Java: A Problem Solving Approach,D,No Description Available,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
javase7programmi0000erne,Java SE 7 programming essentials ,E,"['xxii, 314 p. : col. ill. ; 24 cm', 'Full-color guide gives a solid foundation in the fundamentals of Java SE 7 . Also prepares you for the Oracle: OCA: Java SE 7 Programmer certification exam (1Z0-803), covering all topics you need to know for exam--', '""Sybex""--Cover', '""Exam 1Z0-803""--Cover', 'Includes index', 'Introducing the basics of Java -- Applying data types in Java programming -- Using Java operators and conditional logic -- Using Java arrays -- Using loops in Java code -- Encapsulating data and exposing methods in Java -- Using Java methods to communicate -- Using Java constructors -- Inheriting code and data in Java -- Understanding Java interfaces and abstract classes -- Throwing and catching exceptions in Java -- Appendix A: Answers to review questions -- Appendix B: OCA Certification Program']","['printdisabled', 'internetarchivebooks']"
jmonkeyengine30b0000kust,"JMonkeyEngine 3.0 beginner's guide : develop professional 3D games for desktop, web, and mobile, all in the familiar Java programming language ",K,"['1 online resource (vi, 334 pages) :', 'With plenty of practical examples, screenshots and example code, create a complete game step by step. Learn by doing. Less theory, more results, If you have an inventive mind, are experienced in Java, enjoy looking through the smoke and mirrors of VFX and the world of game mechanics then this book is for you', '""Learn by doing: less theory, more results""--Cover', 'Includes index', 'Cover; Copyright; Credits; About the Author; About the Reviewers; www.PacktPub.com; Table of Contents; Preface; Chapter 1: Installing jMonkeyEngine; Installation requirements for game developers; Time for action -- installing the jMonkeyEngine SDK; jMonkeyEngine SDK at your service; Can I work in other Java IDEs?; Time for action -- running a demo; Time for action -- creating a project; Assets and the art pipeline; Time for action -- distributing a game; Can I sell my jMonkeyEngine game?; Summary; Chapter 2: Creating Your First 3D Scene; A basic template to initialize scenes', 'Time for action -- initializing a scene step by stepStarting and stopping the application; Time for action -- starting the application; Orient yourself in 3D space; Time for action -- finding the spot; And how do I say that in Java?; Time for action -- position it!; Time for action -- scale it!; Time for action -- rotate it!; Time for action -- rotate it again, Sam; Where am I?; Time for action -- navigating the scene; Populating the scene; Time for action -- node versus geometry; Extending SimpleApplication; Make a big scene; Time for action -- configuring display settings; Keeping an eye on your FPS', 'Time for action -- checking vital statsNavigating the scene with a mouse and a keyboard; Time for action -- move it!; Summary; Chapter 3: Interacting with the User; The digital Dungeon Master; Time for action -- from input to output in slow motion; Time for action -- pushing the right buttons; Time for action -- trigger meets mapping; Time for action -- mapping meets listeners; Time for action -- listeners meet actions; Click me if you can; Time for action -- pick a brick (using crosshairs); Time for action -- pick a brick (crosshairs with ray casting)', 'Time for action -- pick a brick (using the mouse pointer)Time for action -- pick a brick (pointer with ray casting); How to steer spatials; Time for action -- you are the CubeChaser; Time for action -- chase all the cubes!; Time for action -- get these cubes under control; Time for action -- get into the right AppState of mind; Time for action -- call me maybe?; Coordinating global game mechanics; The beauty of AppStates and controls; Summary; Chapter 4: Adding Character to Your Game; Making a Mesh; Time for action -- meshing around with cubes; Time for action -- meshing around with spheres', ""From mesh to geometryBeg, steal, or borrow; The right wrench to pound in the screw; Time for action -- installing the Blender-to-Ogre3D plugin; Time for action -- sculpting the mesh; Time for action -- coloring the mesh; Time for action -- a model for to go, please; Time for action -- loading a model (just testing); Time for action -- loading a model (for real); Managing assets -- best practices; Time for action -- sorting your stuff out; Time for action -- saving and loading .j3o's; Animating a model; Time for action -- rig, skin, and animate; Time for action -- loading an animated model"", 'Time for action -- playing an animated model']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
jumpstartjavascr0000pehl,Jump start JavaScript,P,"['1 online resource', ""Get a Jump Start on JavaScript today! JavaScript is a key technology in modern web development, enabling you to craft interactive, usable and engaging experiences for your users. In just one weekend with this SitePoint book, you'll learn how to: Use JavaScript to solve real world problems: build forms, track user events and craft animations Use JavaScript with HTML5 and CSS3 Build an entire JavaScript-powered application from scratch: a task management application Plus you'll discover how to use modern techniques such as Canvas and Ajax""]","['inlibrary', 'printdisabled', 'internetarchivebooks']"
learning-java-script,Learning Java Script,A,"<div><b>Learning Javascript</b>. <i>A hands on guide to the fundamental of modern Javascript. </i>Tim Wright. 2013.</div><div><br /></div><div>1. progressive enhancement</div><div>2. Javascript in the browser</div><div>3. Javascript terminology</div><div>4. accessing the DOM</div><div>5. storing data in Javascript</div><div>6. variables, functions, and loops</div><div>7. interacting with the user </div><div>8. communicating with the server</div><div>9. code organization</div><div>10. making Javascript easier with libraries</div><div>11. HTML5 Javascript APIs</div><div>12. moving forward with Javascript</div><div><br /></div><div>sha256: beec393635d9831e51e28bc3967f2e938adc3d681ec1e268f3c798a6cf49e012</div>",opensource
logicprogramming0000bram,Logic programming with Prolog ,B,"['1 online resource (xiv, 253 pages) :', ""Logic Programming is the name given to a distinctive style of programming, very different from that of conventional programming languages such as C++ and Java. By far the most widely used Logic Programming language is Prolog. Prolog is a good choice for developing complex applications, especially in the field of Artificial Intelligence. Logic Programming with Prolog does not assume that the reader is an experienced programmer or has a background in Mathematics, Logic or Artificial Intelligence. It starts from scratch and aims to arrive at the point where quite powerful programs can be written in the language. It is intended both as a textbook for an introductory course and as a self-study book. On completion readers will know enough to use Prolog in their own research or practical projects. Each chapter has self-assessment exercises so that readers may check their own progress. A glossary of the technical terms used completes the book. This second edition has been revised to be fully compatible with SWI-Prolog, a popular multi-platform public domain implementation of the language. Additional chapters have been added covering the use of Prolog to analyse English sentences and to illustrate how Prolog can be used to implement applications of an 'Artificial Intelligence' kind"", 'Includes index', 'Print version record']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
m250objectorient0000na,M250 Object-oriented Java Programming Units 1-5 - Getting Started With Objects,n,No Description Available,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
m250objectorient0000na_c8t4,M250 Object-oriented Java Programming Units 9-12 - Collections and File I/O,n,No Description Available,"['inlibrary', 'printdisabled', 'internetarchivebooks']"
oracleadf11gr2de0000kris,Oracle ADF 11gR2 development beginner's guide,K,"['1 online resource (1 volume) :', 'Includes index', 'Online resource; title from title page (Safari, viewed Aug. 6, 2013)']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
programminggrail0000beck,Programming Grails ,B,"['xv, 344 pages : 24 cm', ""Dig deeper into Grails architecture and discover how this application framework works its magic. Written by a core developer on the Grails team, this practical guide takes you behind the curtain to reveal the inner workings of its 2.0 feature set. You'll learn best practices for building and deploying Grails applications, including performance, security, scaling, tuning, debugging, and monitoring. Understand how Grails integrates with Groovy, Spring, Hibernate, and other JVM technologies, and learn how to create and use plugins to augment your application's functionality. Once you know how Grails adds behavior by convention, you can solve problems more easily and develop applications more intuitively"", 'Includes index', '""Best practices for experienced Grails developers""--Cover', 'Introduction to Groovy -- Grails internals -- Persistence -- Spring -- Hibernate -- Integration -- Configuration -- Plugins -- Security -- The cloud -- AOP -- Upgrading applications and plugins']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
slick2dgamedevel0000bevi,Slick2D game development,B,"['1 online resource', 'A simple guide, packed with tutorials that ease you into learning about the Slick game workflow and Slick game library. If you are a game programmer who would like to expand on your skills and become a game developer, this book is ideal for you. No previous knowledge of Slick 2D or any other Java game library is required. This book assumes that you have basic Java syntax and object oriented programming knowledge', 'Print version record']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
smashingmobilewe0000avol,"Smashing mobile web development : going mobile with HTML5, CSS3, and Javascript",A,"['xv, 296 p. : 24 cm', '""By the time you finish this book, you\'ll possess all the knowledge and skills you need to create sophisticated mobile websites incorporating the features your users want, including geolocation, social media, and much more""--Back cover', 'Includes index', 'Pt. I. Introduction to HTML5/JS/CSS -- Introduction to mobile web development -- Overview of mobile technologies -- Pt. II. Application setup and infrastructure -- Development and production setup -- Creating the prototype -- Mobile web structure -- Creating a mobile web database -- Pt. III. Development -- Interacting with web SQL -- Geolocation and AJAX -- Running queries and connecting with social media -- Location storage and seach -- Pt. IV. Performance and production -- Testing and organizing your code -- Preparing for launch']","['printdisabled', 'internetarchivebooks']"
wellgroundedjava0000evan,The well-grounded Java developer : vital techniques of Java 7 and polyglot programming ,E,"['xxx, 462 p. : 24 cm', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
DTIC_ADA586203,DTIC ADA586203: Test and Evaluation of Program Slicing Tools,D,"Software slicing is the analysis of a program based on a slicing criterion to produce executable code that contains only those lines that are related to the slicing criterion. This reduces the state space of the program, thus aiding in testing and debugging. This technical report analyzes the Indus-Kaveri plug-in to assess its capacity for providing correct software slices that can be used to reduce regression tests. The tests reveal that the plug-in produces slices as advertised by the documentation, but nevertheless, it has many limitations that make it impractical for use in a commercial environment. These limitations include the plug-in's incompatibility with programs that require a Java Runtime later than version 1.4, the lack of highlighting of slices within external classes utilized, and the fact that slicing is accomplished through the return value of a method.","['dticarchive', 'additional_collections']"
etsi_ts_102_241_v11.00.00,TS 102 241 - V11.0.0 - Smart Cards; UICC Application Programming Interface (UICC API) for Java Card™ (Release 11),E,No Description Available,"['etsi_standards', 'additional_collections']"
etsi_ts_102_705_v09.03.00,TS 102 705 - V9.3.0 - Smart Cards; UICC Application Programming Interface for Java Card™ for Contactless Applications (Release 9),E,No Description Available,"['etsi_standards', 'additional_collections']"
DTIC_ADA568544,DTIC ADA568544: Interactive Vulnerability Analysis Enhancement Results,D,"Interactive Application Security Testing (IAST) is an innovative new approach to application security vulnerability detection. This investigation focused on making performance improvements to this technology to allow deployments of the technology in production systems, to enable automatic generation of protection rules for the vulnerabilities discovered, and expanding the range of applications supported from JavaEE web based applications to other non-web based Java programs. Technology developed in this effort should be generally applicable to other IAST tools.","['dticarchive', 'additional_collections']"
DTIC_ADA573937,DTIC ADA573937: Validating a Social Model Wargame: An Analysis of the Green Country Model,D,"The Green Country Model (GCM), developed at the Johns Hopkins University-Applied Physics Lab (JHU-APL), was contrived to determine if the social aspects of a society could be incorporated into a war game to simulate realistic outcomes of an event or actions of a player whose opponents range from friendly to hostile. The game is not meant to offer predictions for a course of action or the impact of a course of action on the future, but to provide players, particularly those players who are leaders, a forum in which to discuss strategy, tactics, and possible courses of action, thus improving their knowledge base and ability to think outside the box. The GCM is a vast model originally built on 19 intricately linked and embedded Microsoft Excel spreadsheets. With the current model, it takes about a day for the players and moderators to get through all the phases of the game. The game was built as a two-player (or two-group) board game, with a simple Graphical User Interface (GUI) that projects maps and spreadsheet displays onto a screen so that players can get a bigger picture of the game set up. Utilizing the concepts, input parameters, and underlying algorithms established by JHU-APL, we built a simulation model to validate the GCM. This model can run one action in thousandths of a second. In this thesis, the random operations of the model (of which there are dozens) are all specified by random numbers generated from user-selected distributions. In this way, we allow the model to be vastly more general, and useful for much more than simple two-group play. This should allow players, developers, analysts, and policy makers the ability to assess and quantify the possible effects of choices (and the probability distributions of outcomes associated with those choices) in a way that has not been possible before this analysis.","['dticarchive', 'additional_collections']"
etsi_ts_131_133_v11.00.00,TS 131 133 - V11.0.0 - Digital cellular telecommunications system (Phase 2+); Universal Mobile Telecommunications System (UMTS); LTE; IP Multimedia Services Identity Module (ISIM)  Application Programming Interface (API); ISIM API for Java Card™  (3GPP TS 31.133 version 11.0.0 Release 11),E,No Description Available,"['etsi_standards', 'additional_collections']"
etsi_ts_131_213_v11.00.00,TS 131 213 - V11.0.0 - Universal Mobile Telecommunications System (UMTS); LTE; Test specification for (U)SIM; Application Programming Interface (API) for Java Card™  (3GPP TS 31.213 version 11.0.0 Release 11),E,No Description Available,"['etsi_standards', 'additional_collections']"
etsi_ts_131_221_v11.00.00,TS 131 221 - V11.0.0 - Universal Mobile Telecommunications System (UMTS); LTE; Contact Manager Application Programming Interface (API); Contact Manager API for Java Card  (3GPP TS 31.221 version 11.0.0 Release 11),E,No Description Available,"['etsi_standards', 'additional_collections']"
arxiv-1211.0836,The distributed Slow Control System of the XENON100 Experiment,E. Aprile,"The XENON100 experiment, in operation at the Laboratori Nazionali del Gran Sasso (LNGS) in Italy, was designed to search for evidence of dark matter interactions inside a volume of liquid xenon using a dual-phase time projection chamber. This paper describes the Slow Control System (SCS) of the experiment with emphasis on the distributed architecture as well as on its modular and expandable nature. The system software was designed according to the rules of Object-Oriented Programming and coded in Java, thus promoting code reusability and maximum flexibility during commissioning of the experiment. The SCS has been continuously monitoring the XENON100 detector since mid 2008, remotely recording hundreds of parameters on a few dozen instruments in real time, and setting emergency alarms for the most important variables.","['arxiv', 'additional_collections', 'journals']"
NASA_NTRS_Archive_20130001789,NASA Technical Reports Server (NTRS) 20130001789: The Way Point Planning Tool: Real Time Flight Planning for Airborne Science,N,"Airborne real time observation are a major component of NASA's Earth Science research and satellite ground validation studies. For mission scientist, planning a research aircraft mission within the context of meeting the science objective is a complex task because it requires real time situational awareness of the weather conditions that affect the aircraft track. Multiple aircraft are often involved in the NASA field campaigns the coordination of the aircraft with satellite overpasses, other airplanes and the constantly evolving dynamic weather conditions often determine the success of the campaign. A flight planning tool is needed to provide situational awareness information to the mission scientist and help them plan and modify the flight tracks successfully. Scientists at the University of Alabama Huntsville and the NASA Marshal Space Flight Center developed the Waypoint Planning Tool (WPT), an interactive software tool that enables scientist to develop their own flight plans (also known as waypoints), with point and click mouse capabilities on a digital map filled with time raster and vector data. The development of this Waypoint Planning Tool demonstrates the significance of mission support in responding to the challenges presented during NASA field campaigns. Analyses during and after each campaign helped identify both issues and new requirements, initiating the next wave of development. Currently the Waypoint Planning Tool has gone through three rounds of development and analysis processes. The development of this waypoint tool is directly affected by the technology advances on GIS/Mapping technologies. From the standalone Google Earth application and simple KML functionalities to the Google Earth Plugin and Java Web Start/Applet on web platform, as well as to the rising open source GIS tools with new JavaScript frameworks, the Waypoint planning Tool has entered its third phase of technology advancement. The newly innovated, cross-platform, modular designed JavaScript-controled Waypoint tool is planned to be integrated with the NASA Airborne Science Mission Tool Suite. Adapting new technologies for the Waypoint Planning Tool ensures its success in helping scientist reach their mission objectives. This presentation will discuss the development process of the Waypoint Planning Tool in responding to field campaign challenges, identifying new information technologies, and describing the capabilities and features of the Waypoint Planning Tool with the real time aspect, interactive nature, and the resultant benefits to the airborne science community.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1211.0645,Project G.N.O.S.I.S.: Geographical Network Of Synoptic Information  System,P,"Everybody knows how much synoptic maps are useful today. An excellent example above all is Google Earth: its simplicity and friendly interface allows every user to have the Earth maps ready in just one simple layout; nevertheless a crucial dimension is missing in Google Earth: the time. This doesn't mean we simply aim to add history to Google Earth (though it could be already a nice goal): the main idea behind GNOSIS project is to produce applications to ""dress up"" the Globe with a set of skin-maps representing the most various different kind of histories like the evolution of geology, genetics, agriculture, ethnology, linguistics, musicology, metallurgy and so forth, in time. It may be interesting in the near future to have such a possibility to watch on the map the positions and movements of the armies during the battles of Waterloo or Thermopylae, the spreading of the cultivation of corn in time, the rise and fall of Roman Empire or the diffusion of Smallpox together with the spread of a religion, a specific dialect, the early pottery techniques or the natural resources available to pre-Columbian civilizations on a Google-Earth-map-like, that is to say to have at one's hand the ultimate didactic-enciclopedic tool. To do so we foresee the use of a general-purpose intermediate/high level programming language, possibly object-oriented such C++ or Java.","['arxiv', 'additional_collections', 'journals']"
DTIC_ADA604487,DTIC ADA604487: AIS Indexer User Guide,D,"A Coverage Index Generator Java application was developed in the summer of 2011, based on the work of Lapinski and Isenor (Estimating Reception Coverage Characteristics of AIS, Lapinski and Isenor, Journal of Navigation, October 2011). This application gathers Automatic Identification System (AIS) messages and produces a coverage map, graphically representing the quality and fidelity of signals received by coastal sensors. The application gathers its inputs either from static data files or a streaming input source. This report describes the AIS-Indexer functionalities provided to the user. It also describes how to install and configure the application. This application was initially developed in 2011. OODA Technologies improved the application in 2012 under call-ups 5 [1] and 6 [2] to the standing offer W7707-115137.","['dticarchive', 'additional_collections']"
DTIC_ADA604488,DTIC ADA604488: Automatic Publication of a MIS Product to GeoNetwork: Case of the AIS Indexer,D,"An Automatic Identification System (AIS) reception indexer Java application was developed in the summer of 2011, based on the work of Lapinski and Isenor (Estimating Reception Coverage Characteristics of AIS, Lapinski and Isenor, Journal of Navigation, October 2011 [1]). This application gathers AIS messages and produces a coverage map, graphically representing the quality and fidelity of signals received by coastal sensors. The application gathers its inputs either from static data files or a streaming input source. OODA Technologies improved the application in 2012 under call-ups 5 [2] and 6 [3, 4] to the standing offer W7707-115137. Several bugs were fixed, performance was improved, an alert system algorithm was implemented, several features were added and usability was improved. During the same period, an investigation was conducted by OODA Technologies, under call-up number 4 to the standing offer W7707-115137, about the feasibility of using the open source GeoNetwork application for information product management and access within TRINITY. As a result, GeoNetwork is being installed by MARLANT N6 in the Integrated Testing Environment (ITE) for TRINITY. This work involves the development of an application, the GeoNetwork Publisher (GNP), that automatically publishes to GeoNetwork AIS index reception maps produced by the AIS Indexer. Currently, the AIS Indexer interfaces with the GNP to publish maps. The GNP can however be re-used for the publication of other products. The use of GNP reduces the overhead of producing metadata for every publication and thus ultimately encourages Geonetwork usage. The GNP is part of a global effort to distribute and manage Maritime Information Support (MIS) products.","['dticarchive', 'additional_collections']"
pubmed-PMC3530915,"XiP: a computational environment to create, extend and share workflows.","Nagasaki, Masao","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29"" rel=""nofollow"">Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29%20AND%20volume%3A%2829%29"" rel=""nofollow"">volume 29</a>.<h2>Abstract</h2>XiP (eXtensible integrative Pipeline) is a flexible, editable and modular environment with a user-friendly interface that does not require previous advanced programming skills to run, construct and edit workflows. XiP allows the construction of workflows by linking components written in both R and Java, the analysis of high-throughput data in grid engine systems and also the development of customized pipelines that can be encapsulated in a package and distributed. XiP already comes with several ready-to-use pipeline flows for the most common genomic and transcriptomic analysis and ∼300 computational components.Availability: XiP is open source, freely available under the Lesser General Public License (LGPL) and can be downloaded from http://xip.hgc.jp.Contact:nagasaki@megabank.tohoku.ac.jp","['pubmed', 'journals']"
pubmed-PMC3464866,The ontology-based answers (OBA) service: a connector for embedded usage of ontologies in applications.,"Donitz, Jurgen","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Frontiers%20in%20Genetics%29"" rel=""nofollow"">Frontiers in Genetics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Frontiers%20in%20Genetics%29%20AND%20volume%3A%283%29"" rel=""nofollow"">volume 3</a>.<h2>Abstract</h2>The semantic web depends on the use of ontologies to let electronic systems interpret contextual information. Optimally, the handling and access of ontologies should be completely transparent to the user. As a means to this end, we have developed a service that attempts to bridge the gap between experts in a certain knowledge domain, ontologists, and application developers. The ontology-based answers (OBA) service introduced here can be embedded into custom applications to grant access to the classes of ontologies and their relations as most important structural features as well as to information encoded in the relations between ontology classes. Thus computational biologists can benefit from ontologies without detailed knowledge about the respective ontology. The content of ontologies is mapped to a graph of connected objects which is compatible to the object-oriented programming style in Java. Semantic functions implement knowledge about the complex semantics of an ontology beyond the class hierarchy and “partOf” relations. By using these OBA functions an application can, for example, provide a semantic search function, or (in the examples outlined) map an anatomical structure to the organs it belongs to. The semantic functions relieve the application developer from the necessity of acquiring in-depth knowledge about the semantics and curation guidelines of the used ontologies by implementing the required knowledge. The architecture of the OBA service encapsulates the logic to process ontologies in order to achieve a separation from the application logic. A public server with the current plugins is available and can be used with the provided connector in a custom application in scenarios analogous to the presented use cases. The server and the client are freely available if a project requires the use of custom plugins or non-public ontologies. The OBA service and further documentation is available at http://www.bioinf.med.uni-goettingen.de/projects/oba","['pubmed', 'journals']"
NASA_NTRS_Archive_20120016768,NASA Technical Reports Server (NTRS) 20120016768: Three Dimensional Computer Graphics Federates for the 2012 Smackdown Simulation,N,"The Simulation Interoperability Standards Organization (SISO) Smackdown is a two-year old annual event held at the 2012 Spring Simulation Interoperability Workshop (SIW). A primary objective of the Smackdown event is to provide college students with hands-on experience in developing distributed simulations using High Level Architecture (HLA). Participating for the second time, the University of Alabama in Huntsville (UAHuntsville) deployed four federates, two federates simulated a communications server and a lunar communications satellite with a radio. The other two federates generated 3D computer graphics displays for the communication satellite constellation and for the surface based lunar resupply mission. Using the Light-Weight Java Graphics Library, the satellite display federate presented a lunar-texture mapped sphere of the moon and four Telemetry Data Relay Satellites (TDRS), which received object attributes from the lunar communications satellite federate to drive their motion. The surface mission display federate was an enhanced version of the federate developed by ForwardSim, Inc. for the 2011 Smackdown simulation. Enhancements included a dead-reckoning algorithm and a visual indication of which communication satellite was in line of sight of Hadley Rille. This paper concentrates on these two federates by describing the functions, algorithms, HLA object attributes received from other federates, development experiences and recommendations for future, participating Smackdown teams.","['NASA_NTRS_Archive', 'additional_collections']"
DTIC_ADA567116,DTIC ADA567116: Maintaining Multimedia Data in a Geospatial Database,D,"This thesis resulted from a project in which imagery was captured and automatically stored. Historical data were integrated with it and made available through the network to permit a TIVO-style replay of events anywhere within a city limit, with higher spatial and temporal resolution on hotspots. The purpose was to allow law enforcement personnel to go back in time to a location and recover imagery/video of interest in a timely manner. While working on the project, the question of database performance arose. Choosing an open-source relational database management system (RDBMS) -- MySQL or PostgreSQL -- to handle a spatial database of this magnitude was a decision that had to be made. There was no doubt that both were admirable database systems, but how would they perform against each other? Would multimedia data add any additional complexity to their performance? The goal of this thesis was to compare and analyze the use of two database options, PostgreSQL and MySQL, as spatial databases in a practical situation. The thesis did not do what it was intended to do, which was to prove that one database would outperform the other. In the end, both databases excelled at certain tasks and fell short on others.","['dticarchive', 'additional_collections']"
pubmed-PMC3467744,BioJava: an open-source framework for bioinformatics in 2012.,"Prlic, Andreas","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29"" rel=""nofollow"">Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29%20AND%20volume%3A%2828%29"" rel=""nofollow"">volume 28</a>.<h2>Abstract</h2>Motivation: BioJava is an open-source project for processing of biological data in the Java programming language. We have recently released a new version (3.0.5), which is a major update to the code base that greatly extends its functionality.Results: BioJava now consists of several independent modules that provide state-of-the-art tools for protein structure comparison, pairwise and multiple sequence alignments, working with DNA and protein sequences, analysis of amino acid properties, detection of protein modifications and prediction of disordered regions in proteins as well as parsers for common file formats using a biologically meaningful data model.Availability: BioJava is an open-source project distributed under the Lesser GPL (LGPL). BioJava can be downloaded from the BioJava website (http://www.biojava.org). BioJava requires Java 1.6 or higher. All inquiries should be directed to the BioJava mailing lists. Details are available at http://biojava.org/wiki/BioJava:MailingListsContact: andreas.prlic@gmail.com","['pubmed', 'journals']"
DTIC_AD1050235,DTIC AD1050235: Analysis of German Patent Literature,D,"We show how several components of the JET natural language analysis tool, originally developed at New York University for the analysis of English text, were adapted to German. These components, such as the part of speech tagger and the noun chunker, are explained in terms that should be understandable to a layman. On the other hand, issues that arise specifically with regards to the German language are outlined in a way that could be of interest to people more experienced in natural language processing.","['dticarchive', 'additional_collections']"
NASA_NTRS_Archive_20120015279,NASA Technical Reports Server (NTRS) 20120015279: Development of Waypoint Planning Tool in Response to NASA Field Campaign Challenges,N,"Airborne real time observations are a major component of NASA 's Earth Science research and satellite ground validation studies. Multiple aircraft are involved in most NASA field campaigns. The coordination of the aircraft with satellite overpasses, other airplanes and the constantly evolving, dynamic weather conditions often determines the success of the campaign. Planning a research aircraft mission within the context of meeting the science objectives is a complex task because it requires real time situational awareness of the weather conditions that affect the aircraft track. A flight planning tools is needed to provide situational awareness information to the mission scientists, and help them plan and modify the flight tracks. Scientists at the University of Alabama ]Huntsville and the NASA Marshall Space Flight Center developed the Waypoint Planning Tool, an interactive software tool that enables scientists to develop their own flight plans (also known as waypoints) with point -and-click mouse capabilities on a digital map filled with real time raster and vector data. The development of this Waypoint Planning Tool demonstrates the significance of mission support in responding to the challenges presented during NASA field campaigns. Analysis during and after each campaign helped identify both issues and new requirements, and initiated the next wave of development. Currently the Waypoint Planning Tool has gone through three rounds of development and analysis processes. The development of this waypoint tool is directly affected by the technology advances on GIS/Mapping technologies. From the standalone Google Earth application and simple KML functionalities, to Google Earth Plugin on web platform, and to the rising open source GIS tools with New Java Script frameworks, the Waypoint Planning Tool has entered its third phase of technology advancement. Adapting new technologies for the Waypoint Planning Tool ensures its success in helping scientist reach their mission objectives.","['NASA_NTRS_Archive', 'additional_collections']"
pubmed-PMC3464736,A user-friendly software to easily count Anopheles egg batches.,"Mollahosseini, Ali","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Parasites%20&%20Vectors%29"" rel=""nofollow"">Parasites & Vectors</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Parasites%20&%20Vectors%29%20AND%20volume%3A%285%29"" rel=""nofollow"">volume 5</a>.<h2>Abstract</h2>Background: Studies on malaria vector ecology and development/evaluation of vector control strategies often require measures of mosquito life history traits. Assessing the fecundity of malaria vectors can be carried out by counting eggs laid by Anopheles females. However, manually counting the eggs is time consuming, tedious, and error prone. Methods: In this paper we present a newly developed software for high precision automatic egg counting. The software written in the Java programming language proposes a user-friendly interface and a complete online manual. It allows the inspection of results by the operator and includes proper tools for manual corrections. The user can in fact correct any details on the acquired results by a mouse click. Time saving is significant and errors due to loss of concentration are avoided. Results: The software was tested over 16 randomly chosen images from 2 different experiments. The results show that the proposed automatic method produces results that are close to the ground truth. Conclusions: The proposed approaches demonstrated a very high level of robustness. The adoption of the proposed software package will save many hours of labor to the bench scientist. The software needs no particular configuration and is freely available for download on: http://w3.ualg.pt/∼hshah/eggcounter/.","['pubmed', 'journals']"
arxiv-1204.4322,Secure the Clones,Thomas Jensen,"Exchanging mutable data objects with untrusted code is a delicate matter because of the risk of creating a data space that is accessible by an attacker. Consequently, secure programming guidelines for Java stress the importance of using defensive copying before accepting or handing out references to an internal mutable object. However, implementation of a copy method (like clone()) is entirely left to the programmer. It may not provide a sufficiently deep copy of an object and is subject to overriding by a malicious sub-class. Currently no language-based mechanism supports secure object cloning. This paper proposes a type-based annotation system for defining modular copy policies for class-based object-oriented programs. A copy policy specifies the maximally allowed sharing between an object and its clone. We present a static enforcement mechanism that will guarantee that all classes fulfil their copy policy, even in the presence of overriding of copy methods, and establish the semantic correctness of the overall approach in Coq. The mechanism has been implemented and experimentally evaluated on clone methods from several Java libraries.","['arxiv', 'additional_collections', 'journals']"
NASA_NTRS_Archive_20120010481,NASA Technical Reports Server (NTRS) 20120010481: Creating Simple Admin Tools Using Info*Engine and Java,N,PTC has provided a simple way to dynamically interact with Windchill using Info*Engine. This presentation will describe how to create a simple Info*Engine Tasks capable of saving Windchill 10.0 administration of tedious work.,"['NASA_NTRS_Archive', 'additional_collections']"
etsi_ts_131_130_v10.03.01,TS 131 130 - V10.3.1 - Digital cellular telecommunications system (Phase 2+); Universal Mobile Telecommunications System (UMTS); LTE; (U)SIM Application Programming Interface (API); (U)SIM API for Java™ Card  (3GPP TS 31.130 version 10.3.1 Release 10),E,No Description Available,"['etsi_standards', 'additional_collections']"
pubmed-PMC3431220,Workflows for microarray data processing in the Kepler environment.,"Stropp, Thomas","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28BMC%20Bioinformatics%29"" rel=""nofollow"">BMC Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28BMC%20Bioinformatics%29%20AND%20volume%3A%2813%29"" rel=""nofollow"">volume 13</a>.<h2>Abstract</h2>Background: Microarray data analysis has been the subject of extensive and ongoing pipeline development due to its complexity, the availability of several options at each analysis step, and the development of new analysis demands, including integration with new data sources. Bioinformatics pipelines are usually custom built for different applications, making them typically difficult to modify, extend and repurpose. Scientific workflow systems are intended to address these issues by providing general-purpose frameworks in which to develop and execute such pipelines. The Kepler workflow environment is a well-established system under continual development that is employed in several areas of scientific research. Kepler provides a flexible graphical interface, featuring clear display of parameter values, for design and modification of workflows. It has capabilities for developing novel computational components in the R, Python, and Java programming languages, all of which are widely used for bioinformatics algorithm development, along with capabilities for invoking external applications and using web services. Results: We developed a series of fully functional bioinformatics pipelines addressing common tasks in microarray processing in the Kepler workflow environment. These pipelines consist of a set of tools for GFF file processing of NimbleGen chromatin immunoprecipitation on microarray (ChIP-chip) datasets and more comprehensive workflows for Affymetrix gene expression microarray bioinformatics and basic primer design for PCR experiments, which are often used to validate microarray results. Although functional in themselves, these workflows can be easily customized, extended, or repurposed to match the needs of specific projects and are designed to be a toolkit and starting point for specific applications. These workflows illustrate a workflow programming paradigm focusing on local resources (programs and data) and therefore are close to traditional shell scripting or R/BioConductor scripting approaches to pipeline design. Finally, we suggest that microarray data processing task workflows may provide a basis for future example-based comparison of different workflow systems. Conclusions: We provide a set of tools and complete workflows for microarray data analysis in the Kepler environment, which has the advantages of offering graphical, clear display of conceptual steps and parameters and the ability to easily integrate other resources such as remote data and web services.","['pubmed', 'journals']"
arxiv-1205.2748,Juppix: a Linux Live-CD for Undergraduate Students,Juliusz Chroboczek,"Juppix is a Linux Live-CD with a comfortable programming environment for the Java, C and O'Caml programming languages that has been distributed to hundreds of undergaduate students at the University of Paris 7 over the last few years. We describe the lessons we learnt while compiling and distributing Juppix, and outline our future plans.","['arxiv', 'additional_collections', 'journals']"
arxiv-1203.2296,Discovering Algorithms with Matrix Code,M,"In first-year programming courses it is often difficult to show students how an algorithm can be discovered. In this paper we present a program format that supports the development from specification to code in small and obvious steps; that is, a discovery process. The format, called Matrix Code, can be interpreted as a proof according to the Floyd-Hoare program verification method. The process consists of expressing the specification of a function body as an initial code matrix and then growing the matrix by adding rows and columns until the completed matrix is translated in a routine fashion to compilable code. As worked example we develop a Java program that generates the table of the first N prime numbers.","['arxiv', 'additional_collections', 'journals']"
pubmed-PMC3381967,DAVID-WS: a stateful web service to facilitate gene/protein list analysis.,"Jiao, Xiaoli","This article is from <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29"" rel=""nofollow"">Bioinformatics</a>, <a href=""//archive.org/search.php?query=journaltitle%3A%28Bioinformatics%29%20AND%20volume%3A%2828%29"" rel=""nofollow"">volume 28</a>.<h2>Abstract</h2>Summary: The database for annotation, visualization and integrated discovery (DAVID), which can be freely accessed at http://david.abcc.ncifcrf.gov/, is a web-based online bioinformatics resource that aims to provide tools for the functional interpretation of large lists of genes/proteins. It has been used by researchers from more than 5000 institutes worldwide, with a daily submission rate of ∼1200 gene lists from ∼400 unique researchers, and has been cited by more than 6000 scientific publications. However, the current web interface does not support programmatic access to DAVID, and the uniform resource locator (URL)-based application programming interface (API) has a limit on URL size and is stateless in nature as it uses URL request and response messages to communicate with the server, without keeping any state-related details. DAVID-WS (web service) has been developed to automate user tasks by providing stateful web services to access DAVID programmatically without the need for human interactions.Availability: The web service and sample clients (written in Java, Perl, Python and Matlab) are made freely available under the DAVID License at http://david.abcc.ncifcrf.gov/content.jsp?file=WS.html.Contact:xiaoli.jiao@nih.go v; rlempicki@nih.gov","['pubmed', 'journals']"
NASA_NTRS_Archive_20120011957,NASA Technical Reports Server (NTRS) 20120011957: Statechart Analysis with Symbolic PathFinder,N,"We report here on our on-going work that addresses the automated analysis and test case generation for software systems modeled using multiple Statechart formalisms. The work is motivated by large programs such as NASA Exploration, that involve multiple systems that interact via safety-critical protocols and are designed with different Statechart variants. To verify these safety-critical systems, we have developed Polyglot, a framework for modeling and analysis of model-based software written using different Statechart formalisms. Polyglot uses a common intermediate representation with customizable Statechart semantics and leverages the analysis and test generation capabilities of the Symbolic PathFinder tool. Polyglot is used as follows: First, the structure of the Statechart model (expressed in Matlab Stateflow or Rational Rhapsody) is translated into a common intermediate representation (IR). The IR is then translated into Java code that represents the structure of the model. The semantics are provided as ""pluggable"" modules.","['NASA_NTRS_Archive', 'additional_collections']"
etsi_ts_131_130_v09.03.00,TS 131 130 - V9.3.0 - Digital cellular telecommunications system (Phase 2+); Universal Mobile Telecommunications System (UMTS); LTE; (U)SIM Application Programming Interface (API); (U)SIM API for Java™ Card  (3GPP TS 31.130 version 9.3.0 Release 9),E,No Description Available,"['etsi_standards', 'additional_collections']"
etsi_ts_131_130_v09.04.00,TS 131 130 - V9.4.0 - Digital cellular telecommunications system (Phase 2+); Universal Mobile Telecommunications System (UMTS); LTE; (U)SIM Application Programming Interface (API); (U)SIM API for Java™ Card  (3GPP TS 31.130 version 9.4.0 Release 9),E,No Description Available,"['etsi_standards', 'additional_collections']"
etsi_ts_131_130_v10.02.00,TS 131 130 - V10.2.0 - Digital cellular telecommunications system (Phase 2+); Universal Mobile Telecommunications System (UMTS); LTE; (U)SIM Application Programming Interface (API); (U)SIM API for Java™ Card  (3GPP TS 31.130 version 10.2.0 Release 10),E,No Description Available,"['etsi_standards', 'additional_collections']"
ErrataM255OU201204,Errata and clarifications M255 Object-oriented programming with Java by The M255 Course Team [201204] {005.133--oclc},T,<div>pdf</div><div><br /></div><div>Errata and clarifications M255 Object-oriented programming with Java by The M255 Course Team [201204] {005.133--oclc}</div><div><br /></div>,opensource
etsi_ts_102_241_v09.02.00,TS 102 241 - V9.2.0 - Smart Cards; UICC Application Programming Interface (UICC API) for Java Card™ (Release 9),E,No Description Available,"['etsi_standards', 'additional_collections']"
NASA_NTRS_Archive_20120003332,NASA Technical Reports Server (NTRS) 20120003332: An Integrated Tool for System Analysis of Sample Return Vehicles,N,"The next important step in space exploration is the return of sample materials from extraterrestrial locations to Earth for analysis. Most mission concepts that return sample material to Earth share one common element: an Earth entry vehicle. The analysis and design of entry vehicles is multidisciplinary in nature, requiring the application of mass sizing, flight mechanics, aerodynamics, aerothermodynamics, thermal analysis, structural analysis, and impact analysis tools. Integration of a multidisciplinary problem is a challenging task; the execution process and data transfer among disciplines should be automated and consistent. This paper describes an integrated analysis tool for the design and sizing of an Earth entry vehicle. The current tool includes the following disciplines: mass sizing, flight mechanics, aerodynamics, aerothermodynamics, and impact analysis tools. Python and Java languages are used for integration. Results are presented and compared with the results from previous studies.","['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20120007636,NASA Technical Reports Server (NTRS) 20120007636: Secure Peer-to-Peer Networks for Scientific Information Sharing,N,"The most common means of remote scientific collaboration today includes the trio of e-mail for electronic communication, FTP for file sharing, and personalized Web sites for dissemination of papers and research results. With the growth of broadband Internet, there has been a desire to share large files (movies, files, scientific data files) over the Internet. Email has limits on the size of files that can be attached and transmitted. FTP is often used to share large files, but this requires the user to set up an FTP site for which it is hard to set group privileges, it is not straightforward for everyone, and the content is not searchable. Peer-to-peer technology (P2P), which has been overwhelmingly successful in popular content distribution, is the basis for development of a scientific collaboratory called Scientific Peer Network (SciPerNet). This technology combines social networking with P2P file sharing. SciPerNet will be a standalone application, written in Java and Swing, thus insuring portability to a number of different platforms. Some of the features include user authentication, search capability, seamless integration with a data center, the ability to create groups and social networks, and on-line chat. In contrast to P2P networks such as Gnutella, Bit Torrent, and others, SciPerNet incorporates three design elements that are critical to application of P2P for scientific purposes: User authentication, Data integrity validation, Reliable searching SciPerNet also provides a complementary solution to virtual observatories by enabling distributed collaboration and sharing of downloaded and/or processed data among scientists. This will, in turn, increase scientific returns from NASA missions. As such, SciPerNet can serve a two-fold purpose for NASA: a cost-savings software as well as a productivity tool for scientists working with data from NASA missions.","['NASA_NTRS_Archive', 'additional_collections']"
arxiv-1202.6122,Using Built-In Domain-Specific Modeling Support to Guide Model-Based  Test Generation,Teemu Kanstrén,"We present a model-based testing approach to support automated test generation with domain-specific concepts. This includes a language expert who is an expert at building test models and domain experts who are experts in the domain of the system under test. First, we provide a framework to support the language expert in building test models using a full (Java) programming language with the help of simple but powerful modeling elements of the framework. Second, based on the model built with this framework, the toolset automatically forms a domain-specific modeling language that can be used to further constrain and guide test generation from these models by a domain expert. This makes it possible to generate a large set of test cases covering the full model, chosen (constrained) parts of the model, or manually define specific test cases on top of the model while using concepts familiar to the domain experts.","['arxiv', 'additional_collections', 'journals']"
ERIC_EJ1158953,ERIC EJ1158953: Predictors of Errors of Novice Java Programmers,E,"This descriptive study determined which of the sources of errors would predict the errors committed by novice Java programmers. Descriptive statistics revealed that the respondents perceived that they committed the identified eighteen errors infrequently. Thought error was perceived to be the main source of error during the laboratory programming exercises. Factor analysis showed that there were five categories for the types of errors committed. Four of them were symbol- or keyword-related errors (Invalid symbols or keywords, Mismatched symbols, Missing symbols, and Excessive symbols) and the fifth one was Naming-related error (Inappropriate naming error). Regression analysis showed that Sensorimotor and Habit errors, together with Knowledge error, were found to predict Mismatched symbols and Missing symbols errors, respectively. Knowledge error was found to be the consistent source of the five types of errors. Thus, the null hypothesis stating that sources of errors do not predict errors committed by novice Java programmers is partially rejected. The implications of the findings were also discussed.","['ericarchive', 'additional_collections']"
NASA_NTRS_Archive_20120004001,NASA Technical Reports Server (NTRS) 20120004001: Application Programming in AWIPS II,N,"Since its inception almost 8 years ago, NASA's Short-term Prediction Research and Transition (SPoRT) Center has integrated NASA data into the National Weather Service's decision support system (DSS) the Advanced Weather Interactive Processing System (AWIPS). SPoRT has, in some instances, had to shape and transform data sets into various formats and manipulate configurations to visualize them in AWIPS. With the advent of the next generation of DSS, AWIPS II, developers will be able to develop their own plugins to handle any type of data. Raytheon is developing AWIPS II to be a more extensible package written mainly in Java, and built around a Service Oriented Architecture. A plugin architecture will allow users to install their own code modules, and (if all the rules have been properly followed) they will work hand-in-hand with AWIPS II as if it were originally built in. Users can bring in new datasets with existing plugins, tweak plugins to handle a nuance or desired new functionality, or create an entirely new visualization layout for a new dataset. SPoRT is developing plugins to ensure its existing NASA data will be ready for AWIPS II when it is delivered, and to prepare for the future of new instruments on upcoming satellites.","['NASA_NTRS_Archive', 'additional_collections']"
DTIC_ADA568186,DTIC ADA568186: Digital Applications Development Training Achieves Big Successes,D,"One of the greatest successes from the Connecting Soldiers to Digital Applications initiative since 2010 has been the course designed to teach military members and government civilians how to write native applications for smartphones. The program at the Signal Center of Excellence started with two assumptions. The first assumption was based the fact that Apple's App Store on iTunes had been active for just over one year and there were over 100,000 iPhone apps. In addition, the Android marketplace's first few months also saw the rapid development and deployment of 20,000 apps. The staggering rise of these two distribution channels suggested that developing apps was not too difficult. Another assumption was that the military has members in its ranks that have the ability to develop apps. This assumption was tested and proven true during the Apps for the Army Challenge, in which 53 apps were developed over a 75-day period. As it turns out, developing applications is not as easy as first presumed -- or at least it was not a task that could be picked up by that vast majority of our workforce with the same ease as, say, HTML. The complexity of quality native applications comes with a cost, which varies greatly throughout the industry and can range anywhere from $5K-$250K depending on the content, graphics, and cost of maintenance. From that came the question of whether or not the Army could create in-house capabilities for mobile app development. Does the Army have Soldiers and civilians within its workforce who, with some development training, could become capable of developing and deploying mobile apps within training or operational contexts? The SIGCoE was then tasked with examining the possibilities for providing instruction for developing mobile apps.","['dticarchive', 'additional_collections']"
ERIC_EJ997179,ERIC EJ997179: Gender Difference of Confidence in Using Technology for Learning,E,"Past studies have found male students to have more confidence in using technology for learning than do female students. Males tend to have more positive attitudes about the use of technology for learning than do females. According to the Women's Foundation (2006), few studies examined gender relevant research in Hong Kong. It also appears that no studies have examined these gender differences in the perception of confidence in using technology for learning specifically in Hong Kong. The aim of this study was to examine gender difference regarding confidence toward using technology (e.g., AutoCAD, SPSS, Compiere, Arena, and programming language, such as C, Java, Visual Basic, etc.) for learning in higher educational institutions in Hong Kong. The study employed a survey methodology collecting 211 questionnaires from one specific university in Hong Kong. The findings confirmed that male students have more confidence in using technology for learning than do female students because gender imbalances in computing are socially constructed and not related to a learner's innate ability. It is recommended that the universities should set up training courses for female students so these students can build confidence in using technology for learning. (Contains 3 tables.)","['ericarchive', 'additional_collections']"
NASA_NTRS_Archive_20120004093,NASA Technical Reports Server (NTRS) 20120004093: Wireless Self-Acquistion of 12-Lead ECG via Android Smart Phone,N,"Researchers at NASA s Johnson Space Center and at Orbital Research, Inc. (a NASA SBIR grant recipient) have recently developed a dry-electrode harness that allows for self-acquisition of resting 12-lead ECGs by minimally trained laypersons. When used in conjunction with commercial wireless (e.g., Bluetooth(TM) or 802.11-enabled) 12-lead ECG devices and custom smart phone-based software, the collected 12-lead ECG data can also immediately be forwarded from any geographic location within cellular range to the user s physician(s) of choice. The system can also be used to immediately forward to central receiving stations 12-lead ECG data collected during space flight or during activities in any remote terrestrial location supported by an internet or cellular phone infrastructure. The main novel aspects of the system are first, the dry-electrode 12-lead ECG harness itself, and second, an accompanying Android(TM) smart phone-based wireless 12-lead ECG capability. The ECG harness nominally employs dry electrodes manufactured by Orbital Research, Inc, recently cleared through the Food and Drug Administration (FDA). However, other dry electrodes that are not yet FDA cleared, for example those recently developed by Nanosonic, Inc as part of another NASA SBIR grant, can also be used. The various advantageous features of the harness include: 1) laypersons can be quickly instructed on its correct use, remotely if necessary; 2) all tangled ""leadwire spaghetti"" is eliminated, as is the common clinical problem of ""leadwire reversal""; 3) all adhesives and disposables are also eliminated, the harness being fully reusable; if multiple individuals intend to use use the same harness, then standard antimicrobial wipes can be employed to sterilize the dry electrodes (and harness surface if needed) between users; 5) padded cushions at the lateral sides of the torso function to press the left arm (LA) and right arm (RA) dry electrodes mounted on the cushions against sideward or downward-rested arms of the subject; 6) sufficient distal placement of the arm electrodes achieves good electrode abutment to the arms without the need for adhesives, straps, bands, bracelets, or gloves; 7) padding over the sternum avoids ""tenting"" in the V1 through V3 (and, when present, the V3R) electrode positions; 8) easy-to-don, one-piece design with an adjustable, front-side single point of connection and an adjustable shoulder strap; and 9) Lund or ""modified Lund"" placement of the dry electrodes, the results of which more effectively reproduce results from ""standard"" 12-lead ECG placements than do results from Mason-Likar placements. The main limitation of the harness is that ""one size does not fit all"", meaning that an appropriately sized harness (small, medium, large, etc) must be chosen on the basis of an individual's size. To facilitate the use of the harness with inexpensive, commodity-grade cell phones and tablet devices, 12-lead ECG software is also being developed to accompany the harness for wireless use with Android. For this part of the project, NASA has teamed with TopCoder, Inc and the Harvard-affiliated NASA Tournament Lab in sponsoring java-based software programming contests through TopCoder. While ECG signals from the harness can already be wirelessly received and thoroughly processed (locally or remotely) by commercial-grade conventional (as well as advanced) 12-lead ECG software running on Microsoft Windows(TM), the Android-based software, once completed, will ""cast a wider net"" by allowing for a greater percentage of cell phone owners to participate in inexpensive, store-and-forward recordings of 12-lead ECGs worldwide, including for example Android cell phone users in many remote, third-world locations. At the time of writing, the Android 12-lead ECG software platform consists of a basic but expanding graphical user interface and accompanying software that: 1) wirelessly receives the 12-lead ECG data stream from a Bluetooth-based, FDA-cleared 12-leaCG device attached to the harness; 2) locally stores the same data in binary format to the SD card on the Android cell phone; and 3) makes the data stream in available in real time, for now to TopCoder's java programming contestants.","['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20120012924,NASA Technical Reports Server (NTRS) 20120012924: The Virtual Solar Observatory: What Are We Up To Now?,N,"In the nearly ten years of a functional Virtual Solar Observatory (VSO), http://virtualsolar.org/ we have made it possible to query and access sixty-seven distinct solar data products and several event lists from nine spacecraft and fifteen observatories or observing networks. We have used existing VSO technology, and developed new software, for a distributed network of sites caching and serving SDO HMI and/ or AlA data. We have also developed an application programming interface (API) that has enabled VSO search and data access capabilities in IDL, Python, and Java. We also have quite a bit of work yet to do, including completion of the implementation of access to SDO EVE data, and access to some nineteen other data sets from space- and ground-based observatories. In addition, we have been developing a new graphic user interface that will enable the saving of user interface and search preferences. We solicit advice from the community input prioritizing our task list, and adding to it","['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20120014339,NASA Technical Reports Server (NTRS) 20120014339: Time-Resolved Data Acquisition for In Situ Subsurface Planetary Geochemistry,N,"The current gamma-ray/neutron instrumentation development effort at NASA Goddard Space Flight Center aims to extend the use of active pulsed neutron interrogation techniques to probe the subsurface geochemistry of planetary bodies in situ. All previous NASA planetary science missions, that used neutron and/or gamma-ray spectroscopy instruments, have relied on a constant neutron source produced from galactic cosmic rays. One of the distinguishing features of this effort is the inclusion of a high intensity 14.1 MeV pulsed neutron generator synchronized with a custom data acquisition system to time each event relative to the pulse. With usually only one opportunity to collect data, it is difficult to set a priori time-gating windows to obtain the best possible results. Acquiring time-tagged, event-by-event data from nuclear induced reactions provides raw data sets containing channel/energy, and event time for each gamma ray or neutron detected. The resulting data set can be plotted as a function of time or energy using optimized analysis windows after the data are acquired. Time windows can now be chosen to produce energy spectra that yield the most statistically significant and accurate elemental composition results that can be derived from the complete data set. The advantages of post-processing gamma-ray time-tagged event-by-event data in experimental tests using our prototype instrument will be demonstrated.","['NASA_NTRS_Archive', 'additional_collections']"
NASA_NTRS_Archive_20140009137,NASA Technical Reports Server (NTRS) 20140009137: Quality Assessment of Landsat Surface Reflectance Products Using MODIS Data,N,"Surface reflectance adjusted for atmospheric effects is a primary input for land cover change detection and for developing many higher level surface geophysical parameters. With the development of automated atmospheric correction algorithms, it is now feasible to produce large quantities of surface reflectance products using Landsat images. Validation of these products requires in situ measurements, which either do not exist or are difficult to obtain for most Landsat images. The surface reflectance products derived using data acquired by the Moderate Resolution Imaging Spectroradiometer (MODIS), however, have been validated more comprehensively. Because the MODIS on the Terra platform and the Landsat 7 are only half an hour apart following the same orbit, and each of the 6 Landsat spectral bands overlaps with a MODIS band, good agreements between MODIS and Landsat surface reflectance values can be considered indicators of the reliability of the Landsat products, while disagreements may suggest potential quality problems that need to be further investigated. Here we develop a system called Landsat-MODIS Consistency Checking System (LMCCS). This system automatically matches Landsat data with MODIS observations acquired on the same date over the same locations and uses them to calculate a set of agreement metrics. To maximize its portability, Java and open-source libraries were used in developing this system, and object-oriented programming (OOP) principles were followed to make it more flexible for future expansion. As a highly automated system designed to run as a stand-alone package or as a component of other Landsat data processing systems, this system can be used to assess the quality of essentially every Landsat surface reflectance image where spatially and temporally matching MODIS data are available. The effectiveness of this system was demonstrated using it to assess preliminary surface reflectance products derived using the Global Land Survey (GLS) Landsat images for the 2000 epoch. As surface reflectance likely will be a standard product for future Landsat missions, the approach developed in this study can be adapted as an operational quality assessment system for those missions.","['NASA_NTRS_Archive', 'additional_collections']"
akkaessentials0000gupt,Akka essentials ,G,"['1 online resource (517 pages)', '4. Typed Actors; What are typed actors?; Defining an actor; Creating actors; An actor with a default constructor; An actor with a non-default constructor; Messaging model; Sending messages; Fire and forget messages; Send and receive messages; Stopping actors; Actor lifecycle monitoring; Lifecycle callbacks; Receiving messages; Supervisor strategy; Creating an actor hierarchy; Dispatchers and routers; Using dispatchers; application.conf; Using routers; Summary; 5. Dispatchers and Routers; Dispatchers; Dispatcher as a pattern; Executor in Java; Dispatchers in Akka; Types of dispatcher', 'This is a step-by-step guide where each chapter will teach you a concept by explaining it with clear and lucid examples? each chapter can be read independently. This book is aimed at developers, architects who are building large distributed concurrent and scalable applications using Java/Scala. The book assumes knowledge of Java/JEE concepts but no knowledge of Actor model is assumed', '""A practical, step-by-step guide to learn and build Akka\'s actor-based, distributed, concurrent, and scalable Java applications.""', 'Includes index', ""Akka Essentials; Akka Essentials; Credits; About the Author; Acknowledgement; About the Reviewers; www.PacktPub.com; Support files, eBooks, discount offers and more; Why Subscribe?; Free Access for Packt account holders; Preface; The driving force of Akka's Actor Model; What this book covers; What you need for this book; Conventions; Reader feedback; Customer support; Downloading the example code; Errata; Piracy; Questions; 1. Introduction to Akka; Background; Microprocessor evolution; Concurrent systems; Container-based applications; Actor Model; Akka framework; Actor systems"", 'What is an actor?State; Behavior; Mailbox; Actor lifecycle; Fault tolerance; Location transparency; Transactors; Akka use cases; Summary; 2. Starting with Akka; Application requirements; Application design; Start development; Prerequisites; Java; Eclipse; Maven; Scala; Akka; Java application; Creating the Akka Maven project; Defining message classes; MapData.java; WordCount.java; ReduceData.java; Result.java; Defining actor classes; MapActor.java; ReduceActor.java; AggregateActor.java; MasterActor.java; Defining the execution class; MapReduceApplication.java; Scala application', 'Defining message classesDefining actor classes; MapActor.scala; ReduceActor.scala; AggregateActor.scala; MasterActor.scala; Defining the execution class; MapReduceApplication.scala; Summary; 3. Actors; Actors; Defining an actor; Creating actors; Actor with default constructor; Actor with non-default constructor; Creating an actor within an actor hierarchy; Messaging model; Sending messages; Fire and forget messages -- tell(); Send and receive messages -- ask(); Receiving messages; Replying to messages; Forwarding messages; Stopping actors; Killing actors; Actor lifecycle monitoring; HotSwap', 'DispatcherPinned dispatcher; Balancing dispatcher; Calling thread dispatcher; Types of mailboxes; Dispatcher usage; Thread pool executor; Fork join executor; Routers; Router usage; Router usage via application.conf; Router usage for distributed actors; Dynamically resizing routers; Custom router; Summary; 6. Supervision and Monitoring; Let It Crash; Actor hierarchy; Supervision; Supervision strategies; One-For-One strategy; All-For-One strategy; Lifecycle monitoring; Fault tolerance; Summary; 7. Software Transactional Memory; Transaction management; What is software transactional memory?', 'Print version record']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
androidapplicati0000burd,Android application development all-in-one for dummies,B,"['xx, 652 pages : 24 cm', ""As a Linux-based operating system designed for mobile devices, the Android OS allows programs to run on all Android devices and appear free in the Android Market. Whether you're a beginner programmer eager to create mobile applications or you're Android-savvy and looking to submit your apps to the Android Market, this compilation of eight minibooks takes you through the ins and outs of programming for Android phones. Java expert Barry Burd walks you through Android programming basics, shares techniques for developing great Android applications, reviews Android hardware, and much more"", '""6 books in 1""--Cover', 'Includes index', ""Book I: Android jump-start -- Book II: Android background material -- Book III: The building blocks -- Book IV: Programming cool phone features -- Book V: The job isn't done until ... -- Book VI: Alternative Android development techniques""]","['printdisabled', 'internetarchivebooks']"
beginningphonega0000ghat,Beginning PhoneGap : mobile web framework for JavaScript and HTML5,G,"['xii, 332 p. : 24 cm', 'PhoneGap is a growing and leading open-source mobile web apps development framework that lets developers build JavaScript and HTML5-based web applications with native wrappers for more than six mobile platforms, including iOS, Android, and BlackBerry. This framework lets you build HTML- and JavaScript-based apps and still take advantage of native mobile device capabilities like camera, localStorage, geolocation, storage and much more, irrespective of the mobile platform you target. It also lets you use more specialized JavaScript frameworks like jQuery Mobile and more. Beginning PhoneGap is a definitive, one-of-a-kind book that teaches the fundamentals and strategies behind cross-platform mobile application development --', '""Build JavaScript and HTML5-based web apps for more than six mobile platforms""--cover', 'Includes index', 'Introduction ---- 1. Understanding Cross-Platform Mobile Application Development --- 2. Getting Started with PhoneGap --- 3. Setting the Environment --- 4. Using PhoneGap with jQuery Mobile --- 5. Using PhoneGap with Sencha Touch --- 6. Using PhoneGap with GWT --- 7. PhoneGap Emulator and Remote Debugging --- 8. Using PhoneGap Plug-Ins --- 9. Extending PhoneGap']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
beginningprogram0000burd_i3x5,Beginning programming with Java for dummies,B,"['xviii, 436 p. : 24 cm', ""Learn Java programming the easy way and make your computer do your bidding. Even if you've never written a line of code, this friendly guide will have you ordering your computer about in no time!"", 'Previous ed.: 2005', 'Includes index', 'Revving up. Getting started ; Setting up your computer ; Running programs -- Writing your own Java programs. Exploring the parts of a program ; Composing a program ; Using the building blocks : variables, values, and types ; Numbers and types ; Numbers? Who needs numbers? -- Controlling the flow. Forks in the road ; Which was did he go? ; How to flick a virtual switch ; Around and around it goes ; Piles of files : dealing with information overload ; Creating loops within loops ; The old runaround -- Using program unites. Using lops and arrays ; Programming with objects and classes ; Using methods and variables from a Java class ; Creating new Java methods ; Oooey GUI was a worm -- The part of tens. Ten sets of web links ; Ten useful classes in the Java API']","['printdisabled', 'internetarchivebooks']"
buildingmobileap0000mari,Building mobile applications with Java ,M,"['1 online resource (viii, 72 pages) :', '""This project-driven book shows you how to build portable apps with two ... open source frameworks, Google Web Toolkit (GWT) and PhoneGap. With these tools, you\'ll learn how to write Java code that compiles into cross-platform JavaScript and HTML, and discover how to take advantage of features in several popular devices, such as the camera, accelerometer, and GPS ... [and] package your apps for iOS, webOS, and Android with PhoneGap""--Page 4 of cover', 'Greetings, mobile app developers -- Getting started with GWT -- Getting started with PhoneGap -- Customizing your app for mobile -- Building a pure mobile app with GWT Mobile UI -- Advanced mobile optimizations -- Box2D and Canvas -- Next steps', 'Print version record']","['printdisabled', 'internetarchivebooks', 'inlibrary']"
certoraclesecure0000unse,The CERT Oracle secure coding standard for Java,Unknown Author,"['xxxiv, 699 p. ; 23 cm', 'Includes bibliographical references and index']","['printdisabled', 'internetarchivebooks']"
cloudstandardsag0000wasc,Cloud standards : agreements that hold together clouds,W,"['xviii, 360 pages : 23 cm', '""Cloud computing is often described as providing computing resources the way electric utilities provide energy. In theory, anyone with an adequate connection to the Internet should be able to tap into a cloud provider and get exactly the computing resources they want when they want it, just like plugging into the electricity grid and getting exactly the energy you want when you want it. But to get that electricity, there are many standards: voltage, frequency, phase, motors constructed in standard ways. There is an equally long list for cloud computing. Many of the standards are already in place. Others are being developed; some in contention. Cloud Standards is a broad discussion of important existing and future standards. For existing standards, the discussion focuses on how they are used, providing practical advice to engineers constructing clouds and services to be deployed on clouds. For future standards, the discussion is on why a standard is needed, what the benefits will be, and what is being done now to fill the gap. No current book provides this information in the depth and detail necessary for an engineer in his work, an architect in designing cloud systems, a product manager collecting and evaluating products, or an executive evaluating the feasibility of a project. A second benefit from this book is that it provides insight into cloud implementations. Cloud implementations can be seen as the culmination of many trends in software and hardware engineering. Much of the foundation for these developments have been crystallized in the form of standards like TCP/IP (Transmission Control Protocol/Internet Protocol) and HTTP (Hypertext Transmission Protocol). The book leads readers to understand how these contribute to and affect cloud implementations. Unfortunately, emerging standards are often messy. Cloud implementers may need to choose between competing proposed standards. Sometimes it is better to reject the standard entirely and ""roll your own."" This book provides background for intelligent decisions. Keeping a cloud, or an application implemented on a cloud, running well requires careful tuning of the implementation. Tuning often involves adjusting controls that are in the standard or applying the standard in less well-known ways. This book is an aid in tuning cloud systems for maximum benefits. Readers will be aided by familiarity with basic programming practices and common software engineering tools like Java and XML, although this knowledge is not required. What you\'ll learn * A reader should take away the ability to identify the appropriate standards to apply in all aspects of cloud implementations and the design and construction of software to be deployed on the cloud. * Users will learn how to apply the standards once they are identified, and the strengths of specific standards. * Since standards are at the foundation of many aspects of cloud computing, readers will also gain a greater understanding of how the cloud works, as well as its strengths and vulnerabilities. Who this book is for Cloud Standards is aimed at trained software engineers, architects, product managers, and knowledgeable executives who are accustomed to working in an enterprise IT environment.""--Publisher information', 'Includes index', 'Setting the scene -- Standards -- Cloud -- Security and governance -- Cloud implementation -- Cloud storage and cloud network -- A map of cloud standards -- Storage standards -- Network and internet standards -- The internet application layer and the cloud -- Cloud-specific standards -- Conclusion']","['inlibrary', 'printdisabled', 'marygrovecollege', 'internetarchivebooks', 'americana']"
emacsman,GNU Emacs Manual,R,"<p style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">GNU Emacs is much more than a text editor; over the years it has expanded into an entire work flow environment. Programmers are impressed by its integrated debugging and project management features. Emacs is also a multi-lingual text editor, can handle all your email and Usenet news needs, display web pages, and even has a diary and a calendar for your appointments. When you tire of all the work you can accomplish with it, Emacs contains games to play.</p><p style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">Features include:</p><ul style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;""><li>Special editing modes for 25 programming languages including Java, Perl, C, C++, Objective C, Fortran, Lisp, Scheme, and Pascal.</li><li>Special scripting language modes for Bash, other common shells, and creating Makefiles for GNU/Linux, Unix, Windows/DOS and VMS systems</li><li>Support for typing and displaying in 21 non-English languages, including Chinese, Czech, Hindi, Hebrew, Russian, Vietnamese, and all Western European languages</li><li>Creates Postscript output from plain text files and has special editing modes for LaTeX and TeX</li><li>Compile and debug from inside Emacs</li><li>Maintain extensive ChangeLogs</li><li>Extensive file merge and diff functions</li><li>Directory navigation: flag, move, and delete files and sub-directories recursively</li><li>Run shell commands from inside Emacs, or even use Emacs as a shell itself (Eshell)</li><li>Version control management for release and beta versions, with CVS and RCS integration.</li><li>And much more!</li></ul><p style=""color:rgb(61,78,83);font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Arial, Helvetica, sans-serif;font-size:13px;line-height:16.8999996185303px;"">This book picks up where the introductory on-line tutorial, available in several languages, included with Emacs, ends. It explains the full range of Emacs' power and contains reference material useful to expert users. Appendices with specific material for Macintosh and Microsoft OS users are included. Print copies can be ordered from <a href=""http://shop.fsf.org/product/Emacs_Manual_24/"" style=""font-weight:bold;font-size:inherit;text-decoration:none;color:rgb(105,148,163);"" rel=""nofollow"">The Free Software Foundation.</a> Archived by <a href=""https://unglue.it/work/80666/"" rel=""nofollow"">Unglue.it</a></p>","['manuals_various', 'manuals', 'additional_collections']"
gettingstartedwi0000leib,Getting started with Storm,L,"['1 online resource (1 volume) :', ""Even as big data is turning the world upside down, the next phase of the revolution is already taking shape: real-time data analysis. This hands-on guide introduces you to Storm, a distributed, JVM-based system for processing streaming data. Through simple tutorials, sample Java code, and a complete real-world scenario, you'll learn how to build fast, fault-tolerant solutions that process results as soon as the data arrives. Discover how easy it is to set up Storm clusters for solving various problems, including continuous data computation, distributed remote procedure calls, and data stream processing. Learn how to program Storm components: spouts for data input and bolts for data transformation Discover how data is exchanged between spouts and bolts in a Storm topology Make spouts fault-tolerant with several commonly used design strategies Explore bolts--their life cycle, strategies for design, and ways to implement them Scale your solution by defining each component's level of parallelism Study a real-time web analytics system built with Node.js, a Redis server, and a Storm topology Write spouts and bolts with non-JVM languages such as Python, Ruby, and Javascript"", 'Print version record']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
gradleeffectivei0000ikki,Gradle Effective Implementation Guide,I,"['1 online resource (561 pages)', ""Written in Packt's tutorial format the hands on examples and real life applications that will guide you through Gradle and give you the knowledge to use it every day. If you are a Java developer who wants to automate compiling, packaging and deploying your application this book is for you"", 'Gradle Effective Implementation Guide; Gradle Effective Implementation Guide; Credits; About the Author; Acknowledgement; About the Reviewers; www.PacktPub.com; Support files, eBooks, discount offers and more; Why Subscribe?; Free Access for Packt account holders; Preface; What this book covers; What you need for this book; Who this book is for; Conventions; Reader feedback; Customer support; Downloading the example code; Errata; Piracy; Questions; 1. Starting with Gradle; Introducing Gradle; Declarative builds and convention over configuration; Support for Ant tasks and Maven repositories', 'Incremental buildsMulti-project builds; Gradle wrapper; Free and open source; Getting started; Installing Gradle; Writing our first build script; Default Gradle tasks; Task name abbreviation; Executing multiple tasks; Command-line options; Logging options; Changing the build file and directory; Running tasks without execution; Gradle daemon; Profiling; Understanding the Gradle user interface; Task Tree; Favorites; Command Line; Setup; Summary; 2. Creating Gradle Build Scripts; Writing a build script; Defining tasks; Defining actions with the Action interface; Build scripts are Groovy code', 'Defining dependencies between tasksDefining dependencies via tasks; Defining dependencies via closures; Setting default tasks; Organizing tasks; Adding a description to tasks; Grouping tasks together; Adding tasks in other ways; Using task rules; Accessing tasks as project properties; Adding additional properties to tasks; Avoiding common pitfalls; Skipping tasks; Using onlyIf predicates; Skipping tasks by throwing StopExecutionException; Enabling and disabling tasks; Skipping from the command line; Skipping tasks that are up-to-date; Summary; 3. Working with Gradle Build Scripts', 'Working with filesLocating files; Using file collections; Working with file trees; Copying files; Renaming files; Filtering files; Archiving files; Project properties; Defining custom properties in script; Passing properties via the command line; Defining properties via system properties; Adding properties via environment variables; Defining properties using an external file; Using logging; Controlling output; Using the Gradle wrapper; Creating wrapper scripts; Customizing the Gradle wrapper; Summary; 4. Using Gradle for Java Projects; Using plugins; Getting started; Using the Java plugin', 'Working with source setsCreating a new source set; Custom configuration; Working with properties; Creating documentation; Assembling archives; Summary; 5. Dependency Management; Dependency configuration; Repositories; Adding Maven repositories; Adding Ivy repositories; Adding a local directory repository; Defining dependencies; Using external module dependencies; Using project dependencies; Using file dependencies; Using client module dependencies; Using Gradle and Groovy dependencies; Accessing configuration dependencies; Setting dynamic versions; Resolving version conflicts', 'Adding optional ANT tasks', 'Print version record']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
guidetoprogrammi0000marr,A guide to programming in Java ,M,"['xii, 372 pages : 29 cm', '""The clearest and most comprehensive Java text available. The Primary objective in this text is to present material in clear language and easy to follow examples.""--Preface', 'Revised edition of: Guide to programming in Java / Beth Brown. c2007. 2nd ed', 'Includes index', 'Computer technology -- Introduction to Java -- Variables amd constants -- Conditional control structures -- Loop structures and strings -- Methods -- Classes ad object-oriented development -- Inheritance and polymorphism -- Arrays -- GUIs and event-driven programming -- Files and exception handling -- Recursion and advanced algorithms -- Data structures']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
introductiontopr0000dosr,An introduction to programming using Java ,D,"['xiii, 448 p. : 24 cm', 'Includes index', 'Includes bibliographical references and index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
introductiontopr0000dosr_l4m1,An introduction to programming using Java ,D,"['xiii, 448 pages : 24 cm', '""Ideal for the introductory programming course, An Introduction to Programming Using Java covers all recommended topics put forth by the ACM/IEEE curriculum guidelines in a concise format that is perfect for the one-term course. An integrated lab manual enhances the learning process by providing real-world, hands-on projects. This unique approach allows readers to test their understanding of the key material at hand. Sample exams urge readers to assess their progress through the course and are ideal study aids for in-class testing. The author\'s innovative, accessible approach engages and excites students on the capabilities of programming using Java!""--Publisher\'s description', 'Includes index', 'Includes bibliographical references and index', 'Two simple Java programs -- Constants, variables, and operators -- Primitive types and casts -- if, if-else, and while statements -- Calling methods -- Constructing objects: part 1 -- Constructing objects: part 2 -- Using predefined classes -- Arrays, arraylists, sorting, and searching -- Inheritance: part 1 -- Inheritance: part 2 -- Exception handling -- File processing -- Recursive method -- Linked data structures -- Generic programming: part 1 -- Generic programming: part 2 -- Graphic user interfaces and applets']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
introductiontopr0000marr_i3w4,An introduction to programming using Microsoft Visual Basic 2010 ,M,"['xiv, 482 p. : 28 cm. +', 'An Introduction to Programming Using Visual Basic 2010 emphasizes good problem-solving and programming skills in a clear, easy-to-understand format. Object-oriented programming concepts are integrated throughout the text and each chapter explains the use of Visual Basic controls. Example Applications throughout the text demonstrate important programming concepts and are complete with runs that show outputs. Written and classroom tested by experienced programming teachers, our Visual Basic 2010 text describes many of the practical applications of Visual Basic and includes: Core programming concepts; Using built-in classes; Color, sound, and graphics; Business functions; Creating classes and understanding instantiation, encapsulation, inheritance, and polymorph ism; Manipulating files; MDI applications; Databases and Web Programming. An Introduction to Programming Using Visual Basic 2010 is an excellent text for an introductory programming course in a sequence leading to Java. - Publisher', 'Includes index', 'Computer technology -- Introducing Visual Basic -- Variables and constants -- Controlling program flow with decision structures -- Controlling program flow with looping structures -- Procedures -- Mathematical and business functions -- Arrays and structures -- Color, sound, and graphics -- Creating classes -- Using files -- Sorting and searching -- MDI applications -- Databases and web programming -- Appendix A: Visual Basic for applications (VBA)']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javachengxusheji0003unse,Java cheng xu she ji jiao cheng = Programming in Java,Unknown Author,"['285 pages : 26 cm', 'Includes bibliographical references']","['inlibrary', 'printdisabled', 'popularchinesebooks', 'internetarchivebooks']"
javaee6cookbookf0000knut,"Java EE 6 cookbook for securing, tuning, and extending enterprise applications : packed with comprehensive recipes to secure, tune, and extend your Java EE applications ",K,"['1 online resource (iii, 338 pages)', '""Professional experience distilled.""', 'Includes index', 'Chapter 1: Out with the old, in with the new -- ch. 2: Enterprise persistence -- ch. 3: Security -- ch. 4: Enterprise testing strategies -- ch. 5: Extending enterprise applications -- ch. 6: Enterprise mobile device integration -- ch. 7: Deployment and configuration -- ch. 8: Performance and debugging', 'Print version record']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaee6pocketgui0000gupt,Java EE 6 pocket guide ,G,"['xii, 194 p. ; 18 cm', '""A quick reference for simplified Enterprise Java development""--cover', 'Includes bibliographical references (p. 179-181) and index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaee7recipespr0000june,Java EE 7 recipes : a problem-solution approach ,J,"['1 online resource', 'Java EE 7 Recipes takes an example-based approach in showing how to program Enterprise Java applications in many different scenarios. Be it a small-business web application, or an enterprise database application, Java EE 7 Recipes provides effective and proven solutions to accomplish just about any task that you may encounter. You can feel confident using the reliable solutions that are demonstrated in this book in your personal or corporate environment. The solutions in Java EE 7 Recipes are built using the most current Java Enterprise specifications, including EJB 3.2, JSF 2.2, Expression Language 3.0, Servlet 3.1, and JMS 2.0. While older technologies and frameworks exist, it is important to be forward-looking and take advantage of all that the latest technologies offer. Rejuvenate your Java expertise to use the freshest capabilities, or perhaps learn Java Enterprise development for the first time and discover one of the most widely used and most powerful platforms available for application development today. Let Java EE 7 Recipes show you the way by showing how to build streamlined and reliable applications much faster and easier than ever before by making effective use of the latest frameworks and features on offer in the Java EE 7 release. Shows off the most current Java Enterprise Edition technologies. Provides solutions to creating sophisticated user interfaces. Demonstrates proven solutions for effective database access', 'Online resource; title from PDF title page (EBSCO, viewed November 29, 2017)', 'Includes index']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
javaeedevelopmen0000vohr,Java EE development with Eclipse ,V,"['1 online resource (1 volume) :', 'Develop Java EE applications with Eclipse and commonly used technologies and frameworks', 'Online resource; title from cover', 'Table of Contents; Java EE Development with Eclipse; Java EE Development with Eclipse; Credits; About the Author; About the Reviewers; www.PacktPub.com; Support files, eBooks, discount offers and more; Why Subscribe?; Free Access for Packt account holders; Instant Updates on New Packt Books; Preface; What this book covers; What you need for this book; Who this book is for; Conventions; Reader feedback; Customer support; Downloading the example code; Errata; Piracy; Questions; Copyright Credits; 1. EJB 3.0 Database Persistence; Configuring a data source; Creating tables in the Oracle database', 'Creating an EJB projectAdding the JPA facet; Creating entity beans from tables; Defining entity relationships; Setting cascade; Generating default entities; Creating the Catalog entity; The Catalog entity class; Creating the Edition entity; The Edition entity class; Creating the Section entity; The Section entity class; Creating the Article entity; The Article entity class; Creating the JPA persistence configuration file; Creating a session bean facade; Creating an EntityManager; Specifying getter methods; Creating test data; The session bean class; The remote business interface', 'Creating the application.xml descriptorCreating a test client; The catalog.jsp file; Packaging and deploying the entity bean application; The build script; Running the build script; Testing the JSP client; Summary; 2. O/X Mapping with JAXB 2.x; JAXB 2.x advantages; Creating a JAXB project; Creating an XML Schema; Compiling the XML Schema; Marshalling an XML document; Unmarshalling an XML document; Java to XML mapping; Summary; 3. Developing a Web Project for JasperReports; Setting the environment; Creating a Dynamic Web project in Eclipse; Creating the configuration file', 'Creating a web applicationCreating a report design; Setting the report title; Creating a JDBC connection; Generating a PDF report; Creating an Excel report; Packaging and deploying the web application; Running the web application; Summary; 4. Creating a JSF Data Table; Setting the environment; Creating a web project; Creating a managed bean; Constructing the managed bean class; The managed bean class; Creating a JSF page; Adding components to the JSF page; The JSF page; Running the JSF page; Summary; 5. Templating with Facelets; Facelets structure; Setting the environment', 'Configuring JSF 2.0 support in WLSCreating a Facelets project; Creating a managed bean; Creating a Facelets template; Creating Facelets; Creating navigation; Running the Facelets application; Summary; 6. Creating Apache Trinidad User Interfaces; Configuring Trinidad; Setting the environment; Creating a Trinidad project; Creating Trinidad UIs; Creating a managed bean; Adding Trinidad components; Running the Trinidad application; Summary; 7. Creating an AJAX Application; Setting the environment; Creating a Dynamic Web project; Creating a web application for AJAX; Creating a servlet']","['inlibrary', 'printdisabled', 'internetarchivebooks']"
